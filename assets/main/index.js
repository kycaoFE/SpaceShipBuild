System.register("chunks:///_virtual/AlignFullScreenButton.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, log, sys, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      log = module.log;
      sys = module.sys;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "4607cFKlhRB97qftGoKlR4P", "AlignFullScreenButton", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var AlignFullScreenButton = exports('AlignFullScreenButton', (_dec = ccclass('AlignFullScreenButton'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AlignFullScreenButton, _Component);

        function AlignFullScreenButton() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.alignFunc = null;

          _initializerDefineProperty(_this, "position", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = AlignFullScreenButton.prototype;

        _proto.onLoad = function onLoad() {
          this.node.on('UPDATE_POSITION', this.updatePosition.bind(this));
        };

        _proto.start = function start() {
          this.updatePosition();
        };

        _proto.updatePosition = function updatePosition() {
          log('update button position ' + this.position);

          if (sys.isBrowser && sys.isMobile) {
            if (this.position == "TOP_RIGHT") {
              this.alignFunc = this.alignTopRight.bind(this);
            } else if (this.position == "BOT_LEFT") {
              this.alignFunc = this.alignBotLeft.bind(this);
            } else if (this.position == "BOT_LEFT_23") {
              this.alignFunc = this.alignBotLeft23.bind(this);
            } else if (this.position == "CENTER_LEFT") {
              this.alignFunc = this.alignCenterLeft.bind(this);
            } //add your align here


            if (this.alignFunc) {
              this.alignFunc();
              window.addEventListener('resize', this.alignFunc);
            }
          }
        };

        _proto.alignTopRight = function alignTopRight() {
          var enterFullscreen = document.getElementById('enterFullscreen');
          var exitFullscreen = document.getElementById('exitFullscreen');

          if (window.innerWidth > window.innerHeight) {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("alignTopRight");
              exitFullscreen.classList.add("alignTopRight");
            }
          } else {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("alignBotRight");
              exitFullscreen.classList.add("alignBotRight");
            }
          }
        };

        _proto.alignBotLeft = function alignBotLeft() {
          var enterFullscreen = document.getElementById('enterFullscreen');
          var exitFullscreen = document.getElementById('exitFullscreen');

          if (window.innerWidth > window.innerHeight) {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("alignBotLeft");
              exitFullscreen.classList.add("alignBotLeft");
            }
          } else {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("alignTopLeft");
              exitFullscreen.classList.add("alignTopLeft");
            }
          }
        };

        _proto.alignBotLeft23 = function alignBotLeft23() {
          var enterFullscreen = document.getElementById('enterFullscreen');
          var exitFullscreen = document.getElementById('exitFullscreen');

          if (window.innerWidth > window.innerHeight) {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("alignBotLeft23");
              exitFullscreen.classList.add("alignBotLeft23");
            }
          } else {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("alignTopLeft23");
              exitFullscreen.classList.add("alignTopLeft23");
            }
          }
        };

        _proto.alignCenterLeft = function alignCenterLeft() {
          var enterFullscreen = document.getElementById('enterFullscreen');
          var exitFullscreen = document.getElementById('exitFullscreen');

          if (window.innerWidth > window.innerHeight) {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("enterFullScreen_Landscape");
              exitFullscreen.classList.add("exitFullScreen_Landscape");
            }
          } else {
            if (enterFullscreen && exitFullscreen) {
              this.removeAllClass(enterFullscreen);
              this.removeAllClass(exitFullscreen);
              enterFullscreen.classList.add("enterFullScreen_Portrait");
              exitFullscreen.classList.add("exitFullScreen_Portrait");
            }
          }
        };

        _proto.removeAllClass = function removeAllClass(element) {
          element.classList.remove('alignTopRight', 'alignBotRight', 'alignTopLeft', 'alignBotLeft', 'exitFullscreen_Landscape', 'exitFullScreen_Portrait', 'alignBotLeft23', 'alignTopLeft23', 'enterFullScreen_Landscape', 'enterFullScreen_Portrait');
        };

        _proto.onDestroy = function onDestroy() {
          if (sys.isBrowser && sys.isMobile && this.alignFunc) {
            window.removeEventListener('resize', this.alignFunc);
          }
        };

        return AlignFullScreenButton;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "position", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "TOP_RIGHT";
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/animateNumberLabel.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './utils.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Label, Component, formatMoney, formatWalletMoney;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Component = module.Component;
    }, function (module) {
      formatMoney = module.formatMoney;
      formatWalletMoney = module.formatWalletMoney;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "4eb529uDf5AQaMqTM8WSBKT", "animateNumberLabel", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var AnimateNumberLabel = exports('AnimateNumberLabel', (_dec = ccclass('AnimateNumberLabel'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AnimateNumberLabel, _Component);

        function AnimateNumberLabel() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.currentValue = void 0;
          _this.timer = void 0;
          return _this;
        }

        var _proto = AnimateNumberLabel.prototype;

        _proto.onLoad = function onLoad() {
          this.node.onUpdateValue = this.onUpdateValue.bind(this);
          this.node.onUpdateWallet = this.onUpdateWallet.bind(this);
          this.node.onUpdateWinValue = this.onUpdateWinValue.bind(this);
          this.node.resetValue = this.resetValue.bind(this);
        };

        _proto.resetValue = function resetValue() {
          if (!this.node) return;
          clearInterval(this.timer);
          var label = this.node.getComponent(Label);
          label.string = '';
          this.currentValue = 0;
        };

        _proto.onUpdateValue = function onUpdateValue(end, animationDuration, acceptRunDown, prefix, suffixes) {
          var _this2 = this;

          if (animationDuration === void 0) {
            animationDuration = 3000;
          }

          if (acceptRunDown === void 0) {
            acceptRunDown = true;
          }

          if (prefix === void 0) {
            prefix = "";
          }

          if (suffixes === void 0) {
            suffixes = "";
          }

          clearInterval(this.timer);
          if (!this.node) return;
          var label = this.node.getComponent(Label);
          var start = this.currentValue ? this.currentValue : 0;

          if (!acceptRunDown && end < start) {
            this.currentValue = end;
            label.string = prefix + formatMoney(this.currentValue) + suffixes;
            return;
          } // assumes integer values for start and end


          var range = end - start; // no timer shorter than 50ms (not really visible any way)

          var minTimer = 50; // calc step time to show all interediate values

          var stepTime = Math.abs(Math.floor(animationDuration / range)); // never go below minTimer

          stepTime = Math.max(stepTime, minTimer); // get current time and calculate desired end time

          var startTime = new Date().getTime();
          var endTime = startTime + animationDuration;
          this.timer;

          var run = function run() {
            var now = new Date().getTime();
            var remaining = Math.max((endTime - now) / animationDuration, 0);
            var value = Math.round(end - remaining * range);
            _this2.currentValue = value;
            label.string = prefix + formatMoney(value) + suffixes;

            if (value == end) {
              clearInterval(_this2.timer);
            }
          };

          this.timer = setInterval(run, stepTime);
          run();
        };

        _proto.onUpdateWinValue = function onUpdateWinValue(end, animationDuration, callbackWin, isSkip, millisecond, timeUpdate, superWinRate, megaWinRate) {
          var _this3 = this;

          if (animationDuration === void 0) {
            animationDuration = 3000;
          }

          if (millisecond === void 0) {
            millisecond = 1000;
          }

          if (timeUpdate === void 0) {
            timeUpdate = 50;
          }

          if (superWinRate === void 0) {
            superWinRate = 50;
          }

          if (megaWinRate === void 0) {
            megaWinRate = 30;
          }

          clearInterval(this.timer);
          if (!this.node) return;
          var timeRate = millisecond / timeUpdate;
          this.currentValue = this.currentValue || 0;
          var valuePerTimes = Math.round(end / (animationDuration / millisecond * timeRate)); // a = ((s - v0 * t) * 2) / t^2

          var valueAccelerator = (end - valuePerTimes * timeUpdate) * 2 / Math.pow(timeUpdate, 2);

          var run = function run() {
            var label = _this3.node.getComponent(Label);

            _this3.currentValue = Math.round(_this3.currentValue <= end / 2 ? _this3.currentValue + valuePerTimes + valueAccelerator : _this3.currentValue + valuePerTimes - valueAccelerator);
            var value = _this3.currentValue;
            label.string = '' + formatMoney(value >= end ? end : value);
            var isSuper = end >= callbackWin.currentBetData * superWinRate;
            var isMega = end >= callbackWin.currentBetData * megaWinRate;
            var finalWin = isSuper ? 'super' : isMega ? 'mega' : 'big';
            var per = value / end;
            per = per > 1 ? 1 : per;
            callbackWin.enterFrame(per, finalWin);

            if (value >= callbackWin.currentBetData * superWinRate && !isSkip) {
              callbackWin.runSuperWin();
            } else if (value >= callbackWin.currentBetData * megaWinRate && !isSkip) {
              callbackWin.runMegaWin();
            } else if (value + callbackWin.currentBetData * 2 == end && !isSkip) {
              callbackWin.runFinishBigWin();
            }

            if (value >= end) {
              callbackWin.runFinishWin();
              clearInterval(_this3.timer);
            }
          };

          this.timer = setInterval(run, timeUpdate);
          run();
        };

        _proto.onUpdateWallet = function onUpdateWallet(end, animationDuration) {
          var _this4 = this;

          if (animationDuration === void 0) {
            animationDuration = 3000;
          }

          clearInterval(this.timer);
          if (!this.node) return;
          var label = this.node.getComponent(Label);
          var start = this.currentValue ? this.currentValue : 0; // assumes integer values for start and end

          var range = end - start; // no timer shorter than 50ms (not really visible any way)

          var minTimer = 50; // calc step time to show all interediate values

          var stepTime = Math.abs(Math.floor(animationDuration / range)); // never go below minTimer

          stepTime = Math.max(stepTime, minTimer); // get current time and calculate desired end time

          var startTime = new Date().getTime();
          var endTime = startTime + animationDuration;
          this.timer;

          var run = function run() {
            var now = new Date().getTime();
            var remaining = Math.max((endTime - now) / animationDuration, 0);
            var value = Math.round(end - remaining * range);
            _this4.currentValue = value;
            label.string = '' + formatWalletMoney(value);

            if (value == end) {
              clearInterval(_this4.timer);
            }
          };

          this.timer = setInterval(run, stepTime);
          run();
        };

        _proto.onDestroy = function onDestroy() {
          clearInterval(this.timer);
        };

        return AnimateNumberLabel;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AnimationCacheConfig.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _initializerDefineProperty, _inheritsLoose, _assertThisInitialized, cclegacy, _decorator, Enum, sp, sys, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _initializerDefineProperty = module.initializerDefineProperty;
      _inheritsLoose = module.inheritsLoose;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Enum = module.Enum;
      sp = module.sp;
      sys = module.sys;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _dec4, _dec5, _dec6, _dec7, _class4, _class5, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "c4f88vC9N1B/o44RqT9YRau", "AnimationCacheConfig", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property,
          requireComponent = _decorator.requireComponent;
      var PlatformType = exports('PlatformType', /*#__PURE__*/function (PlatformType) {
        PlatformType[PlatformType["NATIVE_WINDOWS"] = 0] = "NATIVE_WINDOWS";
        PlatformType[PlatformType["NATIVE_LINUS"] = 1] = "NATIVE_LINUS";
        PlatformType[PlatformType["NATIVE_MACOS"] = 2] = "NATIVE_MACOS";
        PlatformType[PlatformType["NATIVE_ANDROID"] = 3] = "NATIVE_ANDROID";
        PlatformType[PlatformType["NATIVE_IPHONE"] = 4] = "NATIVE_IPHONE";
        PlatformType[PlatformType["NATIVE_IPAD"] = 5] = "NATIVE_IPAD";
        PlatformType[PlatformType["NATIVE_UNKNOWN"] = 999] = "NATIVE_UNKNOWN";
        PlatformType[PlatformType["WEB_MOBILE"] = 100] = "WEB_MOBILE";
        PlatformType[PlatformType["WEB_DESKTOP"] = 101] = "WEB_DESKTOP";
        PlatformType[PlatformType["OTHER"] = 9999] = "OTHER";
        return PlatformType;
      }({}));
      Enum(PlatformType);
      var CacheConfigData = exports('CacheConfigData', (_dec = ccclass("CacheConfigData"), _dec2 = property({
        type: PlatformType
      }), _dec3 = property({
        type: sp.AnimationCacheMode
      }), _dec(_class = (_class2 = function CacheConfigData() {
        _initializerDefineProperty(this, "platformType", _descriptor, this);

        _initializerDefineProperty(this, "cacheMode", _descriptor2, this);
      }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "platformType", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return PlatformType.WEB_MOBILE;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "cacheMode", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return sp.AnimationCacheMode.REALTIME;
        }
      })), _class2)) || _class));
      var AnimationCacheConfig = exports('AnimationCacheConfig', (_dec4 = ccclass('AnimationCacheConfig'), _dec5 = requireComponent(sp.Skeleton), _dec6 = property({
        type: CacheConfigData
      }), _dec7 = property({
        type: CacheConfigData
      }), _dec4(_class4 = _dec5(_class4 = (_class5 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AnimationCacheConfig, _Component);

        function AnimationCacheConfig() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "configs", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "fallBackConfig", _descriptor4, _assertThisInitialized(_this));

          _this.spineSkeleton = null;
          return _this;
        }

        var _proto = AnimationCacheConfig.prototype;

        _proto.onEnable = function onEnable() {
          if (!this.spineSkeleton) this.spineSkeleton = this.getComponent(sp.Skeleton);
          var hasConfig = false;

          for (var i = 0; i < this.configs.length; i++) {
            var config = this.configs[i];

            if (config && Number(config.platformType) === Number(sys.platform)) {
              this.spineSkeleton.setAnimationCacheMode(config.cacheMode);
              hasConfig = true;
              break;
            }
          }

          if (!hasConfig) {
            this.spineSkeleton.setAnimationCacheMode(this.fallBackConfig.cacheMode);
          }
        };

        return AnimationCacheConfig;
      }(Component), (_descriptor3 = _applyDecoratedDescriptor(_class5.prototype, "configs", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class5.prototype, "fallBackConfig", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class5)) || _class4) || _class4));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AnimUtils.ts", ['cc', './utils.ts'], function (exports) {
  var cclegacy, UIOpacity, tween, formatMoney;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
    }, function (module) {
      formatMoney = module.formatMoney;
    }],
    execute: function () {
      exports({
        fadeIn: fadeIn,
        fadeOut: fadeOut,
        fadeTo: fadeTo,
        getOpacity: getOpacity,
        setOpacity: setOpacity,
        tweenMoney: tweenMoney
      });

      cclegacy._RF.push({}, "815ccOKTWNAjKVvmajqY+tC", "AnimUtils", undefined);

      function fadeTo(target, duration, opacity, options) {
        var uiOpacity = target.getComponent(UIOpacity);
        if (uiOpacity === null) uiOpacity = target.addComponent(UIOpacity);
        var tweenFade = tween(uiOpacity);
        tweenFade.to(duration, {
          opacity: opacity
        }, options).start();
        target.tweenFade = tweenFade;
        return tweenFade;
      }

      function fadeIn(target, duration, options) {
        return fadeTo(target, duration, 255, options);
      }

      function fadeOut(target, duration, options) {
        return fadeTo(target, duration, 0, options);
      }

      function getOpacity(node) {
        var uiOpacity = node.getComponent(UIOpacity);
        if (uiOpacity === null) uiOpacity = node.addComponent(UIOpacity);
        return uiOpacity.opacity;
      }

      function setOpacity(node, opacity) {
        var uiOpacity = node.getComponent(UIOpacity);
        if (uiOpacity === null) uiOpacity = node.addComponent(UIOpacity);
        uiOpacity.opacity = opacity;
      }

      function tweenMoney(label, duration, endValue, options) {
        if (label["_tweenMoney"]) label["_tweenMoney"].stop(); // stop if on tween;

        var currentVal = parseInt(label.string.replace(/[,.]/g, "")) || 0;
        var _target = {
          value: currentVal
        };
        options = options || {};

        options.onUpdate = function () {
          label.string = formatMoney(Math.round(_target.value));
        };

        var tweenMoney = tween(_target).to(duration, {
          value: endValue
        }, options).call(function () {
          label["_tweenMoney"] = null;
        }).start();
        label["_tweenMoney"] = tweenMoney;
        return tweenMoney;
      }

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AntialiasConfig.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, sys, macro, log, Component;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      sys = module.sys;
      macro = module.macro;
      log = module.log;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "91475cv2pxCx7TABC+Sdx/j", "AntialiasConfig", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property; // SET ENABLE_WEBGL_ANTIALIAS HERE

      if (sys.isNative) macro.ENABLE_WEBGL_ANTIALIAS = false;
      log("ENABLE_WEBGL_ANTIALIAS " + macro.ENABLE_WEBGL_ANTIALIAS);
      var AntialiasConfig = exports('AntialiasConfig', (_dec = ccclass('AntialiasConfig'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AntialiasConfig, _Component);

        function AntialiasConfig() {
          return _Component.apply(this, arguments) || this;
        }

        return AntialiasConfig;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/appConfig-debug.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "9d3edZk2hBPY5oEII46ZI4t", "appConfig-debug", undefined);

      var urlConstant = exports('urlConstant', {});

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/appConfig.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "650e3JfT9RA5IR1piMVkU5L", "appConfig", undefined);

      var urlConstant = exports('urlConstant', {
        API_URL: "https://api.staging.enostd.gay/",
        SOCKET_URL: "wss://sock.staging.enostd.gay",
        USER_TOKEN: "user_token",
        LOGIN_IFRAME: true,
        // TOKEN: 'kycao',
        URL_TOKEN: 'token',
        URL_CODE: 'code',
        LOBBY_SCENE_NAME: "lobby-staging-test",
        LOGIN_SCENE_NAME: "login-staging-test",
        IPMaster1: "wss://staging.fish.enostd.gay/lobby/",
        IPMaster88: "wss://dev.fish.enostd.gay/lobby-1993/",
        // IPMaster88: "wss://staging.fish.enostd.gay/lobby-1993/"
        IPMaster12: "wss://dev.damstd.xyz/lobby-1985/"
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AstronautController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, RigidBody2D, Vec2, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      RigidBody2D = module.RigidBody2D;
      Vec2 = module.Vec2;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "c662fFb+8hNHLh5/ps585ok", "AstronautController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var AstronautController = exports('AstronautController', (_dec = ccclass('AstronautController'), _dec2 = property(RigidBody2D), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AstronautController, _Component);

        function AstronautController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "rigid", _descriptor, _assertThisInitialized(_this));

          _this.force = new Vec2(-300, 1000);
          return _this;
        }

        var _proto = AstronautController.prototype;

        _proto.start = function start() {
          this.jumpOut();
        };

        _proto.jumpOut = function jumpOut() {
          var _this2 = this;

          this.rigid.applyForceToCenter(this.force, true);
          this.scheduleOnce(function () {
            _this2.node.destroy();
          }, 2.5);
        };

        return AstronautController;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "rigid", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/AudioClipDatabase.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './CustomTypeShare.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Component, CustomAudioClip, CustomEvent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Component = module.Component;
    }, function (module) {
      CustomAudioClip = module.CustomAudioClip;
      CustomEvent = module.CustomEvent;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "407a4S8Y3ZDSKdNroZdcVMR", "AudioClipDatabase", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var AudioClipDatabase = exports('AudioClipDatabase', (_dec = ccclass('AudioClipDatabase'), _dec2 = property(CustomAudioClip), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(AudioClipDatabase, _Component);

        function AudioClipDatabase() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "audioList", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = AudioClipDatabase.prototype;

        _proto.onEnable = function onEnable() {
          this.node.dispatchEvent(new CustomEvent("SET_UP_AUDIO_DATABASE", true, {
            audioList: this.audioList
          }));
        };

        _proto.onDisable = function onDisable() {
          this.node.dispatchEvent(new CustomEvent("SET_UP_AUDIO_DATABASE", true, {
            audioList: null
          }));
        };

        return AudioClipDatabase;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "audioList", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BackSceneController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Data.ts', './gaEventEmitter.ts', './EventCode.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Vec3, Component, Data, gaEventEmitter, EventCode;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Vec3 = module.Vec3;
      Component = module.Component;
    }, function (module) {
      Data = module.Data;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      EventCode = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "a10ea2TBv9KbKg0utksBi2h", "BackSceneController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var BackSceneController = exports('BackSceneController', (_dec = ccclass('BackSceneController'), _dec2 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BackSceneController, _Component);

        function BackSceneController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "Ship", _descriptor, _assertThisInitialized(_this));

          _this.speed = void 0;
          _this.isFly = void 0;
          return _this;
        }

        var _proto = BackSceneController.prototype;

        _proto.start = function start() {
          var _this2 = this;

          this.speed = 100;
          this.isFly = false;
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.CLAIM_GAME, function () {
            _this2.speed = 300;
          });
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.NORMAL_GAME, this.shipFly.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.FREE_GAME, this.shipFly.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.FIRED_EVENT, this.shipStopFly.bind(this));
        };

        _proto.update = function update(deltaTime) {
          var mul = Data.instance.muL;
          this.speed = mul * 200;

          if (this.isFly && this.Ship.position.y < 0) {
            this.Ship.position = new Vec3(this.Ship.position.x, this.Ship.position.y + this.speed * deltaTime, this.Ship.position.z);
          } else if (this.isFly && this.Ship.position.y >= 0) {
            this.node.position = new Vec3(this.node.position.x, this.node.position.y - this.speed * deltaTime, this.node.position.z);
          }
        };

        _proto.restartRound = function restartRound() {
          this.node.position = new Vec3(0, 20, 0);
        };

        _proto.shipFly = function shipFly() {
          this.isFly = true;
        };

        _proto.shipStopFly = function shipStopFly() {
          this.isFly = false;
        };

        return BackSceneController;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "Ship", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/BubbleFloatGames.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, director, instantiate, Label, game, resources, Prefab, view, v3, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      director = module.director;
      instantiate = module.instantiate;
      Label = module.Label;
      game = module.game;
      resources = module.resources;
      Prefab = module.Prefab;
      view = module.view;
      v3 = module.v3;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "6ff6fKe98ZMXLiUByeCzDj7", "BubbleFloatGames", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var BubbleFloatGames = exports('BubbleFloatGames', (_dec = ccclass('BubbleFloatGames'), _dec2 = property({
        type: Node
      }), _dec3 = property({
        type: Node
      }), _dec4 = property({
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(BubbleFloatGames, _Component);

        function BubbleFloatGames() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "rootNode", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "cloneItem", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "layoutContainer", _descriptor3, _assertThisInitialized(_this));

          _this.mainGame = void 0;
          _this._mapGameItemViewById = void 0;
          _this._mapLoadingStatusByGameId = void 0;
          return _this;
        }

        var _proto = BubbleFloatGames.prototype;

        _proto.onLoad = function onLoad() {
          this.mainGame = this.node;
          this._mapGameItemViewById = {};
          this._mapLoadingStatusByGameId = {};

          this._initTouch();
        };

        _proto.onDestroy = function onDestroy() {
          director.off("director_before_scene_launch", this._onBeforeSceneLaunch, this);
          director.off("director_after_scene_launch", this._onAfterSceneLaunch, this);
        };

        _proto.addGame = function addGame(id, config) {
          var _this2 = this;

          if (!this._mapGameItemViewById[id]) {
            var item = instantiate(this.cloneItem);
            item.getChildByName("label").getComponent(Label).string = config.gameName;
            item.active = true;
            this.layoutContainer.addChild(item);
            var now = 0;
            item.on(Node.EventType.TOUCH_START, function (e) {
              now = Date.now();
            });
            item.on(Node.EventType.TOUCH_END, function (e) {
              if (Date.now() - now <= 250) {
                _this2._requestPlayGame({
                  gameId: id,
                  config: config
                });
              }
            });
            this._mapGameItemViewById[id] = item;
          }
        };

        _proto._requestPlayGame = function _requestPlayGame(ev) {
          var _this3 = this;

          if (ev.config.prefabPath) {
            var sceneName = director.getScene().name;

            if (sceneName && sceneName.includes(ev.config.excludeScene)) {
              return;
            }

            var mainNode = director.getScene().getChildByName(ev.config.prefabPath);

            if (mainNode) {
              director.emit(ev.config.openEvent);
              this.rootNode.setSiblingIndex(10000);
            } else {
              var icon = this._mapGameItemViewById[ev.gameId];

              if (!this._mapLoadingStatusByGameId[ev.gameId]) {
                this._mapLoadingStatusByGameId[ev.gameId] = true;
                this.loadFromResource(ev.config.prefabPath, function (percent) {
                  icon.getChildByName("label").getComponent(Label).string = "Load " + Math.floor(percent) + "%";
                }, function (err, asset, status) {
                  var prefab = asset;

                  if (prefab.data.name == ev.config.prefabPath) {
                    icon.getChildByName("label").getComponent(Label).string = ev.config.gameName;
                    var node = instantiate(prefab);
                    game.addPersistRootNode(node);

                    _this3.rootNode.setSiblingIndex(10000);

                    _this3._mapLoadingStatusByGameId[ev.gameId] = false;
                  }
                });
              }
            }
          }
        };

        _proto.loadFromResource = function loadFromResource(prefabPath, onProgress, onComplete) {
          resources.load(prefabPath, Prefab, function (finish, total, item) {
            var percent = 100 * finish / total;
            onProgress && onProgress(percent);
          }, function (error, asset) {
            if (error) {
              onComplete && onComplete(error, [], "load prefab error");
              return;
            }

            onComplete(error, asset, "done");
          });
        };

        _proto.getGameItemViewById = function getGameItemViewById(gameId) {
          return this._mapGameItemViewById[gameId];
        };

        _proto._initTouch = function _initTouch() {
          var _this4 = this;

          var node = this.mainGame; //TOUCH_MOVE

          node.on(Node.EventType.TOUCH_MOVE, function (e) {
            var delta = e.getDelta();

            var disTanceX = _this4.mainGame.getPosition().x;

            var disTanceY = _this4.mainGame.getPosition().y;

            disTanceX += delta.x;
            disTanceY += delta.y;
            var maxX = (view.getVisibleSize().width - node.width) / 2;
            var minX = -maxX;
            var maxY = (view.getVisibleSize().height - node.height) / 2;
            var minY = -maxY;
            disTanceX = Math.min(Math.max(disTanceX, minX), maxX);
            disTanceY = Math.min(Math.max(disTanceY, minY), maxY);

            _this4.mainGame.setPosition(v3(disTanceX, disTanceY));
          });
          director.on("director_before_scene_launch", this._onBeforeSceneLaunch, this);
          director.on("director_after_scene_launch", this._onAfterSceneLaunch, this);
        };

        _proto._onBeforeSceneLaunch = function _onBeforeSceneLaunch() {
          this.rootNode.active = false;
        };

        _proto._onAfterSceneLaunch = function _onAfterSceneLaunch() {
          this.rootNode.active = true;
        };

        return BubbleFloatGames;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "rootNode", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "cloneItem", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "layoutContainer", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CanvasScaleByOrientation.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, CCBoolean, Canvas, CCInteger, Widget, sys, view, macro, screen, log, ResolutionPolicy, Camera, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      CCBoolean = module.CCBoolean;
      Canvas = module.Canvas;
      CCInteger = module.CCInteger;
      Widget = module.Widget;
      sys = module.sys;
      view = module.view;
      macro = module.macro;
      screen = module.screen;
      log = module.log;
      ResolutionPolicy = module.ResolutionPolicy;
      Camera = module.Camera;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;

      cclegacy._RF.push({}, "b4c0egcgEpKdZ75o3AkPNx+", "CanvasScaleByOrientation", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var CanvasScaleByOrientation = exports('CanvasScaleByOrientation', (_dec = ccclass('CanvasScaleByOrientation'), _dec2 = property(CCBoolean), _dec3 = property(CCBoolean), _dec4 = property({
        type: Canvas
      }), _dec5 = property(CCBoolean), _dec6 = property(CCBoolean), _dec7 = property(CCInteger), _dec8 = property(CCInteger), _dec9 = property({
        type: Widget
      }), _dec10 = property(CCBoolean), _dec11 = property({
        type: CCInteger
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(CanvasScaleByOrientation, _Component);

        function CanvasScaleByOrientation() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "autoOrientation", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "isPortrait", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "canvas", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "fitByOrientation", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "useCustomDesignResolution", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "customDSWidth", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "customDSHeight", _descriptor7, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "widgetNodes", _descriptor8, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "isDebug", _descriptor9, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "minScreenRatio", _descriptor10, _assertThisInitialized(_this));

          _this._thisOnResized = void 0;
          _this.innerSize = void 0;
          return _this;
        }

        var _proto = CanvasScaleByOrientation.prototype;

        _proto.onLoad = function onLoad() {
          this.innerSize = {
            width: window.innerWidth,
            height: window.innerHeight
          };
          this._thisOnResized = this.onScreenResized.bind(this);

          if (sys.isBrowser) {
            window.addEventListener('resize', this._thisOnResized);
          } else {
            view.on('canvas-resize', this._thisOnResized);
          }

          this.scaleCanvasByOrientation();

          if (!sys.isNative) {
            var divFullscreen = document.getElementById('div_full_screen');

            if (this.isPortrait) {
              if (divFullscreen) {
                divFullscreen.style.visibility = "hidden";
              }
            }

            if (this.autoOrientation) {
              view.setOrientation(macro.ORIENTATION_AUTO);
            } else if (this.isPortrait) {
              view.setOrientation(macro.ORIENTATION_PORTRAIT);
            } else {
              view.setOrientation(macro.ORIENTATION_LANDSCAPE);
            }
          }
        };

        _proto.start = function start() {
          if (sys.isMobile) {
            var eventResize = new Event('gameShow');
            window.dispatchEvent(eventResize);
          }
        };

        _proto.scaleCanvasByOrientation = function scaleCanvasByOrientation() {
          var screenWidth = window ? window.innerWidth : screen.windowSize.width;
          var screenHeight = window ? window.innerHeight : screen.windowSize.height;

          if (this.autoOrientation) {
            if (screenWidth < screenHeight) {
              this.isPortrait = true;
            } else {
              this.isPortrait = false;
            }
          } else {
            if (this.isPortrait) {
              view.setOrientation(macro.ORIENTATION_PORTRAIT);
            } else {
              view.setOrientation(macro.ORIENTATION_LANDSCAPE);
            }
          }

          if (this.canvas) {
            this.isDebug && log("Canvas after update: ");
            this.isDebug && log(this.canvas);
            this.canvas.alignCanvasWithScreen = true;

            if (this.fitByOrientation) {
              var designRatio = this.useCustomDesignResolution ? this.customDSWidth / this.customDSHeight : view.getDesignResolutionSize().width / view.getDesignResolutionSize().height;
              var screenRatio = screenWidth / screenHeight;

              if (window && sys.isMobile && sys.isBrowser) {
                var isLandscapeOrien = this.isLandscapeScreen();

                if (this.isPortrait) {
                  screenRatio = isLandscapeOrien ? screenHeight / screenWidth : screenWidth / screenHeight;
                } else {
                  screenRatio = isLandscapeOrien ? window.innerWidth / window.innerHeight : window.innerHeight / window.innerWidth;
                }
              }

              this.isDebug && log("[TestResize]View size width: " + screenWidth + ", height: " + screenHeight + "  Design Resolution: W: " + view.getDesignResolutionSize().width + ", H: " + view.getDesignResolutionSize().height + ",  Screen Ratio: " + screenRatio + ", Design Ratio: " + designRatio + ", minScreenRatio: " + this.minScreenRatio);

              if (this.isPortrait) {
                if (screenRatio < designRatio) {
                  view.setDesignResolutionSize(view.getDesignResolutionSize().width, view.getDesignResolutionSize().height, ResolutionPolicy.FIXED_WIDTH);
                  this.isDebug && log("CANVAS FIT WIDTH");
                } else {
                  view.setDesignResolutionSize(view.getDesignResolutionSize().width, view.getDesignResolutionSize().height, ResolutionPolicy.FIXED_HEIGHT);
                  this.isDebug && log("CANVAS FIT HEIGHT");
                }

                this.rotateRootPortraitGame();
              } else {
                if (screenRatio < designRatio && screenRatio >= this.minScreenRatio) {
                  view.setDesignResolutionSize(view.getDesignResolutionSize().width, view.getDesignResolutionSize().height, ResolutionPolicy.FIXED_WIDTH);
                  this.isDebug && log("[TestResize]CANVAS FIT WIDTH");
                } else {
                  view.setDesignResolutionSize(view.getDesignResolutionSize().width, view.getDesignResolutionSize().height, ResolutionPolicy.FIXED_HEIGHT);
                  this.isDebug && log("[TestResize]CANVAS FIT HEIGHT");
                }
              }
            }
          } else {
            this.isDebug && log("No canvas component");
          }

          if (this.widgetNodes && this.widgetNodes.length > 0) {
            for (var i = 0; i < this.widgetNodes.length; i++) {
              var widget = this.widgetNodes[i];

              if (widget) {
                this.widgetNodes[i].updateAlignment();
              }
            }
          }
        };

        _proto.onScreenResized = function onScreenResized() {
          this.scaleCanvasByOrientation();
        };

        _proto.isLandscapeScreen = function isLandscapeScreen() {
          if (window.matchMedia("(orientation: landscape)").matches) {
            return true;
          }

          if (window.matchMedia("(orientation: portrait)").matches) {
            return false;
          }

          return false;
        };

        _proto.isShowKeyboard = function isShowKeyboard() {
          var currentViewSize = window.innerWidth * window.innerHeight;
          var rate = currentViewSize / (this.innerSize.width * this.innerSize.height);
          return rate < 0.8;
        };

        _proto.rotateRootPortraitGame = function rotateRootPortraitGame() {
          if (!this.isPortrait) return;

          if (sys.isMobile && sys.isBrowser) {
            var isLandScapeView = this.isLandscapeScreen() && !this.isShowKeyboard();
            this.node.children.forEach(function (child) {
              if (!child.getComponent(Camera)) {
                child.angle = isLandScapeView ? 180 : 0;
              }
            });
          }
        };

        _proto.onDestroy = function onDestroy() {
          if (sys.isBrowser) {
            window.removeEventListener('resize', this._thisOnResized);
          } else {
            view.off('canvas-resize', this._thisOnResized);
          }
        };

        return CanvasScaleByOrientation;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "autoOrientation", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "isPortrait", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "canvas", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "fitByOrientation", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "useCustomDesignResolution", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "customDSWidth", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1280;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "customDSHeight", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 720;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "widgetNodes", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "isDebug", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "minScreenRatio", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ChangeMoney.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "f3f4cZB+YpLVbLCvun8ONBZ", "ChangeMoney", undefined);

      var ChangeMoney = exports('ChangeMoney', /*#__PURE__*/function () {
        function ChangeMoney() {}

        var _proto = ChangeMoney.prototype;

        _proto.changeMoney = function changeMoney(value) {
          if (value < 1000) {
            return value.toFixed() + 'K';
          }

          if (value >= 1000 && value < 1000000) {
            return (value / 1000).toFixed(2) + 'M';
          }

          if (value >= 1000000 && value < 1000000000) {
            return (value / 1000000).toFixed(2) + 'B';
          }
        };

        return ChangeMoney;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ClickAndShow.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, UIOpacity, tween, Component, setOpacity, fadeIn;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      UIOpacity = module.UIOpacity;
      tween = module.tween;
      Component = module.Component;
    }, function (module) {
      setOpacity = module.setOpacity;
      fadeIn = module.fadeIn;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "f1c22FetS9D86F5ibiTjmyB", "ClickAndShow", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var ClickAndShow = exports('ClickAndShow', (_dec = ccclass('ClickAndShow'), _dec2 = property({
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ClickAndShow, _Component);

        function ClickAndShow() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "panel", _descriptor, _assertThisInitialized(_this));

          _this.fadeSpeed = 0.9;
          _this.isShowing = false;
          return _this;
        }

        var _proto = ClickAndShow.prototype;

        _proto.onLoad = function onLoad() {
          this.node.on("SHOW_PANEL", this.enter, this);
          this.node.on("HIDE_PANEL", this.exit, this);
          this.panel.active = false;
        };

        _proto.enter = function enter() {
          if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();
          this.isShowing = true;
          this.panel.active = true;
          setOpacity(this.panel, 0);
          fadeIn(this.panel, this.fadeSpeed);
        };

        _proto.exit = function exit() {
          var _this2 = this;

          if (!this.isShowing) return;
          this.isShowing = false;
          if (this.node.soundPlayer) this.node.soundPlayer.playSFXClick();
          var uiOp = this.panel.getComponent(UIOpacity);
          tween(uiOp).to(this.fadeSpeed, {
            opacity: 0
          }).call(function () {
            _this2.panel.active = false;
          }).start();
        };

        _proto.start = function start() {// [3]
        };

        return ClickAndShow;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "panel", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/connectNetwork.ts", ['cc', './loadConfigAsync.ts', './serviceRest.ts', './gameCommonUtils.ts', './globalNetwork.ts', './mock.ts'], function (exports) {
  var cclegacy, sys, log, loadConfigAsync, apiObject, gameCommonUtils, globalNetwork, mock;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      sys = module.sys;
      log = module.log;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      apiObject = module.default;
    }, function (module) {
      gameCommonUtils = module.default;
    }, function (module) {
      globalNetwork = module.default;
    }, function (module) {
      mock = module.mock;
    }],
    execute: function () {
      cclegacy._RF.push({}, "e9aa5GoLR9JNqfGizKqYr82", "connectNetwork", undefined);

      var ConnectNetwork = /*#__PURE__*/function () {
        function ConnectNetwork() {
          this.gameId = '';
        }

        var _proto = ConnectNetwork.prototype;

        _proto.getToken = function getToken() {
          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME,
              URL_TOKEN = _loadConfigAsync$getC.URL_TOKEN,
              USER_TOKEN = _loadConfigAsync$getC.USER_TOKEN;

          var token = '';

          if (LOGIN_IFRAME) {
            var getUrlParam = gameCommonUtils.getUrlParam;
            token = getUrlParam(URL_TOKEN);
            sys.localStorage.setItem(USER_TOKEN, token);
          } else {
            token = sys.localStorage.getItem(USER_TOKEN);
          }

          return token;
        };

        _proto.getRefreshToken = function getRefreshToken() {
          var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC2.LOGIN_IFRAME,
              _loadConfigAsync$getC3 = _loadConfigAsync$getC2.URL_REFRESH_TOKEN,
              URL_REFRESH_TOKEN = _loadConfigAsync$getC3 === void 0 ? 'refresh-token' : _loadConfigAsync$getC3,
              _loadConfigAsync$getC4 = _loadConfigAsync$getC2.USER_REFRESH_TOKEN,
              USER_REFRESH_TOKEN = _loadConfigAsync$getC4 === void 0 ? 'user-refresh-token' : _loadConfigAsync$getC4;

          var refreshToken = '';

          if (LOGIN_IFRAME) {
            var getUrlParam = gameCommonUtils.getUrlParam;
            refreshToken = getUrlParam(URL_REFRESH_TOKEN);
            sys.localStorage.setItem(USER_REFRESH_TOKEN, refreshToken);
          } else {
            refreshToken = sys.localStorage.getItem(USER_REFRESH_TOKEN);
          }

          return refreshToken;
        };

        _proto.loginScene = function loginScene(_ref) {
          var _this = this;

          var _ref$callback = _ref.callback,
              _callback = _ref$callback === void 0 ? function () {} : _ref$callback,
              _ref$gameId = _ref.gameId,
              gameId = _ref$gameId === void 0 ? '' : _ref$gameId,
              _ref$callbackAuthFail = _ref.callbackAuthFailed,
              callbackAuthFailed = _ref$callbackAuthFail === void 0 ? function () {} : _ref$callbackAuthFail;

          log("Login using V3");

          var _loadConfigAsync$getC5 = loadConfigAsync.getConfig(),
              IS_FINISHED_REMOTE = _loadConfigAsync$getC5.IS_FINISHED_REMOTE,
              DEV_ENV = _loadConfigAsync$getC5.DEV_ENV,
              USER_TOKEN = _loadConfigAsync$getC5.USER_TOKEN;

          if (!IS_FINISHED_REMOTE) {
            setTimeout(function () {
              _this.loginScene({
                callback: _callback,
                gameId: gameId,
                callbackAuthFailed: callbackAuthFailed
              });
            }, 100);
            return;
          }

          this.gameId = gameId;
          var token = this.getToken();
          var refreshToken = this.getRefreshToken();

          var _loadConfigAsync$getC6 = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC6.LOGIN_IFRAME,
              API_URL = _loadConfigAsync$getC6.API_URL;

          var envId = LOGIN_IFRAME ? 'iframe' : 'portal';
          var gameIdSocket = LOGIN_IFRAME ? gameId : 'all';
          var getUrlParam = gameCommonUtils.getUrlParam;
          var history = getUrlParam('history');
          if (LOGIN_IFRAME && history && history === 'true') return;

          if (token || !DEV_ENV) {
            if (token) {
              globalNetwork.init(token, refreshToken, envId, gameIdSocket);

              _callback();
            } else {
              callbackAuthFailed();
            }
          } else {
            var dataPost = {
              userName: mock.userText,
              password: mock.pwText,
              fingerPrint: 'test'
            };
            apiObject.post({
              url: 'auth/login',
              data: dataPost,
              callback: function callback(_ref2) {
                var data = _ref2.data;

                if (data.data.token) {
                  sys.localStorage.setItem(USER_TOKEN, data.data.token);
                  globalNetwork.init(data.data.token, '', envId, gameIdSocket);

                  _callback();
                } else {
                  callbackAuthFailed && callbackAuthFailed();
                }
              },
              callbackErr: function callbackErr() {
                callbackAuthFailed && callbackAuthFailed();
              },
              apiUrl: API_URL
            });
          }
        };

        return ConnectNetwork;
      }();

      var connectNetwork = exports('default', new ConnectNetwork());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CustomCanvasSize.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './loadConfigAsync.ts', './gameCommonUtils.ts', './CanvasScaleByOrientation.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, CCInteger, view, ResolutionPolicy, sys, Component, loadConfigAsync, gameCommonUtils, CanvasScaleByOrientation;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      CCInteger = module.CCInteger;
      view = module.view;
      ResolutionPolicy = module.ResolutionPolicy;
      sys = module.sys;
      Component = module.Component;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      gameCommonUtils = module.default;
    }, function (module) {
      CanvasScaleByOrientation = module.CanvasScaleByOrientation;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "765a98ou0RK46VyyIsLn7md", "CustomCanvasSize", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var CustomCanvasSize = exports('CustomCanvasSize', (_dec = ccclass('CustomCanvasSize'), _dec2 = property(CCInteger), _dec3 = property(CCInteger), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(CustomCanvasSize, _Component);

        function CustomCanvasSize() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "customDSWidth", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "customDSHeight", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "isPortrait", _descriptor3, _assertThisInitialized(_this));

          _this._defaultDesignResolution = {};
          _this._defaultResolutionPolicy = null;
          _this._thisOnResized = void 0;
          _this._canvasScaleComp = null;
          return _this;
        }

        var _proto = CustomCanvasSize.prototype;

        _proto.onLoad = function onLoad() {
          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;

          this._canvasScaleComp = this.node.scene.getComponentInChildren(CanvasScaleByOrientation);

          if (!LOGIN_IFRAME) {
            this.updateCustomCanvasSize();
            this.updateWindowOrientation();
            this.scaleCanvasByOrientation(0.1);
          }
        };

        _proto.updateCustomCanvasSize = function updateCustomCanvasSize() {
          var resolutionSize = view.getDesignResolutionSize();
          this._defaultDesignResolution.width = resolutionSize.width;
          this._defaultDesignResolution.height = resolutionSize.height;
          this._defaultResolutionPolicy = view.getResolutionPolicy();

          var _currentResolutionPolicy = this.isPortrait ? ResolutionPolicy.FIXED_HEIGHT : ResolutionPolicy.FIXED_WIDTH;

          view.setDesignResolutionSize(this.customDSWidth, this.customDSHeight, _currentResolutionPolicy);
        };

        _proto.updateWindowOrientation = function updateWindowOrientation() {
          if (!sys.isNative && window && this.isMobile()) {
            var event = new Event("orientationchange");
            window.dispatchEvent(event);
          }
        };

        _proto.scaleCanvasByOrientation = function scaleCanvasByOrientation(delay) {
          var _this2 = this;

          this.scheduleOnce(function () {
            if (_this2._canvasScaleComp) {
              _this2._canvasScaleComp.scaleCanvasByOrientation();
            }
          }, delay);
        };

        _proto.isMobile = function isMobile() {
          var isMobile = navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(android)|(webOS)/i) != null;
          return isMobile;
        };

        _proto.onDestroy = function onDestroy() {
          var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC2.LOGIN_IFRAME;

          if (!LOGIN_IFRAME) {
            var gameCanvasSize = gameCommonUtils.gameCanvasSize;

            if (gameCanvasSize && gameCanvasSize.width && gameCanvasSize.height) {
              var width = gameCanvasSize.width,
                  height = gameCanvasSize.height,
                  resolutionPolicy = gameCanvasSize.resolutionPolicy;
              view.setDesignResolutionSize(width, height, resolutionPolicy ? resolutionPolicy : this._defaultResolutionPolicy);
            } else {
              var _this$_defaultDesignR = this._defaultDesignResolution,
                  _width = _this$_defaultDesignR.width,
                  _height = _this$_defaultDesignR.height;
              view.setDesignResolutionSize(_width, _height, this._defaultResolutionPolicy);
            }

            this.updateWindowOrientation();
          }
        };

        return CustomCanvasSize;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "customDSWidth", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1280;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "customDSHeight", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 720;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "isPortrait", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CustomPageViewIndicator.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, SpriteFrame, SpriteComponent, PageViewIndicator;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      SpriteFrame = module.SpriteFrame;
      SpriteComponent = module.SpriteComponent;
      PageViewIndicator = module.PageViewIndicator;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "db9c0YejNNPNITBLdrMDU11", "CustomPageViewIndicator", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var CustomPageViewIndicator = exports('CustomPageViewIndicator', (_dec = ccclass('CustomPageViewIndicator'), _dec2 = property(SpriteFrame), _dec(_class = (_class2 = /*#__PURE__*/function (_PageViewIndicator) {
        _inheritsLoose(CustomPageViewIndicator, _PageViewIndicator);

        function CustomPageViewIndicator() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _PageViewIndicator.call.apply(_PageViewIndicator, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "unSelectedSpriteFrame", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = CustomPageViewIndicator.prototype;

        _proto._changedState = function _changedState() {
          var indicators = this._indicators;
          if (indicators.length === 0) return;
          var idx = this._pageView._curPageIdx;
          if (idx >= indicators.length) return;

          for (var i = 0; i < indicators.length; ++i) {
            var node = indicators[i];

            if (node) {
              var sprite = node.getComponent(SpriteComponent);

              if (sprite) {
                sprite.spriteFrame = this.unSelectedSpriteFrame;
              }
            }
          }

          this.setSpriteFrame({
            indicators: indicators,
            idx: idx
          });
        };

        _proto.setSpriteFrame = function setSpriteFrame(_ref) {
          var indicators = _ref.indicators,
              idx = _ref.idx;
          var node = indicators[idx];

          if (node) {
            var sprite = node.getComponent(SpriteComponent);

            if (sprite) {
              sprite.spriteFrame = this.spriteFrame;
            }
          }
        };

        return CustomPageViewIndicator;
      }(PageViewIndicator), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "unSelectedSpriteFrame", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/CustomTypeShare.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, cclegacy, _decorator, AudioClip, AudioSource, Event;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      AudioClip = module.AudioClip;
      AudioSource = module.AudioSource;
      Event = module.Event;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _dec4, _class4;

      cclegacy._RF.push({}, "a9b9bNRtfxJ4ZzdD4GzCwFi", "CustomTypeShare", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var CustomAudioClip = exports('CustomAudioClip', (_dec = ccclass('CustomAudioClip'), _dec2 = property({
        type: AudioClip
      }), _dec3 = property({
        type: AudioSource,
        visible: false
      }), _dec(_class = (_class2 = function CustomAudioClip() {
        _initializerDefineProperty(this, "isMusic", _descriptor, this);

        _initializerDefineProperty(this, "isEffect", _descriptor2, this);

        _initializerDefineProperty(this, "destroyedOnSwitchMode", _descriptor3, this);

        _initializerDefineProperty(this, "soundId", _descriptor4, this);

        _initializerDefineProperty(this, "maxCount", _descriptor5, this);

        _initializerDefineProperty(this, "ignoreCheckMaxChannel", _descriptor6, this);

        _initializerDefineProperty(this, "audioFile", _descriptor7, this);

        _initializerDefineProperty(this, "audioSource", _descriptor8, this);

        this.audioSourcePool = [];
      }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "isMusic", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "isEffect", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "destroyedOnSwitchMode", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "soundId", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "maxCount", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 1;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "ignoreCheckMaxChannel", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "audioFile", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "audioSource", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));
      var CustomEvent = exports('CustomEvent', (_dec4 = ccclass('CustomEvent'), _dec4(_class4 = /*#__PURE__*/function (_Event) {
        _inheritsLoose(CustomEvent, _Event);

        function CustomEvent(name, bubbles, details) {
          var _this;

          _this = _Event.call(this, name, bubbles) || this;
          _this.details = null;
          _this.details = details;
          return _this;
        }

        return CustomEvent;
      }(Event)) || _class4));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Data.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _createClass, cclegacy;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "f7a7faixadFOJIZ5qiEH43R", "Data", undefined);

      var Data = exports('Data', /*#__PURE__*/function () {
        function Data() {
          this._muL = 0;
          this._betValue = 100;
          this._ratioValue = 5.0;
          this._eventData = null;
          this.modeGame = void 0;
          this.walletAmount = void 0;
        }

        _createClass(Data, [{
          key: "muL",
          get: function get() {
            return this._muL;
          },
          set: function set(value) {
            this._muL = value;
          }
        }, {
          key: "betValue",
          get: function get() {
            return Number(this._betValue.toFixed(1));
          },
          set: function set(betValue) {
            this._betValue = betValue;
          }
        }, {
          key: "ratioValue",
          get: function get() {
            return Number(this._ratioValue.toFixed(1));
          },
          set: function set(ratioValue) {
            this._ratioValue = ratioValue;
          }
        }, {
          key: "eventData",
          get: function get() {
            return this._eventData;
          },
          set: function set(event) {
            this._eventData = event;
          }
        }]);

        return Data;
      }());
      Data.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/debug-view-runtime-control.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Color, Canvas, UITransform, instantiate, Label, RichText, Toggle, Button, director, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Color = module.Color;
      Canvas = module.Canvas;
      UITransform = module.UITransform;
      instantiate = module.instantiate;
      Label = module.Label;
      RichText = module.RichText;
      Toggle = module.Toggle;
      Button = module.Button;
      director = module.director;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "b2bd1+njXxJxaFY3ymm06WU", "debug-view-runtime-control", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var DebugViewRuntimeControl = exports('DebugViewRuntimeControl', (_dec = ccclass('internal.DebugViewRuntimeControl'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(DebugViewRuntimeControl, _Component);

        function DebugViewRuntimeControl() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "compositeModeToggle", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "singleModeToggle", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "EnableAllCompositeModeButton", _descriptor3, _assertThisInitialized(_this));

          _this._single = 0;
          _this.strSingle = ['No Single Debug', 'Vertex Color', 'Vertex Normal', 'Vertex Tangent', 'World Position', 'Vertex Mirror', 'Face Side', 'UV0', 'UV1', 'UV Lightmap', 'Project Depth', 'Linear Depth', 'Fragment Normal', 'Fragment Tangent', 'Fragment Binormal', 'Base Color', 'Diffuse Color', 'Specular Color', 'Transparency', 'Metallic', 'Roughness', 'Specular Intensity', 'IOR', 'Direct Diffuse', 'Direct Specular', 'Direct All', 'Env Diffuse', 'Env Specular', 'Env All', 'Emissive', 'Light Map', 'Shadow', 'AO', 'Fresnel', 'Direct Transmit Diffuse', 'Direct Transmit Specular', 'Env Transmit Diffuse', 'Env Transmit Specular', 'Transmit All', 'Direct Internal Specular', 'Env Internal Specular', 'Internal All', 'Fog'];
          _this.strComposite = ['Direct Diffuse', 'Direct Specular', 'Env Diffuse', 'Env Specular', 'Emissive', 'Light Map', 'Shadow', 'AO', 'Normal Map', 'Fog', 'Tone Mapping', 'Gamma Correction', 'Fresnel', 'Transmit Diffuse', 'Transmit Specular', 'Internal Specular', 'TT'];
          _this.strMisc = ['CSM Layer Coloration', 'Lighting With Albedo'];
          _this.compositeModeToggleList = [];
          _this.singleModeToggleList = [];
          _this.miscModeToggleList = [];
          _this.textComponentList = [];
          _this.labelComponentList = [];
          _this.textContentList = [];
          _this.hideButtonLabel = void 0;
          _this._currentColorIndex = 0;
          _this.strColor = ['<color=#ffffff>', '<color=#000000>', '<color=#ff0000>', '<color=#00ff00>', '<color=#0000ff>'];
          _this.color = [Color.WHITE, Color.BLACK, Color.RED, Color.GREEN, Color.BLUE];
          return _this;
        }

        var _proto = DebugViewRuntimeControl.prototype;

        _proto.start = function start() {
          // get canvas resolution
          var canvas = this.node.parent.getComponent(Canvas);

          if (!canvas) {
            console.error('debug-view-runtime-control should be child of Canvas');
            return;
          }

          var uiTransform = this.node.parent.getComponent(UITransform);
          var halfScreenWidth = uiTransform.width * 0.5;
          var halfScreenHeight = uiTransform.height * 0.5;
          var x = -halfScreenWidth + halfScreenWidth * 0.1,
              y = halfScreenHeight - halfScreenHeight * 0.1;
          var width = 200,
              height = 20; // new nodes

          var miscNode = this.node.getChildByName('MiscMode');
          var buttonNode = instantiate(miscNode);
          buttonNode.parent = this.node;
          buttonNode.name = 'Buttons';
          var titleNode = instantiate(miscNode);
          titleNode.parent = this.node;
          titleNode.name = 'Titles'; // title

          for (var i = 0; i < 2; i++) {
            var newLabel = instantiate(this.EnableAllCompositeModeButton.getChildByName('Label'));
            newLabel.setPosition(x + (i > 0 ? 50 + width * 2 : 150), y, 0.0);
            newLabel.setScale(0.75, 0.75, 0.75);
            newLabel.parent = titleNode;

            var _labelComponent = newLabel.getComponent(Label);

            _labelComponent.string = i ? '----------Composite Mode----------' : '----------Single Mode----------';
            _labelComponent.color = Color.WHITE;
            _labelComponent.overflow = 0;
            this.labelComponentList[this.labelComponentList.length] = _labelComponent;
          }

          y -= height; // single

          var currentRow = 0;

          for (var _i = 0; _i < this.strSingle.length; _i++, currentRow++) {
            if (_i === this.strSingle.length >> 1) {
              x += width;
              currentRow = 0;
            }

            var newNode = _i ? instantiate(this.singleModeToggle) : this.singleModeToggle;
            newNode.setPosition(x, y - height * currentRow, 0.0);
            newNode.setScale(0.5, 0.5, 0.5);
            newNode.parent = this.singleModeToggle.parent;
            var textComponent = newNode.getComponentInChildren(RichText);
            textComponent.string = this.strSingle[_i];
            this.textComponentList[this.textComponentList.length] = textComponent;
            this.textContentList[this.textContentList.length] = textComponent.string;
            newNode.on(Toggle.EventType.TOGGLE, this.toggleSingleMode, this);
            this.singleModeToggleList[_i] = newNode;
          }

          x += width; // buttons

          this.EnableAllCompositeModeButton.setPosition(x + 15, y, 0.0);
          this.EnableAllCompositeModeButton.setScale(0.5, 0.5, 0.5);
          this.EnableAllCompositeModeButton.on(Button.EventType.CLICK, this.enableAllCompositeMode, this);
          this.EnableAllCompositeModeButton.parent = buttonNode;
          var labelComponent = this.EnableAllCompositeModeButton.getComponentInChildren(Label);
          this.labelComponentList[this.labelComponentList.length] = labelComponent;
          var changeColorButton = instantiate(this.EnableAllCompositeModeButton);
          changeColorButton.setPosition(x + 90, y, 0.0);
          changeColorButton.setScale(0.5, 0.5, 0.5);
          changeColorButton.on(Button.EventType.CLICK, this.changeTextColor, this);
          changeColorButton.parent = buttonNode;
          labelComponent = changeColorButton.getComponentInChildren(Label);
          labelComponent.string = 'TextColor';
          this.labelComponentList[this.labelComponentList.length] = labelComponent;
          var HideButton = instantiate(this.EnableAllCompositeModeButton);
          HideButton.setPosition(x + 200, y, 0.0);
          HideButton.setScale(0.5, 0.5, 0.5);
          HideButton.on(Button.EventType.CLICK, this.hideUI, this);
          HideButton.parent = this.node.parent;
          labelComponent = HideButton.getComponentInChildren(Label);
          labelComponent.string = 'Hide UI';
          this.labelComponentList[this.labelComponentList.length] = labelComponent;
          this.hideButtonLabel = labelComponent; // misc

          y -= 40;

          for (var _i2 = 0; _i2 < this.strMisc.length; _i2++) {
            var _newNode = instantiate(this.compositeModeToggle);

            _newNode.setPosition(x, y - height * _i2, 0.0);

            _newNode.setScale(0.5, 0.5, 0.5);

            _newNode.parent = miscNode;

            var _textComponent = _newNode.getComponentInChildren(RichText);

            _textComponent.string = this.strMisc[_i2];
            this.textComponentList[this.textComponentList.length] = _textComponent;
            this.textContentList[this.textContentList.length] = _textComponent.string;

            var toggleComponent = _newNode.getComponent(Toggle);

            toggleComponent.isChecked = _i2 ? true : false;

            _newNode.on(Toggle.EventType.TOGGLE, _i2 ? this.toggleLightingWithAlbedo : this.toggleCSMColoration, this);

            this.miscModeToggleList[_i2] = _newNode;
          } // composite


          y -= 150;

          for (var _i3 = 0; _i3 < this.strComposite.length; _i3++) {
            var _newNode2 = _i3 ? instantiate(this.compositeModeToggle) : this.compositeModeToggle;

            _newNode2.setPosition(x, y - height * _i3, 0.0);

            _newNode2.setScale(0.5, 0.5, 0.5);

            _newNode2.parent = this.compositeModeToggle.parent;

            var _textComponent2 = _newNode2.getComponentInChildren(RichText);

            _textComponent2.string = this.strComposite[_i3];
            this.textComponentList[this.textComponentList.length] = _textComponent2;
            this.textContentList[this.textContentList.length] = _textComponent2.string;

            _newNode2.on(Toggle.EventType.TOGGLE, this.toggleCompositeMode, this);

            this.compositeModeToggleList[_i3] = _newNode2;
          }
        };

        _proto.isTextMatched = function isTextMatched(textUI, textDescription) {
          var tempText = new String(textUI);
          var findIndex = tempText.search('>');

          if (findIndex === -1) {
            return textUI === textDescription;
          } else {
            tempText = tempText.substr(findIndex + 1);
            tempText = tempText.substr(0, tempText.search('<'));
            return tempText === textDescription;
          }
        };

        _proto.toggleSingleMode = function toggleSingleMode(toggle) {
          var debugView = director.root.debugView;
          var textComponent = toggle.getComponentInChildren(RichText);

          for (var i = 0; i < this.strSingle.length; i++) {
            if (this.isTextMatched(textComponent.string, this.strSingle[i])) {
              debugView.singleMode = i;
            }
          }
        };

        _proto.toggleCompositeMode = function toggleCompositeMode(toggle) {
          var debugView = director.root.debugView;
          var textComponent = toggle.getComponentInChildren(RichText);

          for (var i = 0; i < this.strComposite.length; i++) {
            if (this.isTextMatched(textComponent.string, this.strComposite[i])) {
              debugView.enableCompositeMode(i, toggle.isChecked);
            }
          }
        };

        _proto.toggleLightingWithAlbedo = function toggleLightingWithAlbedo(toggle) {
          var debugView = director.root.debugView;
          debugView.lightingWithAlbedo = toggle.isChecked;
        };

        _proto.toggleCSMColoration = function toggleCSMColoration(toggle) {
          var debugView = director.root.debugView;
          debugView.csmLayerColoration = toggle.isChecked;
        };

        _proto.enableAllCompositeMode = function enableAllCompositeMode(button) {
          var debugView = director.root.debugView;
          debugView.enableAllCompositeMode(true);

          for (var i = 0; i < this.compositeModeToggleList.length; i++) {
            var _toggleComponent = this.compositeModeToggleList[i].getComponent(Toggle);

            _toggleComponent.isChecked = true;
          }

          var toggleComponent = this.miscModeToggleList[0].getComponent(Toggle);
          toggleComponent.isChecked = false;
          debugView.csmLayerColoration = false;
          toggleComponent = this.miscModeToggleList[1].getComponent(Toggle);
          toggleComponent.isChecked = true;
          debugView.lightingWithAlbedo = true;
        };

        _proto.hideUI = function hideUI(button) {
          var titleNode = this.node.getChildByName('Titles');
          var activeValue = !titleNode.active;
          this.singleModeToggleList[0].parent.active = activeValue;
          this.miscModeToggleList[0].parent.active = activeValue;
          this.compositeModeToggleList[0].parent.active = activeValue;
          this.EnableAllCompositeModeButton.parent.active = activeValue;
          titleNode.active = activeValue;
          this.hideButtonLabel.string = activeValue ? 'Hide UI' : 'Show UI';
        };

        _proto.changeTextColor = function changeTextColor(button) {
          this._currentColorIndex++;

          if (this._currentColorIndex >= this.strColor.length) {
            this._currentColorIndex = 0;
          }

          for (var i = 0; i < this.textComponentList.length; i++) {
            this.textComponentList[i].string = this.strColor[this._currentColorIndex] + this.textContentList[i] + '</color>';
          }

          for (var _i4 = 0; _i4 < this.labelComponentList.length; _i4++) {
            this.labelComponentList[_i4].color = this.color[this._currentColorIndex];
          }
        };

        _proto.onLoad = function onLoad() {};

        _proto.update = function update(deltaTime) {};

        return DebugViewRuntimeControl;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "compositeModeToggle", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "singleModeToggle", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "EnableAllCompositeModeButton", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/EventCode.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "cad35hUC/dE4omnhetd7bb6", "EventCode", undefined);

      var EventCode = exports('default', {
        SERVER: {
          ERROR: 'ERROR',
          EVENT: "EVENT",
          GENERATE_TOKEN: "GENERATE_TOKEN",
          RECEIVED_TOKEN: "RECEIVED_TOKEN",
          TOKEN_EXISTED: "TOKEN_IS_ALREADY_EXIST",
          WEB_SOCKET_OPEN: "ARCADE_EVENT.NETWORK.WEB_SOCKET_OPEN",
          IDENTIFY: "IDENTIFY_ACCOUNT",
          LOGIN: "LOGIN",
          PING: "PING",
          PONG: "PONG"
        },
        REQUEST: {
          UPDATE_WALLET: 'UPDATE_WALLET'
        },
        RESPONSE: {
          JOIN_GAME_RESULT: 'client-join-game-result',
          CLAIM_GAME: 'c',
          FIRED_EVENT: 'cd',
          NORMAL_GAME: 'n',
          FREE_GAME: 'f',
          PLAYER_INFO_UPDATE: 'piu'
        },
        STATE: {
          PREPARING: 'PREPARING',
          WIN: 'WIN',
          LOST: 'LOST'
        }
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/EventList.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './serviceRest.ts', './globalNetwork.ts', './loadConfigAsync.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Prefab, Node, Toggle, EditBox, NodePool, instantiate, sys, Component, apiObject, globalNetwork, loadConfigAsync;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Prefab = module.Prefab;
      Node = module.Node;
      Toggle = module.Toggle;
      EditBox = module.EditBox;
      NodePool = module.NodePool;
      instantiate = module.instantiate;
      sys = module.sys;
      Component = module.Component;
    }, function (module) {
      apiObject = module.default;
    }, function (module) {
      globalNetwork = module.default;
    }, function (module) {
      loadConfigAsync = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "f0679PqTwdL3ppie1JhQX4J", "EventList", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var GameEvents = exports('GameEvents', (_dec = ccclass('GameEvents'), _dec2 = property({
        type: Prefab
      }), _dec3 = property({
        type: Node
      }), _dec4 = property({
        type: Toggle
      }), _dec5 = property({
        type: EditBox
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(GameEvents, _Component);

        function GameEvents() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.listEvent = [];

          _initializerDefineProperty(_this, "eventPrefab", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "eventHolder", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "filterSlot", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "filterTag", _descriptor4, _assertThisInitialized(_this));

          _this.eventPool = null;
          return _this;
        }

        var _proto = GameEvents.prototype;

        _proto.onLoad = function onLoad() {
          this.eventPool = new NodePool();
        };

        _proto.getEvent = function getEvent() {
          var event = this.eventPool.get();

          if (!event) {
            event = instantiate(this.eventPrefab);
          }

          return event;
        };

        _proto.removeAllEvents = function removeAllEvents() {
          while (this.eventHolder.children.length > 0) {
            this.eventPool.put(this.eventHolder.children[0]);
          }
        };

        _proto.onEnable = function onEnable() {
          this.removeAllEvents();
          this.loadEvents();
        };

        _proto.onDisable = function onDisable() {
          this.listEvent = null;
          sys.garbageCollect();
        };

        _proto.loadEvents = function loadEvents() {
          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              API_URL = _loadConfigAsync$getC.API_URL;

          var eventUrl = API_URL + 'event-config/event-available-by-user';
          var headers = {
            'Authorization': globalNetwork.getToken()
          };
          apiObject.getWithHeader({
            url: eventUrl,
            callback: this.onEventsLoaded.bind(this),
            headers: headers
          });
        };

        _proto.onEventsLoaded = function onEventsLoaded(res) {
          this.listEvent = res.data || [];
          this.filterEvent(this.filterSlot.isChecked ? this.filterTag.string : "");
        };

        _proto.onToggleFilter = function onToggleFilter() {
          this.filterEvent(this.filterSlot.isChecked ? this.filterTag.string : "");
        };

        _proto.filterEvent = function filterEvent(key) {
          this.removeAllEvents();

          for (var i = 0; i < this.listEvent.length; i++) {
            var eventInfo = this.listEvent[i].eventInfo;

            if (eventInfo) {
              var eventName = eventInfo.name.toLocaleLowerCase();
              var updatedTitle = key.toLocaleLowerCase();

              if (eventName.includes(updatedTitle)) {
                var event = this.getEvent();
                event.setParent(this.eventHolder);
                event.getComponent('GameEvent').init(this.listEvent[i]);
              }
            }
          }
        };

        _proto.onLoadError = function onLoadError(error) {// console.log(error);
        };

        _proto.onDestroy = function onDestroy() {
          this.eventPool.clear();
        };

        return GameEvents;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "eventPrefab", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "eventHolder", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "filterSlot", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "filterTag", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/EventListenerManager.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, warn, Component;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      warn = module.warn;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "3c085XLolNK4pPd/oLUMOG1", "EventListenerManager", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var EventListenerManager = exports('EventListenerManager', (_dec = ccclass('EventListenerManager'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(EventListenerManager, _Component);

        function EventListenerManager() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.handlers = {};
          return _this;
        }

        var _proto = EventListenerManager.prototype;

        _proto.on = function on(eventName, handler, target) {
          var objHandler = {
            handler: handler,
            target: target
          };
          var handlerList = this.handlers[eventName];

          if (!handlerList) {
            handlerList = [];
            this.handlers[eventName] = handlerList;
          }

          for (var i = 0; i < handlerList.length; i++) {
            var existObjHandler = handlerList[i];

            if (!existObjHandler) {
              handlerList[i] = objHandler;
              return i;
            } else {
              if (existObjHandler.handler === handler && existObjHandler.target === target) {
                warn("[EventListenerManager] Existing target: " + target + " and its handler: " + handler.name + " were already registered to an event: " + eventName);
                return i;
              }
            }
          }

          handlerList.push(objHandler);
          return handlerList.length;
        };

        _proto.off = function off(eventName, handler, target) {
          var handlerList = this.handlers[eventName];

          if (!handlerList) {
            return;
          }

          for (var i = 0; i < handlerList.length; i++) {
            var oldObj = handlerList[i];

            if (oldObj.handler === handler && target === oldObj.target) {
              handlerList.splice(i--, 1);
            }
          }
        };

        _proto.targetOff = function targetOff(target) {
          for (var eventName in this.handlers) {
            var handlerList = this.handlers[eventName];

            if (handlerList) {
              for (var i = 0; i < handlerList.length; i++) {
                if (handlerList[i].target === target) {
                  handlerList.splice(i--, 1);
                }
              }
            }
          }
        };

        _proto.emit = function emit(eventName) {
          var handlerList = this.handlers[eventName];

          if (!handlerList) {
            return;
          }

          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          for (var i = 0; i < handlerList.length; i++) {
            var objHandler = handlerList[i];

            if (objHandler && objHandler.handler && objHandler.target) {
              objHandler.handler.apply(objHandler.target, args);
            }
          }
        };

        return EventListenerManager;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaArcadeBaseTableHistory.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaUtils.ts', './gaHistoryItem.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Prefab, Node, CCBoolean, instantiate, Layout, UITransform, Label, Component, gaUtils, gaHistoryItem;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Prefab = module.Prefab;
      Node = module.Node;
      CCBoolean = module.CCBoolean;
      instantiate = module.instantiate;
      Layout = module.Layout;
      UITransform = module.UITransform;
      Label = module.Label;
      Component = module.Component;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      gaHistoryItem = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "e1231t9KaBHBbsj4RbCEhN3", "gaArcadeBaseTableHistory", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaArcadeBaseTableHistory = exports('default', (_dec = ccclass('gaArcadeBaseTableHistory'), _dec2 = property(Prefab), _dec3 = property(Node), _dec4 = property(CCBoolean), _dec5 = property({
        type: Node,
        visible: function visible() {
          return this.optimizeLabel;
        }
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaArcadeBaseTableHistory, _Component);

        function gaArcadeBaseTableHistory() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "cell", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "scrollContent", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "optimizeLabel", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "labelContainer", _descriptor4, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaArcadeBaseTableHistory.prototype;

        _proto.initCells = function initCells(itemPerPage) {
          this.cleanTable();

          for (var i = 0; i < itemPerPage; ++i) {
            var cell = instantiate(this.cell);
            cell.parent = this.node;
            cell.active = true;
          }

          var layout = this.node.getComponent(Layout);
          layout.updateLayout();

          if (this.scrollContent) {
            this.scrollContent.getComponent(UITransform).setContentSize(this.getComponent(UITransform).contentSize);
          }

          if (!this.labelContainer) {
            this.labelContainer = new Node();
            this.labelContainer.name = "LabelContainer";
            this.labelContainer.parent = this.node.parent;
            this.labelContainer.setSiblingIndex(this.node.getSiblingIndex() + 1);
          }

          this.labelContainer.getComponent(UITransform).setContentSize(this.getComponent(UITransform).contentSize);
          this.labelContainer.setPosition(this.node.getPosition());

          for (var _i = 0; _i < this.node.children.length; ++_i) {
            var _cell = this.node.children[_i];
            _cell['__childrenLabel'] = _cell.getComponentsInChildren(Label).map(function (l) {
              return l.node;
            });
          }
        };

        _proto.updateData = function updateData(data) {
          var _this2 = this;

          this.node.children.forEach(function (child, index) {
            if (index < data.length) {
              child.getComponent(gaHistoryItem).onSpawn(data[index], index);

              _this2.setActiveChild(child, true);
            } else {
              _this2.setActiveChild(child, false);
            }
          });
        };

        _proto.clearData = function clearData() {
          var _this3 = this;

          this.node.children.forEach(function (child) {
            return _this3.setActiveChild(child, false);
          });
        };

        _proto.cleanTable = function cleanTable() {
          gaUtils.destroyAllChildren(this.node);
          gaUtils.destroyAllChildren(this.labelContainer);
        };

        _proto.setActiveChild = function setActiveChild(child, active) {
          var _this4 = this;

          child.active = active;
          var childrenLabel = child['__childrenLabel'];

          if (childrenLabel && this.labelContainer) {
            childrenLabel.forEach(function (labelNode) {
              labelNode.active = active;

              if (active && labelNode.parent != _this4.labelContainer) {
                gaUtils.changeParent(labelNode, _this4.labelContainer);
              }
            });
          }
        };

        return gaArcadeBaseTableHistory;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "cell", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "scrollContent", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "optimizeLabel", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "labelContainer", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaAvatarProvider.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, SpriteAtlas, Component, loadAvatarFacebook;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      SpriteAtlas = module.SpriteAtlas;
      Component = module.Component;
    }, function (module) {
      loadAvatarFacebook = module.loadAvatarFacebook;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _class3;

      cclegacy._RF.push({}, "21935jmv79N/4eLJfnA1hgR", "gaAvatarProvider", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaAvatarProvider = exports('default', (_dec = ccclass('gaAvatarProvider'), _dec2 = property(SpriteAtlas), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaAvatarProvider, _Component);

        function gaAvatarProvider() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "avatarAtlas", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaAvatarProvider.prototype;

        _proto.loadAvatarFrame = function loadAvatarFrame(sprite, av) {
          if (this.avatarAtlas && loadAvatarFacebook) {
            if (av && av.indexOf('Avatar') === 0) {
              av = av.replace('Avatar', '');
            }

            loadAvatarFacebook(sprite, av, this.avatarAtlas, 'avatar_', 2);
          }
        };

        _proto.onLoad = function onLoad() {
          gaAvatarProvider._instance = this;
        };

        _proto.onDestroy = function onDestroy() {
          gaAvatarProvider._instance = null;
        };

        _createClass(gaAvatarProvider, null, [{
          key: "instance",
          get: function get() {
            return gaAvatarProvider._instance;
          }
        }]);

        return gaAvatarProvider;
      }(Component), _class3._instance = null, _class3), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "avatarAtlas", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBaseConfig.ts", ['cc'], function (exports) {
  var cclegacy, v2, Enum;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      v2 = module.v2;
      Enum = module.Enum;
    }],
    execute: function () {
      cclegacy._RF.push({}, "744b1e7+0pENpcl9OzOF9Nb", "gaBaseConfig", undefined);

      var gaBaseConfig = exports('default', /*#__PURE__*/function () {
        function gaBaseConfig() {
          var _this$NOTIFY_CONFIG;

          this.NETWORK = {
            AllowKeepActive: false,
            KeepActiveTime: 500 //milisecond

          };
          this.GAME_STATE = {
            INIT: 'INIT',
            BETTING: 'BETTING',
            PLAYING: 'PLAYING',
            RESULT: 'RESULT'
          };
          this.BETTING = {
            AutoRebet: false,
            AutoStartTime: 3
          };
          this.POPUP_PROMPT = {
            JUST_CONFIRM_BUTTON: 'JUST_CONFIRM_BUTTON',
            CONFIRM_AND_CLOSE_BUTTON: 'CONFIRM_AND_CLOSE_BUTTON',
            CONFIRM_AND_REJECT_BUTTON: 'CONFIRM_AND_REJECT_BUTTON',
            NONE_BUTTON: 'NONE_BUTTON',
            ERROR_NETWORK: 'ERROR_NETWORK',
            SOCKET_DISCONNECT: 'SOCKET_DISCONNECT'
          };
          this.DIALOG_MSG_POS = {
            WITH_BTN: v2(0, 36),
            NONE_BTN: v2(0, 0)
          };
          this.NOTIFY_TYPE = {
            SYSTEM: '',
            BIGWIN: 'wat',
            JACKPOT: 'jpAmt'
          };
          this.NOTIFY_JACKPOT = {
            array_type_notify_jackpot: [this.NOTIFY_TYPE.JACKPOT, this.NOTIFY_TYPE.BIGWIN],
            limited_stack_size: 10
          };
          this.NOTIFY_CONFIG = (_this$NOTIFY_CONFIG = {}, _this$NOTIFY_CONFIG[this.NOTIFY_TYPE.JACKPOT] = {
            userName: 0,
            goldReward: 1
          }, _this$NOTIFY_CONFIG[this.NOTIFY_TYPE.BIGWIN] = {
            userName: 0,
            goldReward: 1
          }, _this$NOTIFY_CONFIG);
          this.TouchDirectionAutoBot = Enum({
            LEFT: 0,
            RIGHT: 1,
            TOP: 2,
            BOTTOM: 3
          });
          this.ScrollDirectionAutoBot = Enum({
            LEFT: 0,
            RIGHT: 1,
            TOP: 2,
            BOTTOM: 3
          });
          this.TIMER_SCROLLER = {
            DATA_TIMER: ["0'", "30'", "60'", "90'", "120'", "∞"],
            MAX_TIME: 150,
            SPECIAL_ITEM: "i"
          };
          this.CURRENCY_CONFIG = {
            VND: {
              ACRONYM: "VND",
              DECIMAL_COUNT: 0,
              CURRENCY_PREFIX: ""
            },
            USD: {
              ACRONYM: "USD",
              DECIMAL_COUNT: 2,
              CURRENCY_PREFIX: "$"
            },
            CENT: {
              ACRONYM: "CENT",
              DECIMAL_COUNT: 0,
              CURRENCY_PREFIX: "¢"
            }
          };
        }

        var _proto = gaBaseConfig.prototype;

        _proto.destroy = function destroy() {
          gaBaseConfig.instance = null;
        };

        return gaBaseConfig;
      }());
      gaBaseConfig.instance = null;
      gaBaseConfig.gameId = "2999";
      gaBaseConfig.mainScene = "gaTemplateMain";
      gaBaseConfig.isIFrame = false;
      gaBaseConfig.isLoginOnOtherDevice = false;
      gaBaseConfig.NOTIFY_CHANNEL = "";
      gaBaseConfig.gameVersion = "";
      gaBaseConfig.designSize = {
        width: 1560,
        height: 720,
        maxWidth: 1650,
        isPortrait: false,
        autoOrientation: false,
        maxRatio: 3 / 4
      };
      gaBaseConfig.visibleSize = {
        width: 1560,
        height: 720,
        resolutionPolicy: 0
      };
      gaBaseConfig.POPUP_TYPE = {
        HISTORY_BET: "history_bet",
        HISTORY_JP: 'history_jp',
        HELP: "help",
        SETTING: "setting",
        DIALOG: "dialog",
        TOAST: "toast",
        TUTORIAL: "tutorial"
      };

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBasePopup.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaEventsCode.ts', './gaCustomDataType.ts', './gaUtils.ts', './gaTweenUtils.ts', './gaComponent.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Node, Button, v3, tween, isValid, UITransform, gaBaseConfig, gaEventsCode, gaStylePopupAnimation, POPUP_ANIMATION, gaUtils, setOpacity, v3f, fadeIn, scaleTo, moveTo, fadeOut, gaComponent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Button = module.Button;
      v3 = module.v3;
      tween = module.tween;
      isValid = module.isValid;
      UITransform = module.UITransform;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaStylePopupAnimation = module.gaStylePopupAnimation;
      POPUP_ANIMATION = module.POPUP_ANIMATION;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      setOpacity = module.setOpacity;
      v3f = module.v3f;
      fadeIn = module.fadeIn;
      scaleTo = module.scaleTo;
      moveTo = module.moveTo;
      fadeOut = module.fadeOut;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

      cclegacy._RF.push({}, "72e9bNJ+5RFkJwQR/5SFkrT", "gaBasePopup", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaBasePopup = exports('default', (_dec = ccclass('gaBasePopup'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Button), _dec5 = property(gaStylePopupAnimation), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaBasePopup, _gaComponent);

        function gaBasePopup() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "popupTitle", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "contents", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnClose", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "zIndex", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "animStyle", _descriptor5, _assertThisInitialized(_this));

          _this._showPosition = null;
          _this.fullScale = 1;
          _this._isShowing = false;
          return _this;
        }

        var _proto = gaBasePopup.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          this.initObj();
          this.onResetState();
        };

        _proto.initObj = function initObj() {
          var _this2 = this;

          if (this.contents == null) {
            this.contents = this.node;
          }

          if (this.btnClose) {
            this.btnClose.node.off('click');
            this.btnClose.node.on('click', function () {
              _this2.soundPlayer.playSFXClick();

              _this2.btnClose.interactable = false;

              _this2.onClose();
            }, this);
          }

          this._showPosition = v3(this.contents.getPosition().x, this.contents.getPosition().y);
          this.fullScale = 1;
        };

        _proto.show = function show(_data) {
          this._isShowing = true;
          this.node.stopAllActions();
          this.contents.stopAllActions();

          if (this.btnClose) {
            this.btnClose.interactable = true;
          }

          this.transitionShow();
        };

        _proto.transitionShow = function transitionShow() {
          this.node.active = true;
          setOpacity(this.contents, 0);
          var animation = [];

          switch (this.animStyle.show) {
            case POPUP_ANIMATION.FADE:
              this.showFade(animation);
              break;

            case POPUP_ANIMATION.PULSE:
              this.showPulse(animation);
              break;

            case POPUP_ANIMATION.TOP_DOWN:
              this.showTopDown(animation);
              break;

            case POPUP_ANIMATION.BOTTOM_UP:
              this.showBottomUp(animation);
              break;

            case POPUP_ANIMATION.FROM_LEFT:
              this.showFromLeft(animation);
              break;

            case POPUP_ANIMATION.FROM_RIGHT:
              this.showFromRight(animation);
              break;

            default:
              this.showDefault();
              break;
          }

          if (animation && animation.length > 0) {
            this.contents.runAction(animation);
          }
        };

        _proto.showPulse = function showPulse(animation) {
          this.node.scale = v3f(1);
          setOpacity(this.contents, 0);
          this.contents.scale = v3f(this.fullScale - 0.4);
          this.contents.setPosition(this._showPosition);
          animation.push(fadeIn(this._getAnimDuration(), "sineOut"), scaleTo(this._getAnimDuration(), this.fullScale, "backOut"));
        };

        _proto.showFade = function showFade(animation) {
          this.node.scale = v3f(1);
          this.contents.position = this._showPosition;
          animation.push(fadeIn(0.3));
        };

        _proto.onBeforeMove = function onBeforeMove(startPos) {
          this.node.scale = v3f(1);
          setOpacity(this.contents, 255);
          this.contents.position = startPos;
        };

        _proto.showTopDown = function showTopDown(animation) {
          var startPos = v3(this._showPosition.x, gaBaseConfig.visibleSize.height / 2 + this.contentTF.height / 2 + 50);
          this.onBeforeMove(startPos);
          animation.push(moveTo(this._getAnimDuration(), this._showPosition, "backOut"));
        };

        _proto.showBottomUp = function showBottomUp(animation) {
          var startPos = v3(this._showPosition.x, -gaBaseConfig.visibleSize.height / 2 - this.contentTF.height / 2 - 50);
          this.onBeforeMove(startPos);
          animation.push(moveTo(this._getAnimDuration(), this._showPosition, "backOut"));
        };

        _proto.showFromLeft = function showFromLeft(animation) {
          var startPos = v3(-gaBaseConfig.visibleSize.width / 2 - this.contentTF.width / 2 - 50, this._showPosition.y);
          this.onBeforeMove(startPos);
          animation.push(moveTo(this._getAnimDuration(), this._showPosition, "backOut"));
        };

        _proto.showFromRight = function showFromRight(animation) {
          var startPos = v3(gaBaseConfig.visibleSize.width / 2 + this.contentTF.width / 2 + 50, this._showPosition.y);
          this.onBeforeMove(startPos);
          animation.push(moveTo(this._getAnimDuration(), this._showPosition, "backOut"));
        };

        _proto.showDefault = function showDefault() {
          this.node.scale = v3f(1);
          setOpacity(this.contents, 255);
        };

        _proto.hide = function hide() {
          this._isShowing = false;
          this.transitionHide();
        };

        _proto.transitionHide = function transitionHide() {
          var _this3 = this;

          var animation = [];

          switch (this.animStyle.hide) {
            case POPUP_ANIMATION.FADE:
              this.hideFade(animation);
              break;

            case POPUP_ANIMATION.PULSE:
              this.hidePulse(animation);
              break;

            case POPUP_ANIMATION.TOP_DOWN:
              this.hideTopDown(animation);
              break;

            case POPUP_ANIMATION.BOTTOM_UP:
              this.hideBottomUp(animation);
              break;

            case POPUP_ANIMATION.FROM_LEFT:
              this.hideFromLeft(animation);
              break;

            case POPUP_ANIMATION.FROM_RIGHT:
              this.hideFromRight(animation);
              break;

            default:
              this.hideDefault();
              break;
          }

          if (animation && animation.length > 0) {
            var _tween;

            (_tween = tween(this.contents)).parallel.apply(_tween, animation).call(function () {
              return _this3.hideDefault();
            }).start();
          }
        };

        _proto.hideFade = function hideFade(animation) {
          animation.push(fadeOut(0.1 * gaUtils.TIME_SCALE));
        };

        _proto.hidePulse = function hidePulse(animation) {
          animation.push(fadeOut(this._getAnimDuration(), "sineIn"), scaleTo(this._getAnimDuration(), this.fullScale - 0.4, "backIn"));
        };

        _proto.hideTopDown = function hideTopDown(animation) {
          var hidePos = v3(this._showPosition.x, gaBaseConfig.visibleSize.height / 2 + this.contentTF.height / 2 + 50);
          animation.push(moveTo(this._getAnimDuration(), hidePos, "backIn"));
        };

        _proto.hideBottomUp = function hideBottomUp(animation) {
          var hidePos = v3(this._showPosition.x, -gaBaseConfig.visibleSize.height / 2 - this.contentTF.height / 2 - 50);
          animation.push(moveTo(this._getAnimDuration(), hidePos, "backIn"));
        };

        _proto.hideFromLeft = function hideFromLeft(animation) {
          var hidePos = v3(-gaBaseConfig.visibleSize.width / 2 - this.contentTF.width / 2 - 50, this._showPosition.y);
          animation.push(moveTo(this._getAnimDuration(), hidePos, "backIn"));
        };

        _proto.hideFromRight = function hideFromRight(animation) {
          var hidePos = v3(gaBaseConfig.visibleSize.width / 2 + this.contentTF.width / 2 + 50, this._showPosition.y);
          animation.push(moveTo(this._getAnimDuration(), hidePos, "backIn"));
        };

        _proto.hideDefault = function hideDefault() {
          this.node.active = false;
          this.onResetState();
        };

        _proto.onResetState = function onResetState() {
          if (!isValid(this.node)) return;
          setOpacity(this.contents, 255);
          this.node.scale = v3f(0);
        };

        _proto._getAnimDuration = function _getAnimDuration() {
          return 0.45 * gaUtils.TIME_SCALE;
        };

        _proto.onClose = function onClose() {
          this.emit(gaEventsCode.POPUP.CLOSE_TOP_POPUP);
        };

        _proto.playSFXClick = function playSFXClick() {
          this.soundPlayer.playSFXClick();
        };

        _createClass(gaBasePopup, [{
          key: "contentTF",
          get: function get() {
            return this.contents.getComponent(UITransform);
          }
        }, {
          key: "isShowing",
          get: function get() {
            return this._isShowing;
          },
          set: function set(state) {
            this._isShowing = state;
          }
        }, {
          key: "setAnimStyle",
          set: function set(style) {
            this.animStyle = style;
          }
        }]);

        return gaBasePopup;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "popupTitle", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contents", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "btnClose", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "zIndex", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "animStyle", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new gaStylePopupAnimation();
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBetBoardSetup.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, gaComponent;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "b4a4794ATZJsZ8nf7lBjWUf", "gaBetBoardSetup", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaBetBoardSetup = exports('default', (_dec = ccclass('gaBetBoardSetup'), _dec(_class = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaBetBoardSetup, _gaComponent);

        function gaBetBoardSetup() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;
          _this.betItems = {};
          _this._isInitialized = false;
          return _this;
        }

        var _proto = gaBetBoardSetup.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          if (!this._isInitialized) {
            this._isInitialized = true;
            this.initBoard();
          }
        };

        _proto.getBetItems = function getBetItems() {
          if (!this._isInitialized) {
            this._isInitialized = true;
            this.initBoard();
          }

          return this.betItems;
        };

        _proto.getBetItem = function getBetItem(id) {
          return this.betItems[id];
        };

        return gaBetBoardSetup;
      }(gaComponent)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBetHistoryDetail.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './gaReferenceManager.ts', './gaEventsCode.ts', './gaArcadeBaseTableHistory.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, SpriteFrame, Sprite, ScrollView, Component, gaEventEmitter, gaReferenceManager, gaEventsCode, gaArcadeBaseTableHistory;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      SpriteFrame = module.SpriteFrame;
      Sprite = module.Sprite;
      ScrollView = module.ScrollView;
      Component = module.Component;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaReferenceManager = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaArcadeBaseTableHistory = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "5c151abVZ1BCKhGI0+ImWxI", "gaBetHistoryDetail", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaBetHistoryDetail = exports('default', (_dec = ccclass("gaBetHistoryDetail"), _dec2 = property(gaArcadeBaseTableHistory), _dec3 = property([SpriteFrame]), _dec4 = property([Sprite]), _dec5 = property(ScrollView), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaBetHistoryDetail, _Component);

        function gaBetHistoryDetail() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "table", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "frameNumbers", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "result", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "scrollview", _descriptor4, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaBetHistoryDetail.prototype;

        _proto.updateData = function updateData(data) {
          data.items = data.items.sort(function (a, b) {
            if (a.winAmount > 0 && b.winAmount > 0) {
              return 1;
            }

            if (a.winAmount > 0) {
              return -1;
            }

            return 1;
          });
          this.table.initCells(data.items.length);
          this.table.updateData(data.items);

          if (this.scrollview) {
            this.scrollview.scrollToTop();
          }
        };

        _proto.backToMain = function backToMain() {
          gaReferenceManager.instance.getSoundPlayer().playSFXClick();
          gaEventEmitter.instance.emit(gaEventsCode.POPUP.HIDE_HISTORY_DETAIL);
        };

        return gaBetHistoryDetail;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "table", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "frameNumbers", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "result", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "scrollview", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBetHistoryItem.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventsCode.ts', './gaUtils.ts', './gaHistoryItem.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Node, Color, gaEventsCode, gaUtils, gaHistoryItem;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Node = module.Node;
      Color = module.Color;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      gaHistoryItem = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;

      cclegacy._RF.push({}, "d5e02BsHiVFc7oEosEMVKUp", "gaBetHistoryItem", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaBetHistoryItem = exports('default', (_dec = ccclass('gaBetHistoryItem'), _dec2 = property(Label), _dec3 = property(Node), _dec4 = property(Label), _dec5 = property(Label), _dec6 = property(Label), _dec7 = property(Color), _dec8 = property(Color), _dec9 = property(Color), _dec(_class = (_class2 = /*#__PURE__*/function (_gaHistoryItem) {
        _inheritsLoose(gaBetHistoryItem, _gaHistoryItem);

        function gaBetHistoryItem() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaHistoryItem.call.apply(_gaHistoryItem, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "session", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "overlay", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "time", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "winAmount", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "bet", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "winColor", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "loseColor", _descriptor7, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "drawColor", _descriptor8, _assertThisInitialized(_this));

          _this.data = null;
          return _this;
        }

        var _proto = gaBetHistoryItem.prototype;

        _proto.onSpawn = function onSpawn(data, index) {
          this.data = data;
          if (this.time) this.time.string = gaUtils.getTimeString(data.timeStamp);
          if (this.session) this.session.string = data.gameNumber;
          if (this.bet) this.bet.string = gaUtils.formatMoney(data.betAmount);

          if (this.winAmount) {
            var formatWinAmount = gaUtils.formatMoney(data.winAmount);
            this.winAmount.string = (data.winAmount > 0 ? '+' : data.winAmount < 0 ? '-' : '') + formatWinAmount;
            this.winAmount.node.color = data.winAmount > 0 ? this.winColor : data.winAmount < 0 ? this.loseColor : this.drawColor;
          }

          if (this.overlay) {
            this.overlay.active = index % 2 == 0;
          }
        };

        _proto.onClickDetail = function onClickDetail() {
          this.soundPlayer.playSFXClick();
          this.emit(gaEventsCode.POPUP.SHOW_HISTORY_DETAIL, this.data);
        };

        return gaBetHistoryItem;
      }(gaHistoryItem), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "session", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "overlay", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "time", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "winAmount", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "bet", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "winColor", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "loseColor", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "drawColor", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBetItem.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataStore.ts', './gaLogger.ts', './gaUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Button, Label, Node, isValid, tween, Component, gaDataStore, logger, gaUtils;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      Label = module.Label;
      Node = module.Node;
      isValid = module.isValid;
      tween = module.tween;
      Component = module.Component;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

      cclegacy._RF.push({}, "f6a65b+m79Gc65bSF6qi3Ku", "gaBetItem", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaBetItem = exports('default', (_dec = ccclass('gaBetItem'), _dec2 = property(Button), _dec3 = property(Label), _dec4 = property(Label), _dec5 = property(Node), _dec6 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaBetItem, _Component);

        function gaBetItem() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this; //#region ------------------------------------------------------------------ Declare variables

          _initializerDefineProperty(_this, "btnBet", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "lblOdds", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "lblAmount", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "nodeBetMax", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "betVFX", _descriptor5, _assertThisInitialized(_this));

          _this.onDoBet = null;
          _this._betId = '';
          _this._betAmount = 0;
          _this._odds = 0;
          _this._isLock = false;
          _this._isInitialized = false;
          return _this;
        }

        var _proto = gaBetItem.prototype; //#endregion
        //#region  --------------------------------------------------------------- Component functions

        _proto.onLoad = function onLoad() {
          this.reset();
          this.turnOffEffect(true);
        } //#endregion
        //#region  ------------------------------------------------------------------ public functions
        ;

        _proto.initialize = function initialize(id) {
          if (this._isInitialized) return;
          this._isInitialized = true;
          this._betId = id;
        };

        _proto.turnOnEffect = function turnOnEffect() {
          if (isValid(this.betVFX)) {
            this.betVFX.active = true;
          }
        };

        _proto.turnOffEffect = function turnOffEffect(force) {
          if (force === void 0) {
            force = false;
          }

          if (force || gaDataStore.instance.isUserPlaceAnyBet) {
            if (isValid(this.betVFX)) {
              this.betVFX.active = false;
            }
          }
        };

        _proto.lock = function lock() {
          if (this._isLock) return;
          this._isLock = true;

          if (isValid(this.btnBet)) {
            this.btnBet.interactable = false;
            this.btnBet.node.targetOff(this);
          }
        };

        _proto.unlock = function unlock() {
          this._isLock = false;

          if (isValid(this.btnBet)) {
            this.btnBet.interactable = true;
            this.btnBet.node.targetOff(this);
            this.btnBet.node.on('click', this.onBetClick, this);
          }
        };

        _proto.setOdds = function setOdds(odds) {
          if (odds != null) {
            this._odds = odds;
            this.lblOdds.string = odds > 0 ? "x" + odds : '';
          }
        };

        _proto.getOdds = function getOdds() {
          return this._odds;
        };

        _proto.showResult = function showResult() {
          var _this2 = this;

          var isActive = true;
          this.lblAmount.node.active = this.lblOdds.node.active = isActive;
          tween(this).repeatForever(tween().delay(0.3).call(function () {
            isActive = !isActive;
            _this2.lblAmount.node.active = _this2.lblOdds.node.active = isActive;
          })).start();
        };

        _proto.setBetAmount = function setBetAmount(amount) {
          this._betAmount = Math.max(0, amount);
          this.lblAmount.string = amount > 0 ? gaUtils.formatMoney(amount) : "";
        };

        _proto.reachMaxBet = function reachMaxBet(maxBet) {
          var _this3 = this;

          logger.warn("ReachMaxBet: betId =", this.betId, "maxBet =", gaUtils.formatWallet(maxBet));
          if (!isValid(this.nodeBetMax)) return;
          this.nodeBetMax.active = true;
          tween(this.nodeBetMax).delay(0.5).call(function () {
            _this3.nodeBetMax.active = false;
          }).start();
        };

        _proto.reset = function reset() {
          gaUtils.stopAllByTarget(this.node);
          this.setBetAmount(0);
          this.setOdds(this._odds);
          this.lblAmount.string = '';
          this.lblAmount.node.active = true;
          this.lblOdds.node.active = true;
          this.node.active = true;

          if (isValid(this.nodeBetMax)) {
            this.nodeBetMax.active = false;
          }

          this.turnOffEffect();
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto.onBetClick = function onBetClick() {
          if (!this._isLock) {
            this.doBet();
          }
        };

        _proto.doBet = function doBet() {
          if (!this._isLock && this.onDoBet) {
            var _isValid = this.onDoBet(this._betId, this._betAmount + gaDataStore.instance.betValue);

            return _isValid;
          }

          return false;
        } //#endregion
        ;

        _createClass(gaBetItem, [{
          key: "betId",
          get: function get() {
            return this._betId;
          }
        }]);

        return gaBetItem;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "btnBet", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "lblOdds", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblAmount", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "nodeBetMax", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "betVFX", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBetPanel.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts', './gaEventsCode.ts', './gaDataStore.ts', './gaBetBoardSetup.ts', './gaReferenceManager.ts', './gaUtils.ts', './gaBaseConfig.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, gaComponent, gaEventsCode, gaDataStore, gaBetBoardSetup, gaReferenceManager, gaUtils, gaBaseConfig;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaBetBoardSetup = module.default;
    }, function (module) {
      gaReferenceManager = module.default;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "45e73MdZyRM+ofAqknvmiK6", "gaBetPanel", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaBetPanel = exports('default', (_dec = ccclass('gaBetPanel'), _dec2 = property(gaBetBoardSetup), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaBetPanel, _gaComponent);

        function gaBetPanel() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this; //#region ------------------------------------------------------------------ Declare variables

          _initializerDefineProperty(_this, "betBoard", _descriptor, _assertThisInitialized(_this));

          _this._betItems = {};
          _this._isLocked = false;
          _this._isInitialized = false;
          _this._gameNumberRebet = '';
          return _this;
        }

        var _proto = gaBetPanel.prototype; //#endregion
        //#region  --------------------------------------------------------------- Component functions

        _proto.onLoad = function onLoad() {
          gaReferenceManager.instance.setReference("betPanel", this.node);
          this.register(gaEventsCode.DEMO.START, this._onDemo);
          this.register(gaEventsCode.DEMO.RESET_USER_BET, this._clearDemoBet);
          this.register(gaEventsCode.DATA.PAYOUT_RECEIVED, this._onPayoutReceived);
          this.register(gaEventsCode.WALLET.UPDATE_WALLET, this._onUpdateWallet);
        };

        _proto.onDestroy = function onDestroy() {
          _gaComponent.prototype.onDestroy.call(this);

          this.lock();
        } //#endregion
        //#region  ------------------------------------------------------------------ public functions
        ;

        _proto.initialize = function initialize() {
          if (this._isInitialized) return;
          this._isInitialized = true;
          this._betItems = this.betBoard.getBetItems();

          for (var id in this._betItems) {
            if (Object.prototype.hasOwnProperty.call(this._betItems, id)) {
              var item = this._betItems[id];
              this._betItems[id] = item;
              item.onDoBet = this.doBet.bind(this);
              item.initialize(id);
            }
          }

          this.lock();
        };

        _proto.startBetting = function startBetting() {
          if (gaBaseConfig.instance.BETTING.AutoRebet) {
            this.rebet();
          } else {
            this.reset();
          }
        };

        _proto.unlock = function unlock() {
          this._isLocked = false;
          this.setOdds();
          this.refreshGUI();

          for (var id in this._betItems) {
            var betItem = this._betItems[id];
            betItem.unlock();
          }
        };

        _proto.lock = function lock() {
          this._isLocked = true;

          this._lockBetButtons(true);

          this.refreshGUI();
        };

        _proto.isLocked = function isLocked() {
          return this._isLocked;
        };

        _proto.rebet = function rebet() {
          if (this._gameNumberRebet == gaDataStore.instance.gameNumber) return;
          this._gameNumberRebet = gaDataStore.instance.gameNumber;

          if (gaDataStore.instance.userInfo.availableAmount < gaDataStore.instance.totalBet) {
            this.reset();

            this._lockBetButtons(false);

            this.emit(gaEventsCode.BET.NOT_ENOUGH_MONEY);
            return;
          }

          var betting = gaUtils.cloneDeep(gaDataStore.instance.betting);
          gaDataStore.instance.userInfo.clearPending();
          gaDataStore.instance.betting = {};

          for (var id in this._betItems) {
            var betItem = this._betItems[id];
            var bettingAmount = betting[id];

            if (bettingAmount > 0) {
              if (this.canBet(id, bettingAmount, false) == false) {
                bettingAmount = this.getAvailableAmount(id, bettingAmount);
              }
            }

            if (bettingAmount > 0) {
              this.doBet(id, bettingAmount);
            } else {
              betItem.reset();
            }
          }

          this.emit(gaEventsCode.USER.UPDATE_BALANCE);
        };

        _proto.doBet = function doBet(betId, betAmt) {
          if (!this.canBet(betId, betAmt)) return false;
          gaDataStore.instance.betting[betId] = betAmt;
          gaDataStore.instance.isUserPlaceAnyBet = true;

          for (var id in this._betItems) {
            var betItem = this._betItems[id];

            if (id == betId) {
              betItem.setBetAmount(betAmt);
            }
          }

          gaDataStore.instance.userInfo.setPending(gaDataStore.instance.totalBet);
          this.emit(gaEventsCode.BET.PLACE_BET);
          this.emit(gaEventsCode.USER.UPDATE_BALANCE, gaDataStore.instance.userInfo.availableAmount);
          this.refreshGUI();
          return true;
        };

        _proto.getAvailableAmount = function getAvailableAmount(betId, currentBet) {
          var betValue = gaDataStore.instance.betValue;
          var userAvailableAmount = Math.floor(gaDataStore.instance.userInfo.availableAmount / betValue) * betValue;
          var maxBet = gaDataStore.instance.getMaxBet(betId);
          return Math.min(userAvailableAmount, maxBet, currentBet);
        };

        _proto.canBet = function canBet(betId, betAmt, notifyDialog) {
          var _this2 = this;

          if (notifyDialog === void 0) {
            notifyDialog = true;
          }

          var wallet = gaDataStore.instance.userInfo.availableAmount;
          var currentBet = gaDataStore.instance.betting[betId] || 0;
          var minBetValue = betAmt - currentBet;

          if (wallet < minBetValue) {
            var callback = function callback() {
              _this2._lockBetButtons(false);
            };

            if (notifyDialog) {
              this.emit(gaEventsCode.BET.NOT_ENOUGH_MONEY, callback);
            }

            this._lockBetButtons(true);

            return false;
          }

          var maxBet = gaDataStore.instance.getMaxBet(betId);

          if (maxBet && betAmt > maxBet) {
            this._betItems[betId].reachMaxBet(maxBet);

            if (notifyDialog) {
              this.emit(gaEventsCode.BET.REACH_MAX_BET, {
                betId: betId,
                maxBet: maxBet
              });
            }

            return false;
          }

          return true;
        };

        _proto.reset = function reset() {
          var isResetBet = gaDataStore.instance.totalBet > 0;
          gaDataStore.instance.userInfo.clearPending();
          gaDataStore.instance.betting = {};

          for (var id in this._betItems) {
            if (Object.prototype.hasOwnProperty.call(this._betItems, id)) {
              var betItem = this._betItems[id];
              betItem.reset();
            }
          }

          if (isResetBet) {
            this.emit(gaEventsCode.BET.CLEAR_BET);
            this.emit(gaEventsCode.USER.UPDATE_BALANCE);
          }
        };

        _proto.getBetItem = function getBetItem(id) {
          return this._betItems[id];
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto._onUpdateWallet = function _onUpdateWallet() {
          if (!this.isLocked() && gaDataStore.instance.userInfo.availableAmount < 0) {
            this.reset();

            this._lockBetButtons(false);

            this.emit(gaEventsCode.BET.NOT_ENOUGH_MONEY);
          }
        };

        _proto._onDemo = function _onDemo() {};

        _proto._lockBetButtons = function _lockBetButtons(isLock) {
          for (var id in this._betItems) {
            var betItem = this._betItems[id];

            if (isLock) {
              betItem.lock();
            } else {
              betItem.unlock();
            }
          }
        };

        _proto._onPayoutReceived = function _onPayoutReceived() {
          this.setOdds();
        };

        _proto._clearDemoBet = function _clearDemoBet() {
          this.reset();
          this.setOdds();
          this.refreshGUI();
        };

        _proto.setOdds = function setOdds() {
          for (var id in this._betItems) {
            var betItem = this._betItems[id];
            betItem.setOdds(gaDataStore.instance.getOdds(id));
          }
        };

        _proto.refreshGUI = function refreshGUI() {} //#endregion
        ;

        return gaBetPanel;
      }(gaComponent), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "betBoard", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaBettingState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataStore.ts', './gaBaseConfig.ts', './gaEventsCode.ts', './gaGameText.ts', './gaStateView.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, gaDataStore, gaBaseConfig, gaEventsCode, gaGameText, gaStateView;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaGameText = module.gaGameText;
    }, function (module) {
      gaStateView = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "55837uRZmFBvoY4C6z6tfss", "gaBettingState", undefined);

      var ccclass = _decorator.ccclass;
      var gaBettingState = exports('default', (_dec = ccclass("gaBettingState"), _dec(_class = /*#__PURE__*/function (_gaStateView) {
        _inheritsLoose(gaBettingState, _gaStateView);

        function gaBettingState() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaStateView.call.apply(_gaStateView, [this].concat(args)) || this;
          _this._pendingRequest = null;
          return _this;
        }

        var _proto = gaBettingState.prototype; //#endregion
        //#region  ------------------------------------------------------------------ public functions

        _proto.onEnter = function onEnter() {
          _gaStateView.prototype.onEnter.call(this);

          this.unlock();
        };

        _proto.onLeave = function onLeave() {
          _gaStateView.prototype.onLeave.call(this);

          this.lock();
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_FORCE_DISCONNECT, this.onNetworkDisconnect);
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_DISCONNECT, this.onNetworkDisconnect);
          this.register(gaEventsCode.NETWORK.NORMAL, this.onNetworkNormal);
          this.register(gaEventsCode.VIEW.UNLOCK_BETTING_VIEW, this.unlock);
          this.register(gaEventsCode.VIEW.LOCK_BETTING_VIEW, this.lock);
          this.register(gaEventsCode.NETWORK.REQUEST_BET_ERROR, this.onRequestBetError);
          this.register(gaEventsCode.DATA.RESULT_RECEIVED, this.onResultReceived);
        };

        _proto.lock = function lock() {};

        _proto.unlock = function unlock() {};

        _proto.playRequest = function playRequest() {
          var _this2 = this;

          if (gaDataStore.instance.userInfo.availableAmount <= gaDataStore.instance.totalBet) {
            return;
          }

          this.lock();

          this._pendingRequest = function () {
            _this2.emit(gaEventsCode.ACTION.BET);
          };

          this._pendingRequest();
        };

        _proto.onRequestBetError = function onRequestBetError(data) {
          var _this3 = this;

          var message = gaGameText.getErrorMessage(data.code);

          var onConfirm = function onConfirm() {
            _this3.startBetting();
          };

          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
          });
        };

        _proto.onResultReceived = function onResultReceived(result, error) {
          if (error) {
            if (error.isResponseError) {
              this._pendingRequest = null;
            }

            return;
          }

          this._pendingRequest = null;
          this.stopBetting();
        };

        _proto.startBetting = function startBetting() {
          this._pendingRequest = null;
        };

        _proto.stopBetting = function stopBetting() {
          this._pendingRequest = null;
          this.lock();
          this.emit(gaEventsCode.STATE.END_BETTING);
        };

        _proto.onNetworkDisconnect = function onNetworkDisconnect() {
          if (!gaDataStore.instance.demo) {
            this.lock();
          }
        };

        _proto.onNetworkNormal = function onNetworkNormal() {
          if (this._pendingRequest != null) {
            this._pendingRequest();
          } else {
            this.unlock();
          }
        } //#endregion
        ;

        _createClass(gaBettingState, [{
          key: "stateName",
          get: //#region ------------------------------------------------------------------ Declare variables
          function get() {
            return gaBaseConfig.instance.GAME_STATE.BETTING;
          }
        }]);

        return gaBettingState;
      }(gaStateView)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaButtonFullScreen.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts', './gaBaseConfig.ts', './gaEventsCode.ts', './gaScreenUtils.ts', './gaUtils.ts', './gaReferenceManager.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, Sprite, sys, Node, view, ResolutionPolicy, UITransform, gaComponent, gaBaseConfig, gaEventsCode, gaScreenUtils, gaUtils, gaReferenceManager;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      sys = module.sys;
      Node = module.Node;
      view = module.view;
      ResolutionPolicy = module.ResolutionPolicy;
      UITransform = module.UITransform;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaScreenUtils = module.default;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      gaReferenceManager = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "ad8cc9KpHZNPLn4ccpXrFNd", "gaButtonFullScreen", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaButtonFullScreen = exports('default', (_dec = ccclass('gaButtonFullScreen'), _dec(_class = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaButtonFullScreen, _gaComponent);

        function gaButtonFullScreen() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;
          _this.divFS = null;
          _this.defaultStyle = {};
          return _this;
        }

        var _proto = gaButtonFullScreen.prototype;

        _proto.onLoad = function onLoad() {
          gaReferenceManager.instance.btnFullScreen = this.node;
          this.node.removeComponent(Sprite);
          this.divFS = window['divFullscreen'] || document.getElementById('div_full_screen');

          if (!sys.isMobile || !sys.isBrowser || !this.divFS) {
            this.destroy();
            return;
          }

          var element = this.divFS.children[0];

          if (element) {
            this.defaultStyle = {
              width: element.style.width,
              height: element.style.height,
              top: element.style.top,
              right: element.style.right,
              left: element.style.left,
              bottom: element.style.bottom
            };
          }

          _gaComponent.prototype.onLoad.call(this);

          this.onScreenResize();
        };

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.COMMON.ON_SCREEN_RESIZE, this.onScreenResize);
          this.node.on(Node.EventType.TRANSFORM_CHANGED, this.onScreenResize, this);
          this.node.on(Node.EventType.SIZE_CHANGED, this.onScreenResize, this);
        };

        _proto.onDestroy = function onDestroy() {
          if (this.defaultStyle) {
            this.setStyle('width', this.defaultStyle.width);
            this.setStyle('height', this.defaultStyle.height);
            this.setStyle('top', this.defaultStyle.top);
            this.setStyle('right', this.defaultStyle.right);
            this.setStyle('left', this.defaultStyle.left);
            this.setStyle('bottom', this.defaultStyle.bottom);
          }

          this.setVisible(true);

          _gaComponent.prototype.onDestroy.call(this);
        };

        _proto.onDisable = function onDisable() {
          this.setVisible(false);
        };

        _proto.onEnable = function onEnable() {
          this.setVisible(true);
        };

        _proto.onScreenResize = function onScreenResize() {
          this.unschedule(this.updateStyle);
          this.scheduleOnce(this.updateStyle);
        };

        _proto.updateStyle = function updateStyle() {
          var scale = this.getScale();
          this.setStyle('width', this.transform.width * scale + "px");
          this.setStyle('height', this.transform.height * scale + "px");

          if (gaScreenUtils.getOrientation()) {
            this.setStyle('top', this.getY(scale) + "px");
            this.setStyle('right', this.getX(scale) + "px");
            this.setStyle('left', 'unset');
            this.setStyle('bottom', 'unset');
          } else {
            this.setStyle('bottom', this.getX(scale) + "px");
            this.setStyle('right', this.getY(scale) + "px");
            this.setStyle('left', 'unset');
            this.setStyle('top', 'unset');
          }
        };

        _proto.setStyle = function setStyle(key, value) {
          if (!this.divFS || !this.divFS.children) return;

          for (var index = 0; index < this.divFS.children.length; index++) {
            var element = this.divFS.children[index];
            element.style[key] = value;
          }
        };

        _proto.setVisible = function setVisible(visible) {
          var disableFullscreen = gaUtils.getParam(window.location.href, 'disableFullscreen');

          if (this.divFS) {
            this.divFS.style.display = !disableFullscreen && visible ? 'block' : 'none';
          }
        };

        _proto.getScale = function getScale() {
          var frameSize = view.getFrameSize();
          var resolutionPolicy = view.getResolutionPolicy();

          if (resolutionPolicy == ResolutionPolicy.FIXED_WIDTH) {
            return frameSize.width / gaBaseConfig.designSize.width;
          }

          return frameSize.height / gaBaseConfig.designSize.height;
        };

        _proto.getY = function getY(scale) {
          var visibleSize = gaBaseConfig.visibleSize;
          var visibleRect = view.getVisibleSize();
          var spriteTopAlign = visibleSize.height / 2 - this.node.getPosition().y - this.transform.height / 2;
          var unvisbleSize = visibleRect.height - visibleSize.height;
          return (unvisbleSize / 2 + spriteTopAlign) * scale;
        };

        _proto.getX = function getX(scale) {
          var visibleSize = gaBaseConfig.visibleSize;
          var visibleRect = view.getVisibleSize();
          var spriteRightAlign = visibleSize.width / 2 - this.node.getPosition().x - this.transform.width / 2;
          var unvisbleSize = visibleRect.width - visibleSize.width;
          return (unvisbleSize / 2 + spriteRightAlign) * scale;
        };

        _createClass(gaButtonFullScreen, [{
          key: "transform",
          get: function get() {
            return this.node.getComponent(UITransform);
          }
        }]);

        return gaButtonFullScreen;
      }(gaComponent)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaCommandID.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "75c25DhF9dOyovYyACbGWHh", "gaCommandID", undefined);

      var gaCommandID = exports('default', /*#__PURE__*/function () {
        // response
        function gaCommandID() {
          this.mapAcronym = {};
          this.mapResponse = {};
          this.mapResponse[gaCommandID.R_JOIN_GAME] = gaCommandID.ON_JOIN_GAME_SUCCESS;
          this.mapResponse[gaCommandID.R_NEW_ODDS] = gaCommandID.ON_ODDS_UPDATE;
          this.mapResponse[gaCommandID.R_PLAY_GAME] = gaCommandID.ON_PLAY_GAME;
          this.mapAcronym = {
            'jgr': gaCommandID.ON_JOIN_GAME_SUCCESS,
            'sud': gaCommandID.ON_STATE_UPDATE,
            'spu': gaCommandID.ON_STATE_PUSH,
            'erp': gaCommandID.ERROR_PUSH,
            'mep': gaCommandID.MESSAGE_PUSHED,
            'jud': gaCommandID.JACKPOT_UPDATE
          };
        }

        var _proto = gaCommandID.prototype;

        _proto.getResponseCMD = function getResponseCMD(request) {
          return this.mapResponse[request];
        };

        _proto.destroy = function destroy() {
          gaCommandID.instance = null;
        };

        return gaCommandID;
      }());
      gaCommandID.R_KEEP_ACTIVE = "pa";
      gaCommandID.R_JOIN_GAME = "jg";
      gaCommandID.R_NEW_ODDS = "vspg";
      gaCommandID.R_PLAY_GAME = "vsng";
      gaCommandID.ON_JOIN_GAME_SUCCESS = "client-join-game-result";
      gaCommandID.ON_STATE_UPDATE = "state-updated";
      gaCommandID.ON_STATE_PUSH = "state-pushed";
      gaCommandID.ERROR_PUSH = "error-pushed";
      gaCommandID.MESSAGE_PUSHED = "message-pushed";
      gaCommandID.JACKPOT_UPDATE = "jackpot-updated";
      gaCommandID.JACKPOT_WIN = "jackpot-win";
      gaCommandID.ON_ODDS_UPDATE = "u";
      gaCommandID.ON_PLAY_GAME = "n";
      gaCommandID.ON_NOTIFY = "bGw";
      gaCommandID.CLAIM_GAME = 'c';
      gaCommandID.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaCommon.ts", ['cc', './connectNetwork.ts', './globalNetwork.ts', './gameCommonUtils.ts', './loadConfigAsync.ts', './serviceRest.ts', './game-network.mjs_cjs=&original=.js', './SoundPlayerImpl.ts', './game-network.js'], function (exports) {
  var cclegacy, _cjsExports;

  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      exports('connectNetwork', module.default);
    }, function (module) {
      exports('globalNetwork', module.default);
    }, function (module) {
      exports('gameCommonUtils', module.default);
    }, function (module) {
      exports('loadConfigAsync', module.default);
    }, function (module) {
      exports('serviceRest', module.default);
    }, null, function (module) {
      exports('SoundPlayerImpl', module.SoundPlayerImpl);
    }, function (module) {
      _cjsExports = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "c4da05uGW5F8Y8bMtAVi3V8", "gaCommon", undefined);

      var network = exports('network', globalThis.GameNetwork || _cjsExports);
      var logger = network.lib.logger;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaComponent.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './gaReferenceManager.ts', './gaSoundPlayer.ts', './gaUtils.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, Component, gaEventEmitter, gaReferenceManager, gaSoundPlayer, gaUtils;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      Component = module.Component;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaReferenceManager = module.default;
    }, function (module) {
      gaSoundPlayer = module.default;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "638857m4xFOYbOidSp/hlcV", "gaComponent", undefined);

      var gaComponent = exports('default', /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaComponent, _Component);

        function gaComponent() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this._soundPlayer = null;
          _this.__eventRegistering = {};
          return _this;
        }

        var _proto = gaComponent.prototype;

        _proto.register = function register(eventCode, listener) {
          this.__eventRegistering[eventCode] = listener;
          this.emitter && this.emitter.registerEvent(eventCode, listener, this);
        };

        _proto.registerOnce = function registerOnce(eventCode, listener) {
          this.__eventRegistering[eventCode] = listener;
          this.emitter && this.emitter.registerOnce(eventCode, listener, this);
        };

        _proto.emit = function emit(eventCode) {
          var _this$emitter;

          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          this.emitter && (_this$emitter = this.emitter).emit.apply(_this$emitter, [eventCode].concat(args));
        };

        _proto.removeEvent = function removeEvent(eventCode) {
          this.emitter && this.emitter.removeEvent(eventCode, this.__eventRegistering[eventCode], this);
        };

        _proto.removeEvents = function removeEvents() {
          this.emitter && this.emitter.removeEvents(this);
        };

        _proto.onLoad = function onLoad() {
          this.initEvents();
        };

        _proto.initEvents = function initEvents() {};

        _proto.onDestroy = function onDestroy() {
          gaUtils.stopAllByTarget(this);
          this.removeEvents();
        };

        _createClass(gaComponent, [{
          key: "emitter",
          get: function get() {
            return gaEventEmitter.instance;
          }
        }, {
          key: "soundPlayer",
          get: function get() {
            if (this._soundPlayer == null) {
              this._soundPlayer = gaReferenceManager.instance.soundPlayer.getComponent(gaSoundPlayer);
            }

            return this._soundPlayer;
          }
        }]);

        return gaComponent;
      }(Component));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaCountPoint.ts", ['cc', './gaPromise.ts', './gaUtils.ts'], function (exports) {
  var cclegacy, tween, gaPromise, gaUtils;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      tween = module.tween;
    }, function (module) {
      gaPromise = module.gaPromise;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "10ce7ENNQVLC52TKN7UzXba", "gaCountPoint", undefined);

      var gaCountPoint = exports('default', /*#__PURE__*/function () {
        //#region ------------------------------------------------------------------ Declare variables
        // support for map tween in ActionManager
        //#endregion
        //#region  ------------------------------------------------------------- Constructor functions
        function gaCountPoint(_label, _isMoney, _frameUpdate) {
          if (_isMoney === void 0) {
            _isMoney = true;
          }

          if (_frameUpdate === void 0) {
            _frameUpdate = 6;
          }

          this._desValue = 0;
          this._duration = 0;
          this._tween = null;
          this._savedHdl = null;
          this._id = '';
          this._currentValue = 0;
          this._label = _label;
          this._isMoney = _isMoney;
          this._frameUpdate = _frameUpdate;
          this._id = 'gaCountPoint.' + this._label.node.name + '.' + this._label.uuid;
        } //#endregion
        //#region  ------------------------------------------------------------------ public functions


        var _proto = gaCountPoint.prototype;

        _proto.count = function count(desValue, duration) {
          var _this = this;

          if (!this._label || !this._label.isValid) return null;
          this._desValue = desValue;
          this._duration = duration;
          return new gaPromise(function (resolve) {
            _this._savedHdl = function () {
              return _this._countCompleted(resolve);
            };

            _this._tweenValue();
          });
        };

        _proto.setValue = function setValue(value) {
          gaUtils.stopTween(this._tween);
          this._currentValue = value;

          this._setString(value);
        };

        _proto.getValue = function getValue() {
          return this._currentValue;
        };

        _proto.fastToResult = function fastToResult(duration) {
          if (duration === void 0) {
            duration = 0.8;
          }

          this._duration = duration;

          this._tweenValue();
        };

        _proto.pause = function pause() {
          gaUtils.stopTween(this._tween);
        };

        _proto.resume = function resume() {
          this._tweenValue();
        };

        _proto.reset = function reset() {
          gaUtils.stopTween(this._tween);
          this._tween = null;
          this._desValue = 0;
          this._duration = 0;
          this._currentValue = 0;
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto._tweenValue = function _tweenValue() {
          var _this2 = this;

          gaUtils.stopTween(this._tween);
          this._currentValue = parseInt(this._label.string.replace(/[,.]/g, "")) || 0;
          var start = Number(this._currentValue);
          var end = Number(this._desValue);
          var diff = end - start;
          var duration = this._duration;
          var frame = 0;

          if (duration > 0) {
            var tweenOpts = {
              progress: function progress(_start, _end, current, ratio) {
                var value = start + diff * ratio;
                _this2._duration = duration * (1 - ratio);
                var allowUpdate = ++frame % _this2._frameUpdate == 0;

                _this2._countUpdate(value, allowUpdate);

                return current;
              }
            };
            this._tween = tween(this).to(duration, {
              _currentValue: end
            }, tweenOpts).call(this._savedHdl).start();
          } else {
            this._savedHdl && this._savedHdl();
          }
        };

        _proto._countUpdate = function _countUpdate(value, updateLabel) {
          if (updateLabel === void 0) {
            updateLabel = true;
          }

          var v = Math.floor(value);

          if (this._currentValue != v) {
            this._currentValue = v;

            if (updateLabel) {
              this._setString(v);
            }
          }
        };

        _proto._countCompleted = function _countCompleted(resolve) {
          this.setValue(this._desValue);
          this._duration = 0;
          this._savedHdl = null;
          resolve(this._desValue);
        };

        _proto._setString = function _setString(value) {
          if (this._label && this._label.isValid) {
            if (this._isMoney) {
              this._label.string = gaUtils.formatMoney(value);
            } else {
              this._label.string = value.toString();
            }
          } else {
            gaUtils.stopTween(this._tween);
          }
        } //#endregion
        ;

        return gaCountPoint;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaCurrencyCalculator.ts", ['cc', './utils.ts', './gaBaseConfig.ts', './gaLogger.ts', './gaDataStore.ts'], function (exports) {
  var cclegacy, updateUtilConfig, formatMoney, gaBaseConfig, logger, gaDataStore;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      updateUtilConfig = module.updateUtilConfig;
      formatMoney = module.formatMoney;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "6bb4eEvL3JOvY3fwoutkc0I", "gaCurrencyCalculator", undefined);

      var gaCurrencyCalculator = exports('default', /*#__PURE__*/function () {
        function gaCurrencyCalculator() {
          // override this to update new money key
          this._listMoneyKey = ["Wallet", "GoldReward", "WinAmount", "TotalReward"];
        }

        var _proto = gaCurrencyCalculator.prototype;

        _proto.updateKeyMoneyInCurrencyData = function updateKeyMoneyInCurrencyData(content, convertToDefault) {
          var _this = this;

          if (convertToDefault === void 0) {
            convertToDefault = true;
          } // Check all field in Content to find Money Key and Convert


          if (content === undefined || content === null) {
            return content;
          }

          if (Array.isArray(content)) {
            content.forEach(function (elm) {
              return _this.updateKeyMoneyInCurrencyData(elm, convertToDefault);
            });
          } else if (typeof content === 'object') {
            Object.keys(content).forEach(function (key) {
              var val = content[key];

              if (_this.isInListMoneyKey(key)) {
                content[key] = convertToDefault ? _this.convertToDefaultCurrency(val) : _this.convertToUserCurrency(val);
              } else if (Array.isArray(val)) {
                content[key].forEach(function (elm) {
                  return _this.updateKeyMoneyInCurrencyData(elm, convertToDefault);
                });
              } else if (typeof val === 'object') {
                content[key] = _this.updateKeyMoneyInCurrencyData(val, convertToDefault);
              }
            });
          }

          return content;
        } // Utilities
        ;

        _proto.isInListMoneyKey = function isInListMoneyKey(key) {
          return this._listMoneyKey.indexOf(key) >= 0;
        };

        _proto.isDefaultCurrency = function isDefaultCurrency() {
          return gaDataStore.instance.getCurrencyRatio() === 1;
        };

        _proto.formatCurrency = function formatCurrency(value) {
          value = +value;
          var stringResult = value.toString();
          var targetTypeCurrency = gaDataStore.instance.getUserTypeOfCurrency();
          var CURRENCY_CONFIG = gaBaseConfig.instance.CURRENCY_CONFIG[targetTypeCurrency];

          if (!CURRENCY_CONFIG) {
            logger.error("No Currency Config");
            return;
          }

          updateUtilConfig("CURRENCY_CONFIG", CURRENCY_CONFIG);

          switch (targetTypeCurrency) {
            case gaBaseConfig.instance.CURRENCY_CONFIG.USD.ACRONYM:
              if (value < 0.5 && value > 0) {
                // if value < 0.5 change USD to Cent
                targetTypeCurrency = gaBaseConfig.instance.CURRENCY_CONFIG.CENT.ACRONYM;
                CURRENCY_CONFIG = gaBaseConfig.instance.CURRENCY_CONFIG[targetTypeCurrency];
                updateUtilConfig("CURRENCY_CONFIG", CURRENCY_CONFIG);
                value = this.multiplyTwoNumber(value, 100);
              }

              stringResult = formatMoney(value, 2);
              break;

            case gaBaseConfig.instance.CURRENCY_CONFIG.VND.ACRONYM:
            default:
              stringResult = formatMoney(value);
              break;
          }

          return stringResult;
        };

        _proto.convertToUserCurrency = function convertToUserCurrency(val) {
          var ratio = gaDataStore.instance.getCurrencyRatio();
          var result = this.divideTwoNumber(val, ratio);
          return result;
        };

        _proto.convertToDefaultCurrency = function convertToDefaultCurrency(val) {
          var ratio = gaDataStore.instance.getCurrencyRatio();
          var result = this.multiplyTwoNumber(val, ratio);
          return result;
        } //Calculator float number
        ;

        _proto.plusTwoNumber = function plusTwoNumber(firstNum, secondNum) {
          return firstNum + secondNum;
        };

        _proto.minusTwoNumber = function minusTwoNumber(firstNum, secondNum) {
          return firstNum - secondNum;
        };

        _proto.divideTwoNumber = function divideTwoNumber(firstNum, secondNum) {
          return firstNum / secondNum;
        };

        _proto.multiplyTwoNumber = function multiplyTwoNumber(firstNum, secondNum) {
          return firstNum * secondNum;
        };

        _proto.destroy = function destroy() {
          gaCurrencyCalculator.instance = null;
        };

        return gaCurrencyCalculator;
      }());
      gaCurrencyCalculator.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaCustomDataType.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaMapKeyConfig.ts', './gaUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, cclegacy, _decorator, sp, Enum, SpriteFrame, Mapping, gaUtils;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      sp = module.sp;
      Enum = module.Enum;
      SpriteFrame = module.SpriteFrame;
    }, function (module) {
      Mapping = module.default;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _dec7, _dec8, _dec9, _class4, _class5, _descriptor7, _descriptor8, _dec10, _dec11, _dec12, _dec13, _dec14, _class7, _class8, _descriptor9, _descriptor10, _descriptor11, _descriptor12;

      cclegacy._RF.push({}, "ed497LgZuBHWaDSQB4cGtPO", "gaCustomDataType", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var POPUP_ANIMATION = exports('POPUP_ANIMATION', /*#__PURE__*/function (POPUP_ANIMATION) {
        POPUP_ANIMATION[POPUP_ANIMATION["DEFAULT"] = 0] = "DEFAULT";
        POPUP_ANIMATION[POPUP_ANIMATION["FADE"] = 1] = "FADE";
        POPUP_ANIMATION[POPUP_ANIMATION["PULSE"] = 2] = "PULSE";
        POPUP_ANIMATION[POPUP_ANIMATION["TOP_DOWN"] = 3] = "TOP_DOWN";
        POPUP_ANIMATION[POPUP_ANIMATION["BOTTOM_UP"] = 4] = "BOTTOM_UP";
        POPUP_ANIMATION[POPUP_ANIMATION["FROM_LEFT"] = 5] = "FROM_LEFT";
        POPUP_ANIMATION[POPUP_ANIMATION["FROM_RIGHT"] = 6] = "FROM_RIGHT";
        return POPUP_ANIMATION;
      }({}));
      var gaNotifyConfig = exports('gaNotifyConfig', (_dec = property({
        serializable: true
      }), _dec2 = property({
        serializable: true
      }), _dec3 = property({
        serializable: true
      }), _dec4 = property({
        visible: true
      }), _dec5 = property(sp.SkeletonData), _dec6 = property({
        visible: true
      }), ccclass(_class = (_class2 = function gaNotifyConfig() {
        _initializerDefineProperty(this, "animAppear", _descriptor, this);

        _initializerDefineProperty(this, "animIdle", _descriptor2, this);

        _initializerDefineProperty(this, "animDisappear", _descriptor3, this);

        _initializerDefineProperty(this, "languageKey", _descriptor4, this);

        _initializerDefineProperty(this, "spineData", _descriptor5, this);

        _initializerDefineProperty(this, "type", _descriptor6, this);
      }, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "animAppear", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "animIdle", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "animDisappear", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "languageKey", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 'txtJPNotify';
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "spineData", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "type", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      })), _class2)) || _class));
      var gaStylePopupAnimation = exports('gaStylePopupAnimation', (_dec7 = ccclass('gaStylePopupAnimation'), _dec8 = property({
        type: Enum(POPUP_ANIMATION)
      }), _dec9 = property({
        type: Enum(POPUP_ANIMATION)
      }), _dec7(_class4 = (_class5 = function gaStylePopupAnimation() {
        _initializerDefineProperty(this, "show", _descriptor7, this);

        _initializerDefineProperty(this, "hide", _descriptor8, this);
      }, (_descriptor7 = _applyDecoratedDescriptor(_class5.prototype, "show", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return POPUP_ANIMATION.DEFAULT;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class5.prototype, "hide", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return POPUP_ANIMATION.DEFAULT;
        }
      })), _class5)) || _class4));
      var gaButtonSpriteState = exports('gaButtonSpriteState', (_dec10 = ccclass('gaButtonSpriteState'), _dec11 = property(SpriteFrame), _dec12 = property(SpriteFrame), _dec13 = property(SpriteFrame), _dec14 = property(SpriteFrame), _dec10(_class7 = (_class8 = /*#__PURE__*/function () {
        function gaButtonSpriteState() {
          _initializerDefineProperty(this, "normalSprite", _descriptor9, this);

          _initializerDefineProperty(this, "pressedSprite", _descriptor10, this);

          _initializerDefineProperty(this, "hoverSprite", _descriptor11, this);

          _initializerDefineProperty(this, "disabledSprite", _descriptor12, this);
        }

        var _proto = gaButtonSpriteState.prototype;

        _proto.updateSprite = function updateSprite(btn) {
          if (btn) {
            btn.normalSprite = this.normalSprite;
            btn.pressedSprite = this.pressedSprite;
            btn.hoverSprite = this.hoverSprite;
            btn.disabledSprite = this.disabledSprite;
          }
        };

        return gaButtonSpriteState;
      }(), (_descriptor9 = _applyDecoratedDescriptor(_class8.prototype, "normalSprite", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class8.prototype, "pressedSprite", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class8.prototype, "hoverSprite", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class8.prototype, "disabledSprite", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class8)) || _class7));
      var gaBaseHistoryInfo = exports('gaBaseHistoryInfo', /*#__PURE__*/function () {
        function gaBaseHistoryInfo() {}

        var _proto2 = gaBaseHistoryInfo.prototype;

        _proto2.merge = function merge(data) {
          if (data) {
            gaUtils.mergeTwoObject(this, gaUtils.replaceObjectKeys(data, Mapping), this);
          }
        };

        return gaBaseHistoryInfo;
      }());
      var gaBetInfo = exports('gaBetInfo', /*#__PURE__*/function (_gaBaseHistoryInfo) {
        _inheritsLoose(gaBetInfo, _gaBaseHistoryInfo);

        function gaBetInfo(data) {
          var _this;

          _this = _gaBaseHistoryInfo.call(this) || this;
          _this.betAmount = 0;
          _this.rate = 0;
          _this.type = 0;
          _this.winAmount = 0;

          _this.merge(data);

          return _this;
        }

        var _proto3 = gaBetInfo.prototype;

        _proto3.merge = function merge(data) {
          if (data) {
            _gaBaseHistoryInfo.prototype.merge.call(this, data);

            if (!this.winAmount) {
              if (data.winAmt > 0) {
                this.winAmount = data.winAmt;
              } else {
                this.winAmount = data.win;
              }

              delete this['win'];
              delete this['winAmt'];
            }
          }
        };

        return gaBetInfo;
      }(gaBaseHistoryInfo));
      var gaHistoryData = exports('gaHistoryData', /*#__PURE__*/function (_gaBaseHistoryInfo2) {
        _inheritsLoose(gaHistoryData, _gaBaseHistoryInfo2);

        function gaHistoryData(data) {
          var _this2;

          _this2 = _gaBaseHistoryInfo2.call(this) || this;
          _this2.from = 0;
          _this2.total = 0;
          _this2.resultList = [];

          if (data) {
            _this2.from = data.from;
            _this2.total = data.total;
          }

          return _this2;
        }

        return gaHistoryData;
      }(gaBaseHistoryInfo));
      var gaBetHistoryDataItem = exports('gaBetHistoryDataItem', /*#__PURE__*/function (_gaBaseHistoryInfo3) {
        _inheritsLoose(gaBetHistoryDataItem, _gaBaseHistoryInfo3);

        function gaBetHistoryDataItem(data) {
          var _this3;

          _this3 = _gaBaseHistoryInfo3.call(this) || this;
          _this3.gameNumber = '';
          _this3.winAmount = 0;
          _this3.betAmount = 0;
          _this3.items = [];
          _this3.timeStamp = 0;

          _this3.merge(data);

          return _this3;
        }

        var _proto4 = gaBetHistoryDataItem.prototype;

        _proto4.merge = function merge(data) {
          _gaBaseHistoryInfo3.prototype.merge.call(this, data);

          if (data && data.items) {
            this.items = data.items.map(function (element) {
              return new gaBetInfo(element);
            });
          }
        };

        return gaBetHistoryDataItem;
      }(gaBaseHistoryInfo));
      var gaJPHistoryDataItem = exports('gaJPHistoryDataItem', /*#__PURE__*/function (_gaBaseHistoryInfo4) {
        _inheritsLoose(gaJPHistoryDataItem, _gaBaseHistoryInfo4);

        function gaJPHistoryDataItem(data) {
          var _this4;

          _this4 = _gaBaseHistoryInfo4.call(this) || this;
          _this4.jackpotAmount = 0;
          _this4.displayName = '';
          _this4.timeStamp = 0;

          _this4.merge(data);

          return _this4;
        }

        return gaJPHistoryDataItem;
      }(gaBaseHistoryInfo));
      var gaNotifyData = exports('gaNotifyData', function gaNotifyData(data) {
        this.commandId = void 0;
        this.username = void 0;
        this.type = void 0;
        this.winAmount = void 0;
        this.commandId = data.cmdId;
        this.username = data.usr;
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaDataFactory.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "5ab2e3C2OhOWbiRnfIiTOSy", "gaDataFactory", undefined);

      var gaDataFactory = exports('default', /*#__PURE__*/function () {
        function gaDataFactory() {}

        var _proto = gaDataFactory.prototype;

        _proto.create = function create(type, data) {
          /// Implement your own logic here
          /// Sample:
          // switch (type) {
          //     case gaResultData:
          //         return new gaResultData(data) as T;
          //     case gaRoundData:
          //         return new gaRoundData(data) as T;
          // }
          return new type(data);
        };

        _proto.destroy = function destroy() {
          gaDataFactory.instance = null;
        };

        return gaDataFactory;
      }());
      gaDataFactory.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaDataStore.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDemoPlayer.ts', './gaEventsCode.ts', './gaUserInfo.ts', './gaEventEmitter.ts'], function (exports) {
  var _createClass, cclegacy, gaDemoPlayer, gaEventsCode, gaUserInfo, gaEventEmitter;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaDemoPlayer = module.gaDemoPlayer;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaUserInfo = module.default;
    }, function (module) {
      gaEventEmitter = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "b382bSb7LdACrgw22YOyhnW", "gaDataStore", undefined);

      var gaDataStore = exports('default', /*#__PURE__*/function () {
        function gaDataStore() {
          this.isTutorial = false;
          this.userInfo = void 0;
          this.betValue = 0;
          this.isUserPlaceAnyBet = false;
          this.oddsConfigs = {};
          this.maxBetConfigs = {};
          this.betting = {};
          this.denoms = {};
          this.currDenomId = "";
          this.gameNumber = "";
          this.userActive = 0;
          this.sessionId = "";
          this.result = null;
          this.typeOfCurrency = "VND";
          this.currencyRatio = 1;
          this.jackpotInfo = [];
        }

        var _proto = gaDataStore.prototype;

        _proto.initialize = function initialize() {
          this.isTutorial = false;
          this.userInfo = new gaUserInfo();
          gaEventEmitter.instance.emit(gaEventsCode.USER.UPDATE_DATA);
        };

        _proto.demo = function demo() {
          this.isTutorial = true;
          this.userInfo = new gaDemoPlayer();
          gaEventEmitter.instance.emit(gaEventsCode.USER.UPDATE_DATA);
        };

        _proto.destroy = function destroy() {
          gaDataStore.instance = null;
        };

        _proto.getUserTypeOfCurrency = function getUserTypeOfCurrency() {
          return this.typeOfCurrency;
        };

        _proto.getCurrencyRatio = function getCurrencyRatio() {
          return this.currencyRatio;
        };

        _proto.getMaxBet = function getMaxBet(betId) {
          return this.maxBetConfigs[betId] * this.denoms[this.currDenomId];
        };

        _proto.getOdds = function getOdds(betId) {
          return this.oddsConfigs[betId];
        };

        _proto.setCurrencyConfig = function setCurrencyConfig(data) {
          if (data.TypeOfCurrency) {
            this.typeOfCurrency = data.TypeOfCurrency;
          }

          if (data.CurrencyRatio) {
            this.currencyRatio = data.CurrencyRatio;
          }

          if (data.JackpotInfo && data.JackpotInfo.length > 0) {
            this.jackpotInfo = data.JackpotInfo;
          }
        };

        _proto.setDataStore = function setDataStore(data) {
          for (var key in data) {
            if (Object.prototype.hasOwnProperty.call(data, key) && Object.prototype.hasOwnProperty.call(this, key) && data[key] != null) {
              this[key] = data[key];
            }
          }
        };

        _proto.cleanUp = function cleanUp() {
          this.isUserPlaceAnyBet = false;
          this.betting = {};
        };

        _createClass(gaDataStore, [{
          key: "totalBet",
          get: function get() {
            var total = 0;

            for (var key in this.betting) {
              total += this.betting[key];
            }

            return total;
          }
        }]);

        return gaDataStore;
      }());
      gaDataStore.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaDemoPlayer.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaUserInfo.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, gaUserInfo;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaUserInfo = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "8d0e1yhZLBONblqF3n1seD4", "gaDemoPlayer", undefined);

      var gaDemoPlayer = exports('gaDemoPlayer', /*#__PURE__*/function (_gaUserInfo) {
        _inheritsLoose(gaDemoPlayer, _gaUserInfo);

        var _proto = gaDemoPlayer.prototype;

        _proto.bet = function bet(amount) {
          this._currentAmt -= amount;
        };

        function gaDemoPlayer() {
          var _this;

          _this = _gaUserInfo.call(this) || this;
          _this._currentAmt = 10000;
          _this._currentAmt = 10000;
          return _this;
        }

        _createClass(gaDemoPlayer, [{
          key: "totalAmount",
          get: function get() {
            return this._currentAmt;
          }
        }]);

        return gaDemoPlayer;
      }(gaUserInfo));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaDialog.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaCommon.ts', './gaBasePopup.ts', './gaTweenUtils.ts', './gameCommonUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Label, Node, gaBaseConfig, gaBasePopup, callFunc, sequence, gameCommonUtils;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Node = module.Node;
    }, function (module) {
      gaBaseConfig = module.default;
    }, null, function (module) {
      gaBasePopup = module.default;
    }, function (module) {
      callFunc = module.callFunc;
      sequence = module.sequence;
    }, function (module) {
      gameCommonUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "5ffbeG1IuREFp215fOvhCrz", "gaDialog", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaDialog = exports('default', (_dec = ccclass('gaDialog'), _dec2 = property(Label), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_gaBasePopup) {
        _inheritsLoose(gaDialog, _gaBasePopup);

        function gaDialog() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaBasePopup.call.apply(_gaBasePopup, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "txtMessage", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnConfirm", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnReject", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnGroup", _descriptor4, _assertThisInitialized(_this));

          _this.confirmHdl = null;
          _this.typeShowing = '';
          return _this;
        }

        var _proto = gaDialog.prototype;

        _proto.show = function show(data) {
          var _this2 = this;

          var POPUP_PROMPT = gaBaseConfig.instance.POPUP_PROMPT;
          if (!data || !this.txtMessage || this.typeShowing == POPUP_PROMPT.ERROR_NETWORK || this.typeShowing == POPUP_PROMPT.SOCKET_DISCONNECT) return;
          this.resetDialog();
          this.onResetState();
          var type = data.type,
              message = data.message,
              onConfirm = data.onConfirm,
              onReject = data.onReject;
          this.txtMessage.string = message;
          this.typeShowing = type;

          switch (type) {
            case POPUP_PROMPT.ERROR_NETWORK:
              this.btnClose && (this.btnClose.node.active = false);
              this.btnReject && (this.btnReject.active = false);
              this.btnConfirm.active = gameCommonUtils.checkConditionCloseGameIframe();

              if (this.btnConfirm.active) {
                this.btnConfirm.off('click');
                this.btnConfirm.on('click', function () {
                  _this2.btnConfirm.off('click');

                  _this2.soundPlayer && _this2.soundPlayer.playSFXClick();

                  if (onConfirm) {
                    _this2.confirmHdl = onConfirm;
                  }

                  _this2.onClose();
                }, this);
              }

              break;

            case POPUP_PROMPT.JUST_CONFIRM_BUTTON:
              this.btnClose && (this.btnClose.node.active = false);
              this.btnReject && (this.btnReject.active = false);
              this.btnConfirm.active = true;
              this.btnConfirm.off('click');
              this.btnConfirm.on('click', function () {
                _this2.btnConfirm.off('click');

                _this2.soundPlayer && _this2.soundPlayer.playSFXClick();

                if (onConfirm) {
                  _this2.confirmHdl = onConfirm;
                }

                _this2.onClose();
              }, this);
              break;

            case POPUP_PROMPT.CONFIRM_AND_CLOSE_BUTTON:
              this.btnClose && (this.btnClose.node.active = true);
              this.btnReject && (this.btnReject.active = false);
              this.btnConfirm.active = true;
              this.btnConfirm.off('click');
              this.btnConfirm.on('click', function () {
                _this2.btnConfirm.off('click');

                _this2.soundPlayer && _this2.soundPlayer.playSFXClick();

                if (onConfirm) {
                  _this2.confirmHdl = onConfirm;
                }

                _this2.onClose();
              }, this);
              break;

            case POPUP_PROMPT.CONFIRM_AND_REJECT_BUTTON:
              this.btnClose && (this.btnClose.node.active = false);
              this.btnConfirm.active = true;
              this.btnConfirm.off('click');
              this.btnConfirm.on('click', function () {
                _this2.btnConfirm.off('click');

                _this2.soundPlayer && _this2.soundPlayer.playSFXClick();

                if (onConfirm) {
                  _this2.confirmHdl = onConfirm;
                }

                _this2.onClose();
              }, this);

              if (this.btnReject) {
                this.btnReject.active = true;
                this.btnReject.off('click');
                this.btnReject.on('click', function () {
                  _this2.btnReject.off('click');

                  _this2.soundPlayer && _this2.soundPlayer.playSFXClick();

                  if (onReject) {
                    _this2.confirmHdl = onReject;
                  }

                  _this2.onClose();
                }, this);
              }

              break;

            default:
              this.btnClose && (this.btnClose.node.active = false);
              this.btnConfirm.active = false;
              this.btnReject && (this.btnReject.active = false);
              break;
          }

          if (this.btnGroup) {
            this.btnGroup.active = this.btnConfirm.active || this.btnReject.active;
          }

          _gaBasePopup.prototype.show.call(this);
        };

        _proto.hide = function hide() {
          var _this3 = this;

          this.typeShowing = '';
          var actions = [];
          actions.push(callFunc(function () {
            _gaBasePopup.prototype.hide.call(_this3);

            if (_this3.btnGroup) {
              _this3.btnGroup.active = false;
            }
          }));

          if (this.confirmHdl) {
            actions.push(callFunc(this.confirmHdl.bind(this)));
          }

          if (actions.length > 1) {
            this.contents.runAction(sequence.apply(void 0, actions));
          } else {
            this.contents.runAction(actions[0]);
          }
        };

        _proto.resetDialog = function resetDialog() {
          this.typeShowing = '';
          this.btnConfirm.active = false;
          this.btnReject && (this.btnReject.active = false);
          this.btnClose && (this.btnClose.node.active = false);
          this.confirmHdl = null;
          this.unscheduleAllCallbacks();
        };

        _createClass(gaDialog, [{
          key: "popupType",
          get: function get() {
            return gaBaseConfig.POPUP_TYPE.DIALOG;
          }
        }]);

        return gaDialog;
      }(gaBasePopup), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "txtMessage", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "btnConfirm", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "btnReject", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "btnGroup", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaEventEmitter.ts", ['cc', './gaLogger.ts'], function (exports) {
  var cclegacy, isValid, Node, director, logger;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      isValid = module.isValid;
      Node = module.Node;
      director = module.director;
    }, function (module) {
      logger = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "07f0aOTNmpDYYOTAjUXaalQ", "gaEventEmitter", undefined);

      var gaEventEmitter = exports('default', /*#__PURE__*/function () {
        function gaEventEmitter() {
          this._node = void 0;

          this._createNode();
        }

        var _proto = gaEventEmitter.prototype;

        _proto._createNode = function _createNode() {
          if (isValid(this._node)) {
            this._node.destroy();
          }

          this._node = new Node('gaEventEmitter');

          this._node.setParent(director.getScene());

          director.addPersistRootNode(this._node);
        };

        _proto.emit = function emit(event) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          if (!isValid(this._node)) return;

          if (args && args.length > 0) {
            logger.log("[gaEventEmitter] emit " + event + ", data =", args);
          } else {
            logger.log("[gaEventEmitter] emit " + event);
          }

          this._node.emit.apply(this._node, arguments);
        };

        _proto.registerEvent = function registerEvent(_eventCode, _listener, _target) {
          if (isValid(this._node)) {
            this._node.on.apply(this._node, arguments);
          }
        };

        _proto.registerOnce = function registerOnce(_eventCode, _listener, _target) {
          if (isValid(this._node)) {
            this._node.once.apply(this._node, arguments);
          }
        };

        _proto.removeEvent = function removeEvent(_eventCode, _listener, _target) {
          if (isValid(this._node)) {
            this._node.off.apply(this._node, arguments);
          }
        };

        _proto.removeEvents = function removeEvents(_target) {
          if (isValid(this._node)) {
            this._node.targetOff.apply(this._node, arguments);
          }
        };

        _proto.removeOnce = function removeOnce(_eventCode, _listener, _target) {
          if (isValid(this._node)) {
            this._node.off.apply(this._node, arguments);
          }
        };

        _proto.destroy = function destroy() {
          if (isValid(this._node)) {
            this._node.destroy();
          }

          this._node = null;
          gaEventEmitter.instance = null;
        };

        return gaEventEmitter;
      }());
      gaEventEmitter.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaEventsCode.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "24bfblIbf1ALpSZJBZz8SGD", "gaEventsCode", undefined);

      var gaEventsCode = exports('default', {
        COMMON: {
          INITIALIZE_GAME: "ARCADE_EVENT.COMMON.INITIALIZE_GAME",
          REFRESH_PAGE: "ARCADE_EVENT.COMMON.REFRESH_PAGE",
          EXIT_GAME: "ARCADE_EVENT.COMMON.EXIT_GAME",
          GAME_SHOW: "ARCADE_EVENT.COMMON.GAME_SHOW",
          GAME_HIDE: "ARCADE_EVENT.COMMON.GAME_HIDE",
          ON_SCREEN_RESIZE: "ARCADE_EVENT.COMMON.ON_SCREEN_RESIZE",
          UPDATE_PING: "ARCADE_EVENT.COMMON.UPDATE_PING",
          NETWORK_STATUS_INFO: "ARCADE_EVENT.COMMON.NETWORK_STATUS_INFO"
        },
        ACTION: {
          BET: "ARCADE_EVENT.ACTION.BET",
          REFRESH_PAYOUT: "ARCADE_EVENT.ACTION.REFRESH_PAYOUT",
          GET_USER_ACTIVE: "ARCADE_EVENT.ACTION.GET_USER_ACTIVE",
          LEAVE_GAME: "ARCADE_EVENT.ACTION.LEAVE_GAME",
          CLEAR_USER_BETTING: "ARCADE_EVENT.CLEAR_USER_BETTING"
        },
        BET: {
          NOT_ENOUGH_MONEY: "ARCADE_EVENT.BET.NOT_ENOUGH_MONEY",
          REACH_MAX_BET: "ARCADE_EVENT.BET.REACH_MAX_BET",
          CHANGE_BET_VALUE: "ARCADE_EVENT.BET.CHANGE_BET_VALUE",
          PLACE_BET: "ARCADE_EVENT.BET.PLACE_BET",
          CLEAR_BET: "ARCADE_EVENT.BET.CLEAR_BET"
        },
        VIEW: {
          INGAME: "ARCADE_EVENT.VIEW.INGAME",
          BETTING: "ARCADE_EVENT.VIEW.BETTING",
          UNLOCK_BETTING_VIEW: "ARCADE_EVENT.VIEW.BETTING.UNLOCK",
          LOCK_BETTING_VIEW: "ARCADE_EVENT.VIEW.BETTING.LOCK",
          SHOW_RESULT: "ARCADE_EVENT.VIEW.SHOW_RESULT",
          SET_GAME_NUMBER: "ARCADE_EVENT.VIEW.SET_GAME_NUMBER",
          SET_USER_ONLINE: "ARCADE_EVENT.VIEW.SET_USER_ONLINE"
        },
        STATE: {
          NEW_ROUND: "ARCADE_EVENT.STATE.NEW_ROUND",
          START_BETTING: "ARCADE_EVENT.STATE.START_BETTING",
          END_BETTING: "ARCADE_EVENT.STATE.END_BETTING",
          FINISHED: "ARCADE_EVENT.STATE.FINISHED"
        },
        NOTIFY: {
          SHOW_NOTIFY: "ARCADE_EVENT.NOTIFY.SHOW_NOTIFY",
          DISABLE: "ARCADE_EVENT.NOTIFY.DISABLE",
          ENABLE: "ARCADE_EVENT.NOTIFY.ENABLE",
          ON_SHOW: "ARCADE_EVENT.NOTIFY.ON_SHOW",
          ON_HIDE: "ARCADE_EVENT.NOTIFY.ON_HIDE"
        },
        DEMO: {
          START: "ARCADE_EVENT.DEMO.START",
          END: "ARCADE_EVENT.DEMO.END",
          FAST_TO_RESULT: "ARCADE_EVENT.DEMO.FAST_TO_RESULT",
          SHOW_SKIP_RESULT: "ARCADE_EVENT.DEMO.SHOW_SKIP_RESULT",
          RESET_USER_BET: "ARCADE_EVENT.DEMO.RESET_USER_BET",
          SKIP_IN_GAME: "ARCADE_EVENT.DEMO.SKIP_IN_GAME",
          SET_JACKPOT: "ARCADE_EVENT.DEMO.SET_JACKPOT"
        },
        USER: {
          UPDATE_DATA: "ARCADE_EVENT.USER.UPDATE_DATA",
          UPDATE_BALANCE: "ARCADE_EVENT.USER.UPDATE_BALANCE"
        },
        DATA: {
          PAYOUT_RECEIVED: "ARCADE_EVENT.DATA.PAYOUT_RECEIVED",
          RESULT_RECEIVED: "ARCADE_EVENT.DATA.RESULT_RECEIVED",
          UPDATE_USER_ACTIVE: "ARCADE_EVENT.DATA.UPDATE_USER_ACTIVE",
          EMPTY: "ARCADE_EVENT.DATA.EMPTY"
        },
        WALLET: {
          UPDATE_WALLET: "ARCADE_EVENT.WALLET.UPDATE_WALLET"
        },
        JACKPOT: {
          INIT_JACKPOT: "ARCADE_EVENT.JACKPOT.INIT_JACKPOT",
          UPDATE_JACKPOT: "ARCADE_EVENT.JACKPOT.UPDATE_JACKPOT",
          PAUSE_JACKPOT: "ARCADE_EVENT.JACKPOT.PAUSE_JACKPOT",
          RESET_JACKPOT: "ARCADE_EVENT.JACKPOT.RESET_JACKPOT",
          RESUME_JACKPOT: "ARCADE_EVENT.JACKPOT.RESUME_JACKPOT",
          CHANGE_JACKPOT: "ARCADE_EVENT.JACKPOT.CHANGE_JACKPOT",
          UPDATE_VALUE_JACKPOT: "ARCADE_EVENT.JACKPOT.UPDATE_VALUE_JACKPOT",
          OTHER_USER_WIN: "ARCADE_EVENT.JACKPOT.OTHER_USER_WIN"
        },
        NETWORK: {
          REQUEST_BET_ERROR: "ARCADE_EVENT.NETWORK.REQUEST_BET_ERROR",
          BACKEND_ERROR: "ARCADE_EVENT.NETWORK.BACKEND_ERROR",
          WALLET_ERROR: "ARCADE_EVENT.NETWORK.WALLET_ERROR",
          PROMOTION_ERROR: "ARCADE_EVENT.NETWORK.PROMOTION_ERROR",
          NORMAL: "ARCADE_EVENT.NETWORK.NORMAL",
          CANNOT_AUTHEN: "ARCADE_EVENT.NETWORK.CANNOT_AUTHEN",
          WEB_SOCKET_OPEN: "ARCADE_EVENT.NETWORK.WEB_SOCKET_OPEN",
          WEB_SOCKET_RECONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_RECONNECT",
          WEB_SOCKET_MESSAGE: "ARCADE_EVENT.NETWORK.WEB_SOCKET_MESSAGE",
          WEB_SOCKET_FORCE_DISCONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_FORCE_DISCONNECT",
          WEB_SOCKET_CHAT_MESSAGE: "ARCADE_EVENT.NETWORK.WEB_SOCKET_CHAT_MESSAGE",
          WEB_SOCKET_CLOSE: "ARCADE_EVENT.NETWORK.WEB_SOCKET_CLOSE",
          WEB_SOCKET_DISCONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_DISCONNECT",
          WEB_SOCKET_BAD_CONDITION: "ARCADE_EVENT.NETWORK.WEB_SOCKET_BAD_CONDITION",
          WEB_SOCKET_TEMP_DISCONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_TEMP_DISCONNECT"
        },
        POPUP: {
          SHOW_POPUP_HISTORY_BET: "ARCADE_EVENT.POPUP.SHOW_POPUP_HISTORY_BET",
          SHOW_POPUP_HISTORY_JP: "ARCADE_EVENT.POPUP.SHOW_POPUP_HISTORY_JP",
          SHOW_POPUP_INFO: "ARCADE_EVENT.POPUP.SHOW_POPUP_INFO",
          SHOW_POPUP_SETTING: "ARCADE_EVENT.POPUP.SHOW_POPUP_SETTING",
          SHOW_TUTORIAL: "ARCADE_EVENT.POPUP.SHOW_TUTORIAL",
          SHOW_HISTORY_DETAIL: "ARCADE_EVENT.POPUP.SHOW_HISTORY_DETAIL",
          HIDE_HISTORY_DETAIL: "ARCADE_EVENT.POPUP.HIDE_HISTORY_DETAIL",
          CLOSE_TOP_POPUP: "ARCADE_EVENT.POPUP.CLOSE_TOP_POPUP",
          SHOW_DIALOG: "ARCADE_EVENT.POPUP.SHOW_DIALOG",
          SHOW_TOAST: "ARCADE_EVENT.POPUP.SHOW_TOAST",
          CLOSE_POPUP: "ARCADE_EVENT.POPUP.CLOSE_POPUP"
        },
        SOUND: {
          UPDATE_MUSIC_VOL: "ARCADE_EVENT.SOUND.UPDATE_MUSIC_VOL",
          UPDATE_EFFECT_VOL: "ARCADE_EVENT.SOUND.UPDATE_EFFECT_VOL"
        }
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaFBFParticle.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, ParticleSystem, ParticleSystem2D, CCFloat, SpriteAtlas, Component, gaUtils;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      ParticleSystem = module.ParticleSystem;
      ParticleSystem2D = module.ParticleSystem2D;
      CCFloat = module.CCFloat;
      SpriteAtlas = module.SpriteAtlas;
      Component = module.Component;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "20965tgauRL8IWMkpNYWOdp", "gaFBFParticle", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property,
          requireComponent = _decorator.requireComponent,
          executeInEditMode = _decorator.executeInEditMode;
      var gaFBFParticle = exports('default', (_dec = ccclass('gaFBFParticle'), _dec2 = requireComponent(ParticleSystem), _dec3 = property(ParticleSystem2D), _dec4 = property(CCFloat), _dec5 = property(SpriteAtlas), _dec(_class = executeInEditMode(_class = _dec2(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaFBFParticle, _Component);

        function gaFBFParticle() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "particleSystem", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "duration", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "atlasSpriteFrame", _descriptor3, _assertThisInitialized(_this));

          _this.spriteFrames = [];
          _this.durationPerFrame = 0;
          return _this;
        }

        var _proto = gaFBFParticle.prototype;

        _proto.onLoad = function onLoad() {
          this.particleSystem = this.node.getComponent(ParticleSystem2D);

          this.particleSystem._simulator.updateUVs = function () {};

          this.spriteFrames = [];

          if (this.atlasSpriteFrame != null) {
            this.spriteFrames = this.atlasSpriteFrame.getSpriteFrames();
            this.spriteFrames.sort();
          }

          if (this.spriteFrames.length > 0) {
            this.particleSystem.spriteFrame = this.spriteFrames[0];
            this.durationPerFrame = this._getDuration() / this.spriteFrames.length;
          }
        };

        _proto.play = function play() {
          var _this2 = this;

          this.reset();
          this.particleSystem.resetSystem();
          this.scheduleOnce(function () {
            gaUtils.setOpacity(_this2.node, 255);
          }, 0.02);
        };

        _proto.stop = function stop(force) {
          if (force === void 0) {
            force = true;
          }

          this.particleSystem.stopSystem();

          if (force) {
            this.reset();
          }
        };

        _proto.reset = function reset() {
          this.unscheduleAllCallbacks();
          var particles = this.simulator.particles;

          for (var index = 0; index < particles.length; index++) {
            var particle = particles[index];
            particle.color.a = 0;
          }

          this.simulator.reset();
          this.simulator.active = false;
          gaUtils.setOpacity(this.node, 0);
        };

        _proto.update = function update() {
          var renderData = this.simulator.renderData;
          var formatBytes = window['formatBytes'] || 9;

          if (renderData) {
            var vbuf = renderData.vData;
            var particleCount = this.simulator.particles.length;

            for (var index = 0; index < particleCount; index++) {
              var spriteFrame = this._getSpriteFrame(this.particleSystem.life - this.simulator.particles[index].timeToLive);

              var uv = spriteFrame.uv;
              var offset = index * 4 * formatBytes;
              vbuf[offset + 3] = uv[0];
              vbuf[offset + 4] = uv[1];
              vbuf[offset + 12] = uv[2];
              vbuf[offset + 13] = uv[3];
              vbuf[offset + 21] = uv[4];
              vbuf[offset + 22] = uv[5];
              vbuf[offset + 30] = uv[6];
              vbuf[offset + 31] = uv[7];
            }

            this.simulator.uvFilled = particleCount;
          }
        };

        _proto._getDuration = function _getDuration() {
          if (this.duration <= 0) {
            return this.particleSystem.life;
          }

          return this.duration;
        };

        _proto._getSpriteFrame = function _getSpriteFrame(time) {
          if (time <= 0) {
            time = 0;
          }

          return this.spriteFrames[Math.floor(time / this.durationPerFrame) % this.spriteFrames.length] || this.particleSystem.spriteFrame;
        };

        _createClass(gaFBFParticle, [{
          key: "simulator",
          get: function get() {
            return this.particleSystem._simulator;
          }
        }]);

        return gaFBFParticle;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "particleSystem", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "duration", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return -1;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "atlasSpriteFrame", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class) || _class) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaGameNetwork.ts", ['cc', './gaDataFactory.ts', './gaDataStore.ts', './gaEventEmitter.ts', './gaBaseConfig.ts', './gaCommon.ts', './gaEventsCode.ts', './gaLogger.ts', './gaPromise.ts', './gaJoinGameData.ts', './gaResultData.ts', './gaRoundData.ts', './gaCommandID.ts', './gaGameService.ts', './gaSocketManager.ts', './loadConfigAsync.ts', './gameCommonUtils.ts'], function (exports) {
  var cclegacy, sys, warn, gaDataFactory, gaDataStore, gaEventEmitter, gaBaseConfig, gaEventsCode, logger, gaPromise, gaJoinGameData, gaResultData, gaRoundData, gaCommandID, gameService, gaSocketManager, loadConfigAsync, gameCommonUtils;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      sys = module.sys;
      warn = module.warn;
    }, function (module) {
      gaDataFactory = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, null, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaPromise = module.gaPromise;
    }, function (module) {
      gaJoinGameData = module.default;
    }, function (module) {
      gaResultData = module.default;
    }, function (module) {
      gaRoundData = module.default;
    }, function (module) {
      gaCommandID = module.default;
    }, function (module) {
      gameService = module.default;
    }, function (module) {
      gaSocketManager = module.gaSocketManager;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      gameCommonUtils = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "fc7b7ko2vhB6oQaetZfp6OT", "gaGameNetwork", undefined);

      var gaGameNetwork = exports('default', /*#__PURE__*/function () {
        //#region ------------------------------------------------------------------ Declare variables
        function gaGameNetwork() {
          this.socketManager = void 0;
          this.isJoinedGame = void 0;
          this.lastGameState = void 0;
          this.gameChannel = '';
          this.gameId = void 0;
          this.version = void 0;
          this.timeoutKeepActive = null;
          this._state = void 0;
          this._outGame = false;
          this._isWaitingBetData = false;
          this.gameId = gaBaseConfig.gameId;
          this.version = gaBaseConfig.gameVersion;

          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;

          gaBaseConfig.isIFrame = LOGIN_IFRAME;
        }

        var _proto = gaGameNetwork.prototype;

        _proto.authenticate = function authenticate() {
          var _this = this;

          if (this._state == gaGameNetwork.STATE_DIE) return gaPromise.reject('STATE DIE');
          return gameService.authenticate(this.gameId, this.version).then(function () {
            return _this._createSocket();
          })["catch"](function (err) {
            _this._gotoDieMode();

            return gaPromise.reject(err);
          });
        };

        _proto.joinGame = function joinGame() {
          var _this2 = this;

          if (this._state == gaGameNetwork.STATE_DIE) return gaPromise.reject('STATE DIE');
          logger.log('sendJoinGame --- ');

          this._reset();

          var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(),
              URL_CODE = _loadConfigAsync$getC2.URL_CODE;

          var code = '';
          var env = 3;

          if (gaBaseConfig.isIFrame) {
            code = gameCommonUtils.getUrlParam(URL_CODE);
            env = parseInt(gameCommonUtils.getUrlParam('env')) || 2;
          } else {
            env = sys.isBrowser ? 1 : 3;
          }

          var payload = {
            event: gaCommandID.R_JOIN_GAME,
            data: {
              code: code,
              env: env
            }
          };
          return this._sendMessage(payload).then(function (response) {
            return _this2.onResponseJoinGame(response);
          });
        };

        _proto.refreshWallet = function refreshWallet() {
          this.onWalletUpdate();
        };

        _proto.refresh = function refresh() {
          if (this._state == gaGameNetwork.STATE_DIE) return;

          if (this.socketManager.isReady()) {
            this._gotoNormalMode();
          }
        };

        _proto.refreshPayout = function refreshPayout(payload) {
          var _this3 = this;

          if (this._state == gaGameNetwork.STATE_DIE) return gaPromise.reject('STATE DIE');
          return this._sendMessage(payload || {
            event: gaCommandID.R_NEW_ODDS
          }).then(function (resp) {
            return _this3.onResponsePayout(resp);
          });
        };

        _proto.bet = function bet(payload) {
          var _this4 = this;

          if (this._state == gaGameNetwork.STATE_DIE) return gaPromise.reject('STATE DIE');
          this._isWaitingBetData = true;
          return this._sendMessage(payload).then(function (resp) {
            return _this4.onResponseBet(resp);
          })["finally"](function () {
            return _this4._isWaitingBetData = false;
          });
        };

        _proto.getUserActive = function getUserActive(payload) {
          var _this5 = this;

          if (this._state == gaGameNetwork.STATE_DIE) return;
          return this._sendMessage(payload).then(function (resp) {
            return _this5.onResponseUserActive(resp);
          })["catch"](function (err) {
            logger.error('getUserActive error', err);
          });
        };

        _proto.onResponseUserActive = function onResponseUserActive(resp) {
          gaDataStore.instance.userActive = resp.auser;
          return resp.auser;
        };

        _proto.onResponsePayout = function onResponsePayout(resp) {
          var roundData = gaDataFactory.instance.create(gaRoundData, resp);
          gaDataStore.instance.setDataStore(roundData);
          return roundData;
        };

        _proto.onResponseBet = function onResponseBet(resp) {
          if (resp.jpup) {
            var arr = resp.jpup.split(',');
            arr.forEach(function (jpup) {
              var jp = jpup.split(';');
              gaEventEmitter.instance.emit(gaEventsCode.JACKPOT.UPDATE_VALUE_JACKPOT, jp[0], parseFloat(jp[1]));
            });
          }

          var result = gaDataFactory.instance.create(gaResultData, resp);
          gaDataStore.instance.result = result;
          return result;
        };

        _proto.onResponseJoinGame = function onResponseJoinGame(resp) {
          var roundData = gaDataFactory.instance.create(gaJoinGameData, resp);
          gaDataStore.instance.setDataStore(roundData);
          this.gameChannel = roundData.gameChannel;
          if (this._state !== gaGameNetwork.STATE_DIE) this._gotoNormalMode();
          this.socketManager.subscribe(this.gameChannel);
          this.socketManager.subscribe(gaBaseConfig.NOTIFY_CHANNEL);
          if (resp.jp) gaEventEmitter.instance.emit(gaEventsCode.JACKPOT.INIT_JACKPOT, resp.jp);
          return roundData;
        };

        _proto.keepActive = function keepActive() {
          var _this6 = this;

          clearTimeout(this.timeoutKeepActive);
          if (!gaBaseConfig.instance.NETWORK.AllowKeepActive) return;
          if (this._state == gaGameNetwork.STATE_DIE) return;
          if (!this.socketManager.isReady()) return;
          this.timeoutKeepActive = setTimeout(function () {
            _this6._sendMessage({
              event: gaCommandID.R_KEEP_ACTIVE
            })["catch"](function (err) {
              logger.error('keepActive error', err);
            });

            _this6.keepActive();
          }, gaBaseConfig.instance.NETWORK.KeepActiveTime);
        };

        _proto.stopKeepActive = function stopKeepActive() {
          clearTimeout(this.timeoutKeepActive);
        };

        _proto.closeAndCleanUp = function closeAndCleanUp() {
          this._reset();

          this._state = gaGameNetwork.STATE_DIE;
          this.socketManager && this.socketManager.closeAndCleanUp();
        };

        _proto.backToLogin = function backToLogin() {
          this._outGame = true;
          this.closeAndCleanUp();
          gaEventEmitter.instance.emit(gaEventsCode.COMMON.REFRESH_PAGE);

          if (gaBaseConfig.isIFrame) {
            gameCommonUtils.handleCloseGameIframe();
          } else {
            gameCommonUtils.handleBackLogin();
          }
        };

        _proto.leaveGame = function leaveGame() {
          this._outGame = true;
          this.closeAndCleanUp();
          gaEventEmitter.instance.emit(gaEventsCode.COMMON.REFRESH_PAGE);

          if (gaBaseConfig.isIFrame) {
            gameCommonUtils.handleCloseGameIframe();
          } else {
            gameCommonUtils.handleFlowOutGame();
          }
        };

        _proto._createSocket = function _createSocket() {
          if (!this.socketManager) {
            this.socketManager = new gaSocketManager(this.gameId, this.onErrorPushed.bind(this), this.onWalletUpdate.bind(this));
            this.socketManager.checkReady();
          }
        };

        _proto._sendMessage = function _sendMessage(payload) {
          var _this7 = this;

          return this.socketManager.sendMessage(payload)["catch"](function (err) {
            warn('err', err);

            if (!err.isResponseError && payload.event != gaCommandID.R_JOIN_GAME) {
              _this7.refresh();
            }

            return gaPromise.reject(err);
          });
        };

        _proto._reset = function _reset() {
          this.isJoinedGame = false;
          this.lastGameState = null;
          this.stopKeepActive();
          this.socketManager && this.socketManager.clearPendingCommands();
          this.socketManager && this.socketManager.unSubscribe(this.gameChannel);
          this.socketManager && this.socketManager.unSubscribe(gaBaseConfig.NOTIFY_CHANNEL);
        };

        _proto.onWalletUpdate = function onWalletUpdate() {
          if (!this._isWaitingBetData) {
            gaEventEmitter.instance.emit(gaEventsCode.WALLET.UPDATE_WALLET);
          }
        };

        _proto.onErrorPushed = function onErrorPushed(errorData) {
          var data = errorData.data;

          if (Array.isArray(data) && data[0]) {
            var code = data[0].cd;
            var forceDie = false; //wallet error

            if (code[0] == 'W' || code == '0001' || code == '0006') {
              //wallet error
              gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WALLET_ERROR, {
                forceDie: forceDie,
                code: code,
                data: data
              });
            } else if (code == '0030' && this._state !== gaGameNetwork.STATE_DIE) ;else if (code == '0031') ;else if (['0016', '0017'].indexOf(code) !== -1) {
              //promotion error
              gaEventEmitter.instance.emit(gaEventsCode.NETWORK.PROMOTION_ERROR, {
                forceDie: forceDie,
                code: code,
                data: data
              });
            } else if (code == '0049') {
              // send bet error
              gaEventEmitter.instance.emit(gaEventsCode.NETWORK.REQUEST_BET_ERROR, {
                forceDie: forceDie,
                code: code,
                data: data
              });
            } else {
              //backend error
              var _forceDie = true;
              gaEventEmitter.instance.emit(gaEventsCode.NETWORK.BACKEND_ERROR, {
                forceDie: _forceDie,
                code: code,
                data: data
              });

              this._gotoDieMode();
            }
          }
        };

        _proto._gotoNormalMode = function _gotoNormalMode() {
          if (this._outGame || this._state == gaGameNetwork.STATE_DIE) return;
          logger.log('NORMAL MODE');
          this.refreshWallet();
          this._state = gaGameNetwork.STATE_NORMAL;
          this.socketManager.clearPendingCommands();
          gaEventEmitter.instance.emit(gaEventsCode.NETWORK.NORMAL);
          gaEventEmitter.instance.emit(gaEventsCode.POPUP.CLOSE_POPUP, {
            type: gaBaseConfig.POPUP_TYPE.DIALOG
          });
        };

        _proto._gotoDieMode = function _gotoDieMode() {
          if (this._outGame || this._state == gaGameNetwork.STATE_DIE) return;
          logger.error('DIE MODE');
          this._state = gaGameNetwork.STATE_DIE;
          this.closeAndCleanUp();
          gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_FORCE_DISCONNECT);
        };

        return gaGameNetwork;
      }());
      gaGameNetwork.STATE_NORMAL = 'NORMAL';
      gaGameNetwork.STATE_DIE = 'DIE';

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaGameService.ts", ['cc', './gaCommon.ts', './gaLogger.ts', './gaPromise.ts', './connectNetwork.ts', './globalNetwork.ts', './loadConfigAsync.ts', './serviceRest.ts'], function (exports) {
  var cclegacy, logger, gaPromise, connectNetwork, globalNetwork, loadConfigAsync, apiObject;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, null, function (module) {
      logger = module.default;
    }, function (module) {
      gaPromise = module.gaPromise;
    }, function (module) {
      connectNetwork = module.default;
    }, function (module) {
      globalNetwork = module.default;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      apiObject = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "a8690ovu2ZHK60vxctKXIPc", "gaGameService", undefined);

      var Sentry = window.Sentry;

      var gaGameService = /*#__PURE__*/function () {
        function gaGameService() {
          this._gameId = '';
        }

        var _proto = gaGameService.prototype;

        _proto.authenticate = function authenticate(gameId, version) {
          var _this = this;

          logger.log("authenticate", gameId, version);
          this._gameId = gameId;
          return this._login(gameId).then(function () {
            return _this._register(gameId, version);
          });
        };

        _proto._login = function _login(gameId) {
          return new gaPromise(function (resolve, reject) {
            connectNetwork.loginScene({
              gameId: gameId,
              callback: resolve,
              callbackAuthFailed: function callbackAuthFailed() {
                logger.error("Login failed");
                reject();
              }
            });
          });
        };

        _proto._register = function _register(gameId, version) {
          return new gaPromise(function (resolve) {
            if (typeof Sentry !== 'undefined') {
              Sentry.configureScope(function (scope) {
                scope.setExtra("gameId", gameId);
                scope.setExtra("version", version);
              });
            }

            resolve();
          });
        };

        _proto.getHistory = function getHistory(uPath, requestParams) {
          var _this2 = this;

          var headers = {
            Authorization: globalNetwork.getToken()
          };
          var apiUrl = loadConfigAsync.getConfig().API_URL;
          return new Promise(function (resolve, reject) {
            apiObject.getWithHeader({
              url: uPath,
              apiUrl: apiUrl,
              params: requestParams,
              headers: headers,
              callback: function callback(res) {
                if (_this2._checkInvalidResponse(res)) {
                  reject();
                  return;
                }

                resolve(res);
              },
              callbackErr: reject
            });
          });
        };

        _proto._checkInvalidResponse = function _checkInvalidResponse(res) {
          return !res || res.status == 'FAIL' || res.data == null;
        };

        return gaGameService;
      }();

      var gameService = exports('default', new gaGameService());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaGameText.ts", ['cc', './gaLocalize.ts'], function (exports) {
  var cclegacy, gaLocalize;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaLocalize = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "4adfb/vqfpKVIchl9k+Xsbb", "gaGameText", undefined);

      var gaGameText = exports('gaGameText', /*#__PURE__*/function () {
        function gaGameText() {}

        gaGameText.getErrorMessage = function getErrorMessage(errorCode) {
          var messages = gaLocalize.instance;
          var msg;

          switch (errorCode) {
            case '0001':
              msg = messages.NO_MONEY;
              break;

            case '0004':
              msg = messages.JOIN_GAME_FAILED;
              break;

            case '0007':
              msg = messages.NO_PLAYSESSION;
              break;

            case '0011':
              msg = messages.BET_FAILED;
              break;

            case '0027':
              msg = messages.KICK_INACTIVE_USER;
              break;

            case '0029':
              msg = messages.GROUP_MAINTAIN;
              break;

            case '0401':
              msg = messages.AUTHEN_FAILED;
              break;

            case '0501':
              msg = messages.MISMATCH_DATA;
              break;

            case '0006':
            case 'W2001':
            case 'W2004':
            case 'W2006':
            case 'W2007':
            case 'W2008':
            case 'W2500':
            case 'W29999':
              msg = messages.WALLET_ERROR;
              break;

            default:
              msg = messages.SYSTEM_ERROR;
              break;
          }

          return msg;
        };

        return gaGameText;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaGameView.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts', './gaEventsCode.ts', './gaReferenceManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, gaComponent, gaEventsCode, gaReferenceManager;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaReferenceManager = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "4c4e7A+5slDb6LB4RarENS5", "gaGameView", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaGameView = exports('default', (_dec = ccclass('gaGameView'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaGameView, _gaComponent);

        function gaGameView() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this; //#region ------------------------------------------------------------------ Declare variables

          _initializerDefineProperty(_this, "gameLayer", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "uiLayer", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "aboveLayer", _descriptor3, _assertThisInitialized(_this));

          _this._initialized = false;
          return _this;
        }

        var _proto = gaGameView.prototype; //#endregion
        //#region  --------------------------------------------------------------- Component functions

        _proto.onLoad = function onLoad() {
          this.node['gameLayer'] = this.gameLayer;
          this.node['uiLayer'] = this.uiLayer;
          this.node['aboveLayer'] = this.aboveLayer;
          gaReferenceManager.instance.setReference("gameView", this.node);

          _gaComponent.prototype.onLoad.call(this);
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.COMMON.INITIALIZE_GAME, this.initialize);
          this.register(gaEventsCode.COMMON.ON_SCREEN_RESIZE, this.onScreenResize);
        };

        _proto.initialize = function initialize() {
          if (!this._initialized) {
            this._initialized = true;
            this.onScreenResize();
          }
        };

        _proto.onScreenResize = function onScreenResize() {} //#endregion
        ;

        return gaGameView;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "gameLayer", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "uiLayer", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "aboveLayer", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaGeneralInitialization.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaEventsCode.ts', './gaCurrencyCalculator.ts', './gaDataFactory.ts', './gaDataStore.ts', './gaEventEmitter.ts', './gaLocalize.ts', './gaLocalStorage.ts', './gaReferenceManager.ts', './gaMainStateMachine.ts', './gaCommandID.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, JsonAsset, director, Component, gaBaseConfig, gaEventsCode, gaCurrencyCalculator, gaDataFactory, gaDataStore, gaEventEmitter, gaLocalize, gaLocalStorage, gaReferenceManager, gaMainStateMachine, gaCommandID;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      JsonAsset = module.JsonAsset;
      director = module.director;
      Component = module.Component;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaCurrencyCalculator = module.default;
    }, function (module) {
      gaDataFactory = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaLocalize = module.default;
    }, function (module) {
      gaLocalStorage = module.default;
    }, function (module) {
      gaReferenceManager = module.default;
    }, function (module) {
      gaMainStateMachine = module.default;
    }, function (module) {
      gaCommandID = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "b7793O0S0VPX7iwwE3Uvjp1", "gaGeneralInitialization", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaGeneralInitialization = exports('default', (_dec = ccclass('gaGeneralInitialization'), _dec2 = property(JsonAsset), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaGeneralInitialization, _Component);

        function gaGeneralInitialization() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "jsonLocalize", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaGeneralInitialization.prototype;

        _proto.onLoad = function onLoad() {
          director.addPersistRootNode(this.node);
          this.initInstances();
          this.baseInitInstances();
          gaEventEmitter.instance.registerEvent(gaEventsCode.COMMON.REFRESH_PAGE, this.refreshPage, this);
        };

        _proto.refreshPage = function refreshPage() {
          director.removePersistRootNode(this.node);
          this.node.destroy();
        };

        _proto.onDestroy = function onDestroy() {
          this.destroyInstances();
        };

        _proto.initInstances = function initInstances() {};

        _proto.baseInitInstances = function baseInitInstances() {
          if (gaEventEmitter.instance == null) {
            gaEventEmitter.instance = new gaEventEmitter();
          }

          if (gaCommandID.instance == null) {
            gaCommandID.instance = new gaCommandID();
          }

          if (gaReferenceManager.instance == null) {
            gaReferenceManager.instance = new gaReferenceManager();
          }

          if (gaDataFactory.instance == null) {
            gaDataFactory.instance = new gaDataFactory();
          }

          if (gaLocalize.instance == null) {
            gaLocalize.instance = new gaLocalize();
            gaLocalize.instance.initLocalizeConfig(this.jsonLocalize.json);
          }

          if (gaBaseConfig.instance == null) {
            gaBaseConfig.instance = new gaBaseConfig();
          }

          if (gaDataStore.instance == null) {
            gaDataStore.instance = new gaDataStore();
          }

          if (gaCurrencyCalculator.instance == null) {
            gaCurrencyCalculator.instance = new gaCurrencyCalculator();
          }

          if (gaLocalStorage.instance == null) {
            gaLocalStorage.instance = new gaLocalStorage();
          }

          if (gaMainStateMachine.instance == null) {
            gaMainStateMachine.instance = new gaMainStateMachine();
          }
        };

        _proto.destroyInstances = function destroyInstances() {
          if (gaEventEmitter.instance) {
            gaEventEmitter.instance.destroy();
          }

          if (gaCommandID.instance) {
            gaCommandID.instance.destroy();
          }

          if (gaLocalize.instance) {
            gaLocalize.instance.destroy();
          }

          if (gaBaseConfig.instance) {
            gaBaseConfig.instance.destroy();
          }

          if (gaDataStore.instance) {
            gaDataStore.instance.destroy();
          }

          if (gaCurrencyCalculator.instance) {
            gaCurrencyCalculator.instance.destroy();
          }

          if (gaLocalStorage.instance) {
            gaLocalStorage.instance.destroy();
          }

          if (gaMainStateMachine.instance) {
            gaMainStateMachine.instance.destroy();
          }
        };

        return gaGeneralInitialization;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "jsonLocalize", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaHistoryItem.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaLogger.ts', './gaComponent.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, logger, gaComponent;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "8098dPiy+FP06rUa5Z4UJZF", "gaHistoryItem", undefined);

      var ccclass = _decorator.ccclass;
      var gaHistoryItem = exports('default', (_dec = ccclass('gaHistoryItem'), _dec(_class = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaHistoryItem, _gaComponent);

        function gaHistoryItem() {
          return _gaComponent.apply(this, arguments) || this;
        }

        var _proto = gaHistoryItem.prototype;

        _proto.onSpawn = function onSpawn(_data, _index) {
          logger.warn("gaHistoryItem.onSpawn() is not implemented");
        };

        return gaHistoryItem;
      }(gaComponent)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaInitState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataStore.ts', './gaBaseConfig.ts', './gaEventsCode.ts', './gaStateView.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, gaDataStore, gaBaseConfig, gaEventsCode, gaStateView;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaStateView = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "fd04amHO09Msrb2ixjsHukE", "gaInitState", undefined);

      var ccclass = _decorator.ccclass;
      var gaInitState = exports('default', (_dec = ccclass("gaInitState"), _dec(_class = /*#__PURE__*/function (_gaStateView) {
        _inheritsLoose(gaInitState, _gaStateView);

        function gaInitState() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaStateView.call.apply(_gaStateView, [this].concat(args)) || this;
          _this.isFirstTime = true;
          _this.pendingRequest = null;
          return _this;
        }

        var _proto = gaInitState.prototype; //#endregion
        //#region  --------------------------------------------------------------- Component functions
        //#endregion
        //#region  ------------------------------------------------------------------ public functions

        _proto.onEnter = function onEnter() {
          this.initEvents();
          this.soundPlayer.playMainBGM();
          gaDataStore.instance.result = null;
          this.emit(gaEventsCode.JACKPOT.RESUME_JACKPOT);

          if (this.isFirstTime) {
            this.isFirstTime = false;
            this.startBetting();
          } else {
            this.refreshPayout();
          }
        };

        _proto.onLeave = function onLeave() {
          this.removeEvents();
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.NETWORK.NORMAL, this.onNetworkNormal);
          this.register(gaEventsCode.DATA.PAYOUT_RECEIVED, this.onPayoutReceived);
        };

        _proto.startBetting = function startBetting(delay) {
          var _this2 = this;

          if (delay === void 0) {
            delay = 0;
          }

          this.pendingRequest = null;
          this.scheduleOnce(function () {
            _this2.emit(gaEventsCode.STATE.START_BETTING);
          }, delay);
        };

        _proto.onNetworkNormal = function onNetworkNormal() {
          if (this.pendingRequest != null) {
            this.pendingRequest();
          }
        };

        _proto.refreshPayout = function refreshPayout() {
          var _this3 = this;

          gaDataStore.instance.userInfo.clearPending();

          this.pendingRequest = function () {
            _this3.emit(gaEventsCode.ACTION.REFRESH_PAYOUT);
          };

          this.pendingRequest();
        };

        _proto.onPayoutReceived = function onPayoutReceived(_payout, error) {
          if (error) {
            if (error.isResponseError) {
              this.pendingRequest = null;
            }

            return;
          }

          this.pendingRequest = null;
          this.startBetting();
        } //#endregion
        ;

        _createClass(gaInitState, [{
          key: "stateName",
          get: //#region ------------------------------------------------------------------ Declare variables
          function get() {
            return gaBaseConfig.instance.GAME_STATE.INIT;
          }
        }]);

        return gaInitState;
      }(gaStateView)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaIStateMachine.ts", ['cc'], function () {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "8825fq0BZpPurlApn9n4Cle", "gaIStateMachine", undefined);

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaItemsCircularVerticalAutoScroller.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaTweenUtils.ts', './gaItemsVerticalAutoScroller.ts', './gaScrollItem.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, UITransform, instantiate, gaBaseConfig, v3f, gaItemsVerticalAutoScroller, gaScrollItem;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      UITransform = module.UITransform;
      instantiate = module.instantiate;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      v3f = module.v3f;
    }, function (module) {
      gaItemsVerticalAutoScroller = module.gaItemsVerticalAutoScroller;
    }, function (module) {
      gaScrollItem = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "8e31b+uhERHkr7AKu/7UZmM", "gaItemsCircularVerticalAutoScroller", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaItemsCircularVerticalAutoScroller = exports('gaItemsCircularVerticalAutoScroller', (_dec = ccclass('gaItemsCircularVerticalAutoScroller'), _dec(_class = /*#__PURE__*/function (_gaItemsVerticalAutoS) {
        _inheritsLoose(gaItemsCircularVerticalAutoScroller, _gaItemsVerticalAutoS);

        function gaItemsCircularVerticalAutoScroller() {
          return _gaItemsVerticalAutoS.apply(this, arguments) || this;
        }

        var _proto = gaItemsCircularVerticalAutoScroller.prototype;

        _proto.handleMoveLogic = function handleMoveLogic(touch) {
          var touchPoint = touch.getLocation();

          if (this.lockValue !== -1) {
            return;
          }

          this.isTouchMove = true;
          var offset = touchPoint.y - touch.getPreviousLocation().y;
          var TouchDirectionAutoBot = gaBaseConfig.instance.TouchDirectionAutoBot;

          if (offset < 0) {
            this.touchMoveDirection = TouchDirectionAutoBot.TOP;
            this.isAutoScrolling = true;
          } else if (offset > 0) {
            this.touchMoveDirection = TouchDirectionAutoBot.BOTTOM;
            this.isAutoScrolling = true;
          }

          this.moveItem(offset);
          this.autoScrollSpeed = Math.abs(offset) * 100;
          var ScrollDirectionAutoBot = gaBaseConfig.instance.ScrollDirectionAutoBot;

          if (this.touchMoveDirection == TouchDirectionAutoBot.TOP) {
            this.scrollDirection = ScrollDirectionAutoBot.BOTTOM;
            this.autoScrollDistance = Math.abs(offset) * (this.itemHeight + this.itemPadding);
          } else {
            this.scrollDirection = ScrollDirectionAutoBot.TOP;
            this.autoScrollDistance = -Math.abs(offset) * (this.itemHeight + this.itemPadding);
          }

          if (Math.abs(this.autoScrollDistance) < (this.itemHeight + this.itemPadding) * 2) {
            this.autoScrollSpeed = 0;
            this.autoScrollDistance = 0;
            this.isAutoScrolling = false;
          }

          this.updateOutOfBoundary();
        };

        _proto.updateOutOfBoundary = function updateOutOfBoundary() {
          var topBoundary = this.itemHeight * 2 + this.itemPadding * 2;
          var botBoundary = -topBoundary;
          var isOutOfBound = false;
          this.updateTopBotBoundary();

          if (this.itemBotBoundary.position.y - this.itemHeight / 2 > botBoundary) {
            this.moveTopItemToBot();
            isOutOfBound = true;
          } else if (this.itemTopBoundary.position.y + this.itemHeight / 2 < topBoundary) {
            this.moveBotItemToTop();
            isOutOfBound = true;
          }

          if (isOutOfBound) {
            this.items.forEach(function (item, index) {
              item.getComponent(gaScrollItem).value = index;
            });
          }
        };

        _proto.initItemList = function initItemList(arrValue) {
          if (arrValue) {
            this.arrValue = arrValue;
          }

          var paddingItem = this.itemPadding;

          for (var i = 0; i < this.items.length; ++i) {
            this.items[i].removeFromParent();
            this.items[i].destroy();
          }

          this.items.length = 0;
          this.itemHeight = this.prefabItem.getComponent(UITransform).height;
          var prefabParent = this.prefabItem.parent;

          for (var index = -2; index <= 2; index++) {
            var node = instantiate(this.prefabItem);
            var item = node.getComponent(gaScrollItem);
            var displayIndex = index;

            if (displayIndex < 0) {
              displayIndex = arrValue.length + index;
            }

            item.textLabel.string = arrValue[displayIndex];
            this.items.push(node);
          }

          var posY = this.prefabItem.getComponent(UITransform).height * 2 + this.itemPadding * 2;

          for (var _index = 0; _index < 5; _index++) {
            var _node = this.items[_index];

            var _item = _node.getComponent(gaScrollItem);

            _item.value = _index;

            _node.setScale(v3f(this.scaleMin));

            prefabParent.addChild(_node);

            _node.setPosition(_node.position.x, posY);

            posY -= this.itemHeight + paddingItem;
          }

          this.currItemIdx = 2;
          this.prefabItem.destroy();
          var curItem = this.getCurrentItem();
          var moveDistance = -curItem.position.y;
          this.moveItem(moveDistance);
          this.updateTopBotBoundary();
        };

        _proto.moveToPreviousItem = function moveToPreviousItem() {
          this.scrollToItem(this.currItemIdx - 1);
        };

        _proto.moveToNextItem = function moveToNextItem() {
          this.scrollToItem(this.currItemIdx + 1);
        };

        _proto.scrollToItem = function scrollToItem(idx) {
          idx = parseInt(idx);
          if (idx < 0) idx = 0;

          if (idx >= this.items.length) {
            idx = this.items.length - 1;
          }

          this.currItemIdx = idx;
          var curItem = this.items[idx];
          this.autoScrollDistance = curItem.position.y - this.center.y;
          this.autoScrollSpeed = Math.abs(this.autoScrollDistance) / 0.2;
          var ScrollDirectionAutoBot = gaBaseConfig.instance.ScrollDirectionAutoBot;
          this.scrollDirection = this.autoScrollDistance > 0 ? ScrollDirectionAutoBot.BOTTOM : ScrollDirectionAutoBot.TOP;
          this.isAutoScrolling = true;
        };

        _proto.unlock = function unlock() {
          this.lockValue = -1;
          this.btnMinus.interactable = true;
          this.btnPlus.interactable = true;
          this.topPart.interactable = true;
          this.botPart.interactable = true;
        };

        _createClass(gaItemsCircularVerticalAutoScroller, [{
          key: "currentValue",
          get: function get() {
            return _gaItemsVerticalAutoS.prototype.currentValue;
          }
        }]);

        return gaItemsCircularVerticalAutoScroller;
      }(gaItemsVerticalAutoScroller)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaItemsScroller.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaComponent.ts', './gaScrollItem.ts', './gaTweenUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Button, Node, v2, UITransform, instantiate, gaBaseConfig, gaComponent, gaScrollItem, v3f;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      Node = module.Node;
      v2 = module.v2;
      UITransform = module.UITransform;
      instantiate = module.instantiate;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaScrollItem = module.default;
    }, function (module) {
      v3f = module.v3f;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "379b8PwTGZGh5/4ZfImrnlS", "gaItemsScroller", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaItemsScroller = exports('default', (_dec = ccclass('gaItemsScroller'), _dec2 = property(Button), _dec3 = property(Button), _dec4 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaItemsScroller, _gaComponent);

        function gaItemsScroller() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "btnMinus", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnPlus", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "prefabItem", _descriptor3, _assertThisInitialized(_this));

          _this.touchMoveDirection = null;
          _this.touchPos = v2(0, 0);
          _this.items = [];
          _this.scaleMin = 0.8;
          _this.currItemIdx = 0;
          _this.itemLeftBoundary = null;
          _this.itemRightBoundary = null;
          _this.center = v2(0.0, 0.0);
          _this.autoScrollDistance = 0.0;
          _this.autoScrollSpeed = 0.0;
          _this.isAutoScrolling = false;
          _this.scrollDirection = null;
          _this.arrValue = [];
          _this.totalItem = 0;
          _this.itemPadding = 50;
          _this.scaleMax = 1;
          _this.scaleViewDistance = 100;
          return _this;
        }

        var _proto = gaItemsScroller.prototype;

        _proto.onLoad = function onLoad() {
          // Register Touch Event
          this.node.on(Node.EventType.TOUCH_START, this.onTouchBegan, this, true);
          this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMoved, this, true);
          this.node.on(Node.EventType.TOUCH_END, this.onTouchEnded, this, true);
          this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this, true);
        };

        _proto.onTouchBegan = function onTouchBegan(touch) {
          this.touchPos = touch.getLocation();
        };

        _proto.onTouchMoved = function onTouchMoved(touch) {
          this.handleMoveLogic(touch);
        };

        _proto.handleMoveLogic = function handleMoveLogic(touch) {
          var touchPoint = touch.getLocation();
          var offset = touchPoint.x - touch.getPreviousLocation().x;
          var TouchDirectionAutoBot = gaBaseConfig.instance.TouchDirectionAutoBot;

          if (offset < 0) {
            this.touchMoveDirection = TouchDirectionAutoBot.LEFT;
          } else if (offset > 0) {
            this.touchMoveDirection = TouchDirectionAutoBot.RIGHT;
          }

          this.moveItem(offset);
        };

        _proto.onTouchEnded = function onTouchEnded(touch) {
          var _isAutoScroll = false;

          if (this.touchPos.x - touch.getPreviousLocation().x != 0.0) {
            _isAutoScroll = true;
          }

          if (_isAutoScroll) {
            this.handleReleaseLogic();
          }
        };

        _proto.onTouchCancel = function onTouchCancel() {
          this.handleReleaseLogic();
        };

        _proto.handleReleaseLogic = function handleReleaseLogic() {
          var _this2 = this;

          var isScrollOverScreen = true;
          var scaleMaxRatio = this.scaleMin;
          this.items.forEach(function (item) {
            if (item && item.scale > scaleMaxRatio) {
              scaleMaxRatio = item.scale;
              _this2.currItemIdx = item.value;
              isScrollOverScreen = false;
            }
          });

          if (isScrollOverScreen) {
            if (this.itemLeftBoundary && this.itemLeftBoundary.x > this.center.x) {
              this.currItemIdx = 0;
            } else if (this.itemRightBoundary && this.itemRightBoundary.x < this.center.x) {
              this.currItemIdx = this.items.length - 1;
            }
          }

          this.scrollToItem(this.currItemIdx);
        };

        _proto.initItemList = function initItemList(arrValue) {
          var _this3 = this;

          if (arrValue) {
            this.arrValue = arrValue;
            this.totalItem = this.arrValue.length;
          } else {
            return;
          }

          var posX = 0.0;
          var paddingItem = this.itemPadding;
          this.prefabItem.parent = null;

          var _loop = function _loop() {
            var item = instantiate(_this3.prefabItem);
            var itemComponent = item.getComponent(gaScrollItem);
            itemComponent.value = index;
            item.scale = v3f(_this3.scaleMin);

            _this3.node.addChild(item);

            item.setPosition(posX, item.getPosition().y);
            item.on(Node.EventType.TOUCH_END, function () {
              _this3.scrollToItem(itemComponent.value);
            });
            posX += item.getComponent(UITransform).getBoundingBox().width + paddingItem;
            itemComponent.setLabelStr(index === _this3.arrValue.length - 1 ? gaBaseConfig.instance.TIMER_SCROLLER.MAX_TIME : _this3.arrValue[index]);

            _this3.items.push(item);
          };

          for (var index = 0; index < this.arrValue.length; index++) {
            _loop();
          }

          this.prefabItem.destroy();
        };

        _proto.updateLeftRightBoundary = function updateLeftRightBoundary() {
          if (Array.isArray(this.items) && this.items.length > 0) {
            var _this$items = this.items,
                firstItem = _this$items[0],
                lastItem = _this$items[this.items.length - 1];
            this.itemLeftBoundary = firstItem;
            this.itemRightBoundary = lastItem;
          }
        };

        _proto.reset = function reset() {
          this.currItemIdx = Math.floor(this.totalItem * 0.5);
          var curItem = this.getCurrentItem();
          var moveDistance = -curItem.x;
          this.moveItem(moveDistance);
        };

        _proto.getCurrentItem = function getCurrentItem() {
          if (this.currItemIdx >= 0) {
            return this.items[this.currItemIdx];
          }
        };

        _proto.update = function update(dt) {
          var _this4 = this;

          this.items.forEach(function (item) {
            _this4.updateItemStatus(item);
          });

          if (this.isAutoScrolling) {
            this._autoScroll(dt);
          }
        };

        _proto.updateItemStatus = function updateItemStatus(item) {
          var distance = Math.abs(item.x - this.center.x);
          var scaleRatio = Math.max(this.scaleMin, this.scaleMax - distance * (this.scaleMax - this.scaleMin) / this.scaleViewDistance);
          item.scale = scaleRatio;
          item.opacity = distance > (this.node.getComponent(UITransform).width + item.width) / 2 ? 0 : 255;
        };

        _proto._autoScroll = function _autoScroll(dt) {
          if (this.scrollDirection == gaBaseConfig.instance.ScrollDirectionAutoBot.RIGHT) {
            var step = this.autoScrollSpeed * dt;

            if (this.autoScrollDistance + step >= 0.0) {
              step = -this.autoScrollDistance;
              this.autoScrollDistance = 0.0;
              this.isAutoScrolling = false;
            } else {
              this.autoScrollDistance += step;
            }

            this.moveItem(step);
          } else {
            var _step = this.autoScrollSpeed * dt;

            if (this.autoScrollDistance - _step <= 0.0) {
              _step = this.autoScrollDistance;
              this.autoScrollDistance = 0.0;
              this.isAutoScrolling = false;
            } else {
              this.autoScrollDistance -= _step;
            }

            this.moveItem(-_step);
          }
        };

        _proto.moveItem = function moveItem(offset) {
          this.items.forEach(function (item) {
            if (item) {
              item.x += offset;
            }
          });
        };

        _proto.moveToPreviousItem = function moveToPreviousItem() {
          if (this.currItemIdx > 1) {
            this.scrollToItem(this.currItemIdx - 1);
          }
        };

        _proto.moveToNextItem = function moveToNextItem() {
          if (this.currItemIdx < this.items.length - 1) {
            this.scrollToItem(this.currItemIdx + 1);
          }
        };

        _proto.scrollToItem = function scrollToItem(idx) {
          idx = parseInt(idx);
          if (idx < 1) idx = 1;

          if (idx >= this.items.length) {
            idx = this.items.length - 1;
          }

          this.currItemIdx = idx;
          var curItem = this.items[idx];
          this.autoScrollDistance = curItem.x - this.center.x;
          this.autoScrollSpeed = Math.abs(this.autoScrollDistance) / 0.2;
          var ScrollDirectionAutoBot = gaBaseConfig.instance.ScrollDirectionAutoBot;
          this.scrollDirection = this.autoScrollDistance > 0 ? ScrollDirectionAutoBot.LEFT : ScrollDirectionAutoBot.RIGHT;
          this.isAutoScrolling = true;
          this.btnMinus.interactable = !(this.currItemIdx === 1);
          this.btnPlus.interactable = !(this.currItemIdx === this.items.length - 1);
        };

        return gaItemsScroller;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "btnMinus", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "btnPlus", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "prefabItem", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaItemsVerticalAutoScroller.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaTweenUtils.ts', './gaItemsVerticalScroller.ts', './gaScrollItem.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Button, v3, UIOpacity, UITransform, instantiate, gaBaseConfig, v3f, gaItemsVerticalScroller, gaScrollItem;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      v3 = module.v3;
      UIOpacity = module.UIOpacity;
      UITransform = module.UITransform;
      instantiate = module.instantiate;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      v3f = module.v3f;
    }, function (module) {
      gaItemsVerticalScroller = module.gaItemsVerticalScroller;
    }, function (module) {
      gaScrollItem = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "5f9ccWL3URLo4OD6y/JckAU", "gaItemsVerticalAutoScroller", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaItemsVerticalAutoScroller = exports('gaItemsVerticalAutoScroller', (_dec = ccclass('gaItemsVerticalAutoScroller'), _dec2 = property(Button), _dec3 = property(Button), _dec(_class = (_class2 = /*#__PURE__*/function (_gaItemsVerticalScrol) {
        _inheritsLoose(gaItemsVerticalAutoScroller, _gaItemsVerticalScrol);

        function gaItemsVerticalAutoScroller() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaItemsVerticalScrol.call.apply(_gaItemsVerticalScrol, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "topPart", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "botPart", _descriptor2, _assertThisInitialized(_this));

          _this.lockValue = -1;
          _this.isTouchMove = false;
          _this.itemHeight = 0;
          _this.scaleMin = 0.5;
          _this.itemPadding = 10;
          _this.scaleViewDistance = 75;
          return _this;
        }

        var _proto = gaItemsVerticalAutoScroller.prototype;

        _proto.onLoad = function onLoad() {
          _gaItemsVerticalScrol.prototype.onLoad.call(this);

          this.topPart.node.on('click', this.moveToPreviousItem, this);
          this.botPart.node.on('click', this.moveToNextItem, this);
        };

        _proto.handleMoveLogic = function handleMoveLogic(touch) {
          if (this.lockValue !== -1) {
            return;
          }

          this.isTouchMove = true;
          this.lockButtons();
          var touchPoint = touch.getLocation();
          var offset = touchPoint.y - touch.getPreviousLocation().y;
          this.autoScrollSpeed = Math.abs(offset) * 100;
          this.isAutoScrolling = false;
          var ScrollDirectionAutoBot = gaBaseConfig.instance.ScrollDirectionAutoBot;

          if (offset != 0) {
            this.isAutoScrolling = true;

            if (offset > 0) {
              this.scrollDirection = ScrollDirectionAutoBot.TOP;
              this.autoScrollDistance = -Math.abs(offset) * (this.itemHeight + this.itemPadding);
            } else {
              this.scrollDirection = ScrollDirectionAutoBot.BOTTOM;
              this.autoScrollDistance = Math.abs(offset) * (this.itemHeight + this.itemPadding);
            }
          }

          if (Math.abs(this.autoScrollDistance) < (this.itemHeight + this.itemPadding) * 2 || !this.isAutoScrolling) {
            this.autoScrollSpeed = 0;
            this.autoScrollDistance = 0;

            if (this.isAutoScrolling) {
              this.isAutoScrolling = false;
            }
          }

          this.moveItem(offset);
          this.updateOutOfBoundary();
        };

        _proto.onTouchEnded = function onTouchEnded(touch) {
          this.handleReleaseLogic();
        };

        _proto.handleReleaseLogic = function handleReleaseLogic() {
          this.isTouchMove = false;
        };

        _proto.update = function update(dt) {
          var _this2 = this;

          if (this.isAutoScrolling || this.isTouchMove) {
            this.updateOutOfDisplay();

            if (this.isAutoScrolling) {
              if (this.lockValue != -1) {
                this.autoScrollSpeed = 1000;
              }

              this.autoScroll(dt);
              this.updateOutOfBoundary();
            }
          } else {
            if (this.lockValue != -1 && this.currentValue !== this.lockValue) {
              this.moveToPreviousItem();
            } else if (this.lockValue == -1) {
              this.unlockButtons();

              if (this.getCurrentItem().position.y !== 0) {
                this.scrollToItem(this.currItemIdx);
              }
            }
          }

          this.items.forEach(function (item) {
            _this2.updateItemStatus(item);
          });
          this.updateCurrIdx();
        };

        _proto.updateOutOfDisplay = function updateOutOfDisplay() {
          this.updateTopBotBoundary();
          var topBoundary = (this.itemHeight + this.itemPadding) * 4;
          var botBoundary = -topBoundary;
          var botValue = parseInt(this.itemBotBoundary.getComponent(gaScrollItem).textLabel.string);
          var topValue = parseInt(this.itemTopBoundary.getComponent(gaScrollItem).textLabel.string);
          var isStopScrolling = false;

          if (this.itemBotBoundary.position.y > 0) {
            this.moveItem(-this.itemBotBoundary.position.y);

            if (botValue !== this.arrValue[this.arrValue.length - 1]) {
              this.moveItem(botBoundary);
            } else {
              isStopScrolling = true;
            }
          }

          if (this.itemTopBoundary.position.y < 0) {
            this.moveItem(Math.abs(this.itemTopBoundary.position.y));

            if (topValue !== this.arrValue[0]) {
              this.moveItem(topBoundary);
            } else {
              isStopScrolling = true;
            }
          }

          if (isStopScrolling) {
            this.autoScrollDistance = 0;
            this.isAutoScrolling = false;
            this.autoScrollSpeed = 0;
          }
        };

        _proto.autoScroll = function autoScroll(dt) {
          var isStopScrolling = false;

          if (this.scrollDirection == gaBaseConfig.instance.ScrollDirectionAutoBot.TOP) {
            var step = this.autoScrollSpeed * dt;

            if (this.autoScrollDistance + step >= 0.0) {
              step = -this.autoScrollDistance;
              isStopScrolling = true;
            } else {
              this.autoScrollDistance += step;
              this.autoScrollSpeed -= dt;
            }

            this.moveItem(step);
          } else {
            var _step = this.autoScrollSpeed * dt;

            if (this.autoScrollDistance - _step <= 0.0) {
              _step = this.autoScrollDistance;
              isStopScrolling = true;
            } else {
              this.autoScrollDistance -= _step;
              this.autoScrollSpeed -= dt;
            }

            this.moveItem(-_step);
          }

          if (isStopScrolling) {
            this.autoScrollDistance = 0;
            this.isAutoScrolling = false;
            this.autoScrollSpeed = 0;
          }
        };

        _proto.updateOutOfBoundary = function updateOutOfBoundary() {
          var topBoundary = this.itemHeight * 2 + this.itemPadding * 2;
          var botBoundary = -topBoundary;
          var isOutOfBound = false;
          this.updateTopBotBoundary();
          var botValue = parseInt(this.itemBotBoundary.getComponent(gaScrollItem).textLabel.string);
          var topValue = parseInt(this.itemTopBoundary.getComponent(gaScrollItem).textLabel.string);

          if (this.itemBotBoundary.position.y - this.itemHeight / 2 > botBoundary && botValue != this.arrValue[this.arrValue.length - 1]) {
            this.moveTopItemToBot();
            isOutOfBound = true;
          } else if (this.itemTopBoundary.position.y + this.itemHeight / 2 < topBoundary && topValue !== this.arrValue[0]) {
            this.moveBotItemToTop();
            isOutOfBound = true;
          }

          if (isOutOfBound) {
            this.items.forEach(function (item, index) {
              item.getComponent(gaScrollItem).value = index;
            });
          }
        };

        _proto.moveTopItemToBot = function moveTopItemToBot() {
          this.itemTopBoundary.position = v3(this.itemBotBoundary.position.x, this.itemBotBoundary.position.y - (this.itemHeight + this.itemPadding));
          this.items.shift();
          this.items.push(this.itemTopBoundary);
          var botBoundaryValue = Number(this.itemBotBoundary.getComponent(gaScrollItem).textLabel.string);
          botBoundaryValue++;

          if (botBoundaryValue > this.arrValue[this.arrValue.length - 1]) {
            botBoundaryValue = this.arrValue[0];
          }

          this.itemTopBoundary.getComponent(gaScrollItem).textLabel.string = '' + botBoundaryValue;
        };

        _proto.moveBotItemToTop = function moveBotItemToTop() {
          this.itemBotBoundary.position = v3(this.itemTopBoundary.position.x, this.itemTopBoundary.position.y + (this.itemHeight + this.itemPadding));
          this.items.pop();
          this.items.unshift(this.itemBotBoundary);
          var topBoundaryValue = Number(this.itemTopBoundary.getComponent(gaScrollItem).textLabel.string);
          topBoundaryValue--;

          if (topBoundaryValue < this.arrValue[0]) {
            topBoundaryValue = this.arrValue[this.arrValue.length - 1];
          }

          this.itemBotBoundary.getComponent(gaScrollItem).textLabel.string = '' + topBoundaryValue;
        };

        _proto.updateItemStatus = function updateItemStatus(item) {
          var distance = Math.abs(item.position.y - this.center.y);
          var scaleRatio = Math.max(this.scaleMin, this.scaleMax - distance * (this.scaleMax - this.scaleMin) / this.scaleViewDistance);
          item.setScale(v3f(scaleRatio));
          item.getComponent(UIOpacity).opacity = scaleRatio * 255;
        };

        _proto.updateCurrIdx = function updateCurrIdx() {
          var _this3 = this;

          var scaleMaxRatio = this.scaleMin;
          this.items.forEach(function (item) {
            if (item && item.scale.y > scaleMaxRatio) {
              scaleMaxRatio = item.scale.y;
              _this3.currItemIdx = item.getComponent(gaScrollItem).value;
            }
          });
        };

        _proto.scrollToItem = function scrollToItem(idx) {
          idx = parseInt(idx);
          if (idx < 0) idx = 0;

          if (idx >= this.items.length) {
            idx = this.items.length - 1;
          }

          this.currItemIdx = idx;
          var curItem = this.items[idx];
          this.autoScrollDistance = curItem.position.y - this.center.y;
          this.autoScrollSpeed = Math.abs(this.autoScrollDistance) / 0.2;
          var ScrollDirectionAutoBot = gaBaseConfig.instance.ScrollDirectionAutoBot;
          this.scrollDirection = this.autoScrollDistance > 0 ? ScrollDirectionAutoBot.BOTTOM : ScrollDirectionAutoBot.TOP;
          this.isAutoScrolling = true;
        };

        _proto.initItemList = function initItemList(arrValue) {
          if (arrValue) {
            this.arrValue = arrValue;
          }

          var paddingItem = this.itemPadding;

          for (var i = 0; i < this.items.length; ++i) {
            this.items[i].removeFromParent();
            this.items[i].destroy();
          }

          this.items.length = 0;
          this.itemHeight = this.prefabItem.getComponent(UITransform).height;
          var posY = 0;
          var prefabParent = this.prefabItem.parent;

          for (var index = 0; index < 5; index++) {
            var node = instantiate(this.prefabItem);
            var item = node.getComponent(gaScrollItem);
            item.value = index;
            item.textLabel.string = arrValue[index];
            node.setScale(v3f(this.scaleMin));
            prefabParent.addChild(node);
            node.setPosition(node.position.x, posY);
            posY -= this.itemHeight + paddingItem;
            this.items.push(node);
          }

          this.prefabItem.destroy();
          var curItem = this.getCurrentItem();
          var moveDistance = -curItem.position.y;
          this.moveItem(moveDistance);
          this.updateTopBotBoundary();
          this.unlock();
        };

        _proto.lockToValue = function lockToValue(value) {
          this.lockValue = value;
          this.lockButtons();
        };

        _proto.lockButtons = function lockButtons() {
          this.btnMinus.interactable = false;
          this.btnPlus.interactable = false;
          this.topPart.interactable = false;
          this.botPart.interactable = false;
        };

        _proto.unlock = function unlock() {
          this.lockValue = -1;
          this.unlockButtons();
        };

        _proto.unlockButtons = function unlockButtons() {
          this.btnMinus.interactable = !(this.currItemIdx === 0);
          this.btnPlus.interactable = !(this.currItemIdx === this.items.length - 1);
          this.topPart.interactable = !(this.currItemIdx === 0);
          this.botPart.interactable = !(this.currItemIdx === this.items.length - 1);
        };

        _createClass(gaItemsVerticalAutoScroller, [{
          key: "currentValue",
          get: function get() {
            if (this.isAutoScrolling || this.isTouchMove) {
              return null;
            }

            return parseInt(this.getCurrentItem().getComponent(gaScrollItem).textLabel.string);
          }
        }]);

        return gaItemsVerticalAutoScroller;
      }(gaItemsVerticalScroller), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "topPart", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "botPart", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaItemsVerticalScroller.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaTweenUtils.ts', './gaComponent.ts', './gaScrollItem.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Button, Node, v2, instantiate, UITransform, UIOpacity, gaBaseConfig, v3f, gaComponent, gaScrollItem;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      Node = module.Node;
      v2 = module.v2;
      instantiate = module.instantiate;
      UITransform = module.UITransform;
      UIOpacity = module.UIOpacity;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      v3f = module.v3f;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaScrollItem = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "23a3f89DoxFRr/tIVdwJLdZ", "gaItemsVerticalScroller", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaItemsVerticalScroller = exports('gaItemsVerticalScroller', (_dec = ccclass('gaItemsVerticalScroller'), _dec2 = property(Button), _dec3 = property(Button), _dec4 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaItemsVerticalScroller, _gaComponent);

        function gaItemsVerticalScroller() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "btnMinus", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnPlus", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "prefabItem", _descriptor3, _assertThisInitialized(_this));

          _this.touchMoveDirection = null;
          _this.touchPos = v2(0, 0);
          _this.items = [];
          _this.scaleMin = 0.8;
          _this.currItemIdx = 0;
          _this.itemTopBoundary = null;
          _this.itemBotBoundary = null;
          _this.center = v2(0.0, 0.0);
          _this.autoScrollDistance = 0.0;
          _this.autoScrollSpeed = 0.0;
          _this.isAutoScrolling = false;
          _this.scrollDirection = null;
          _this.arrValue = [];
          _this.totalItem = 0;
          _this.itemPadding = 5;
          _this.scaleMax = 1;
          _this.scaleViewDistance = 100;
          return _this;
        }

        var _proto = gaItemsVerticalScroller.prototype;

        _proto.onLoad = function onLoad() {
          // Register Touch Event
          this.node.on(Node.EventType.TOUCH_START, this.onTouchBegan, this, true);
          this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMoved, this, true);
          this.node.on(Node.EventType.TOUCH_END, this.onTouchEnded, this, true);
          this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this, true);
          this.btnMinus.node.on("click", this.moveToPreviousItem, this);
          this.btnPlus.node.on("click", this.moveToNextItem, this);
        };

        _proto.onTouchBegan = function onTouchBegan(touch) {
          this.touchPos = touch.getLocation();
        };

        _proto.onTouchMoved = function onTouchMoved(touch) {
          this.handleMoveLogic(touch);
        };

        _proto.handleMoveLogic = function handleMoveLogic(touch) {
          var touchPoint = touch.getLocation();
          var offset = touchPoint.y - touch.getPreviousLocation().y;
          var TouchDirectionAutoBot = gaBaseConfig.instance.TouchDirectionAutoBot;

          if (offset < 0) {
            this.touchMoveDirection = TouchDirectionAutoBot.TOP;
          } else if (offset > 0) {
            this.touchMoveDirection = TouchDirectionAutoBot.BOTTOM;
          }

          this.moveItem(offset);
        };

        _proto.onTouchEnded = function onTouchEnded(touch) {
          var _isAutoScroll = false;

          if (this.touchPos.y - touch.getPreviousLocation().y != 0.0) {
            _isAutoScroll = true;
          }

          if (_isAutoScroll) {
            this.handleReleaseLogic();
          }
        };

        _proto.onTouchCancel = function onTouchCancel() {
          this.handleReleaseLogic();
        };

        _proto.handleReleaseLogic = function handleReleaseLogic() {
          var _this2 = this;

          var isScrollOverScreen = true;
          var scaleMaxRatio = this.scaleMin;
          this.items.forEach(function (item) {
            if (item && item.scale.y > scaleMaxRatio) {
              scaleMaxRatio = item.scale.y;
              _this2.currItemIdx = item.getComponent(gaScrollItem).value;
              isScrollOverScreen = false;
            }
          });

          if (isScrollOverScreen) {
            if (this.itemTopBoundary && this.itemTopBoundary.position.y < this.center.y) {
              this.currItemIdx = 0;
            } else if (this.itemBotBoundary && this.itemBotBoundary.position.y > this.center.y) {
              this.currItemIdx = this.items.length - 1;
            }
          }

          this.scrollToItem(this.currItemIdx);
        };

        _proto.initItemList = function initItemList(arrValue) {
          if (arrValue) {
            this.arrValue = arrValue;
            this.totalItem = this.arrValue.length;
          }

          var posY = 0.0;
          var paddingItem = this.itemPadding;

          for (var i = 0; i < this.items.length; ++i) {
            this.items[i].removeFromParent();
            this.items[i].destroy();
          }

          this.items.length = 0;

          for (var index = 0; index < this.arrValue.length; index++) {
            var item = instantiate(this.prefabItem);
            item.getComponent(gaScrollItem).value = index;
            item.scale = v3f(this.scaleMin);
            this.prefabItem.parent.addChild(item);
            item.setPosition(item.position.x, posY);
            posY -= item.getComponent(UITransform).height + paddingItem;
            item.getComponent(gaScrollItem).textLabel.string = arrValue[index];
            this.items.push(item);
          }

          this.prefabItem.destroy();
          var curItem = this.getCurrentItem();
          var moveDistance = -curItem.position.y;
          this.moveItem(moveDistance);
          this.updateTopBotBoundary();
        };

        _proto.updateTopBotBoundary = function updateTopBotBoundary() {
          if (Array.isArray(this.items) && this.items.length > 0) {
            var _this$items = this.items,
                firstItem = _this$items[0],
                lastItem = _this$items[this.items.length - 1];
            this.itemTopBoundary = firstItem;
            this.itemBotBoundary = lastItem;
          }
        };

        _proto.getCurrentItem = function getCurrentItem() {
          if (this.currItemIdx >= 0) {
            return this.items[this.currItemIdx];
          }
        };

        _proto.update = function update(dt) {
          var _this3 = this;

          this.items.forEach(function (item) {
            _this3.updateItemStatus(item);
          });

          if (this.isAutoScrolling) {
            this.autoScroll(dt);
          }
        };

        _proto.updateItemStatus = function updateItemStatus(item) {
          var distance = Math.abs(item.position.y - this.center.y);
          var scaleRatio = Math.max(this.scaleMin, this.scaleMax - distance * (this.scaleMax - this.scaleMin) / this.scaleViewDistance);
          item.scale = v3f(scaleRatio);
          item.getComponent(UIOpacity).opacity = distance > (this.node.getComponent(UITransform).height + item.getComponent(UITransform).height) / 2 ? 0 : 255;
        };

        _proto.autoScroll = function autoScroll(dt) {
          if (this.scrollDirection == gaBaseConfig.instance.ScrollDirectionAutoBot.TOP) {
            var step = this.autoScrollSpeed * dt;

            if (this.autoScrollDistance + step >= 0.0) {
              step = -this.autoScrollDistance;
              this.autoScrollDistance = 0.0;
              this.isAutoScrolling = false;
            } else {
              this.autoScrollDistance += step;
            }

            this.moveItem(step);
          } else {
            var _step = this.autoScrollSpeed * dt;

            if (this.autoScrollDistance - _step <= 0.0) {
              _step = this.autoScrollDistance;
              this.autoScrollDistance = 0.0;
              this.isAutoScrolling = false;
            } else {
              this.autoScrollDistance -= _step;
            }

            this.moveItem(-_step);
          }
        };

        _proto.moveItem = function moveItem(offset) {
          this.items.forEach(function (item) {
            if (item) {
              item.position.add3f(0, offset, 0);
            }
          });
        };

        _proto.moveToPreviousItem = function moveToPreviousItem() {
          if (this.currItemIdx > 0) {
            this.scrollToItem(this.currItemIdx - 1);
          }
        };

        _proto.moveToNextItem = function moveToNextItem() {
          if (this.currItemIdx < this.items.length - 1) {
            this.scrollToItem(this.currItemIdx + 1);
          }
        };

        _proto.scrollToItem = function scrollToItem(idx) {
          idx = parseInt(idx);
          if (idx < 0) idx = 0;

          if (idx >= this.items.length) {
            idx = this.items.length - 1;
          }

          this.currItemIdx = idx;
          var curItem = this.items[idx];
          this.autoScrollDistance = curItem.position.y - this.center.y;
          this.autoScrollSpeed = Math.abs(this.autoScrollDistance) / 0.2;
          var ScrollDirectionAutoBot = gaBaseConfig.instance.ScrollDirectionAutoBot;
          this.scrollDirection = this.autoScrollDistance > 0 ? ScrollDirectionAutoBot.BOTTOM : ScrollDirectionAutoBot.TOP;
          this.isAutoScrolling = true;
          this.btnMinus.interactable = !(this.currItemIdx === 0);
          this.btnPlus.interactable = !(this.currItemIdx === this.items.length - 1);
        };

        _createClass(gaItemsVerticalScroller, [{
          key: "currentValue",
          get: function get() {
            return parseInt(this.getCurrentItem().getComponent(gaScrollItem).textLabel.string);
          }
        }]);

        return gaItemsVerticalScroller;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "btnMinus", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "btnPlus", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "prefabItem", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaJackpotFrame.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaReferenceManager.ts', './gaEventsCode.ts', './gaLogger.ts', './gaCountPoint.ts', './gaComponent.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, ParticleSystem2D, tween, gaReferenceManager, gaEventsCode, logger, gaCountPoint, gaComponent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      ParticleSystem2D = module.ParticleSystem2D;
      tween = module.tween;
    }, function (module) {
      gaReferenceManager = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaCountPoint = module.default;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "76744k0QQtCQb8HzShPQA67", "gaJackpotFrame", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaJackpotFrame = exports('default', (_dec = ccclass('gaJackpotFrame'), _dec2 = property(Label), _dec3 = property(ParticleSystem2D), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaJackpotFrame, _gaComponent);

        function gaJackpotFrame() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "lblValue", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "particleCoin", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "jackpotKey", _descriptor3, _assertThisInitialized(_this));

          _this.isInitialized = false;
          _this.jpBetValue = 0;
          _this.counter = null;
          _this.isPausedJP = false;
          _this.jpMultiplier = 1;
          _this.jackpotAmt = 0;
          return _this;
        }

        var _proto = gaJackpotFrame.prototype;

        _proto.onLoad = function onLoad() {
          gaReferenceManager.instance.setReference('jackpotPanel', this.node);
          if (!this.lblValue) this.lblValue = this.node.getComponentInChildren(Label);

          if (!this.lblValue) {
            logger.warn("Jackpot label is empty");
            return;
          }

          this.counter = new gaCountPoint(this.lblValue);
          this.counter.setValue(0);

          if (this.particleCoin) {
            this.particleCoin.stopSystem();
            this.particleCoin.node.active = false;
          }

          _gaComponent.prototype.onLoad.call(this);
        };

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.JACKPOT.INIT_JACKPOT, this.initJackpot);
          this.register(gaEventsCode.JACKPOT.UPDATE_JACKPOT, this.jackpotUpdate);
          this.register(gaEventsCode.JACKPOT.PAUSE_JACKPOT, this.pauseRenderJP);
          this.register(gaEventsCode.JACKPOT.RESUME_JACKPOT, this.resumeRenderJP);
          this.register(gaEventsCode.JACKPOT.RESET_JACKPOT, this.resetCurrentJP);
          this.register(gaEventsCode.JACKPOT.UPDATE_VALUE_JACKPOT, this.updateValueJP);
          this.register(gaEventsCode.NOTIFY.SHOW_NOTIFY, this.otherUserWin);
        };

        _proto.initJackpot = function initJackpot(data) {
          if (this.jackpotKey == "") {
            logger.warn("Jackpot key is empty");
            return;
          }

          if (!this.isInitialized) {
            this.isInitialized = true;

            if (data[this.jackpotKey] != null) {
              this.jackpotAmt = data[this.jackpotKey];
            }

            this.renderJackpot(3);
          } else {
            this.renderJackpot(0.1);
          }
        };

        _proto.jackpotUpdate = function jackpotUpdate(data) {
          if (data[this.jackpotKey] != null) {
            this.jackpotAmt = data[this.jackpotKey];
          }

          this.renderJackpot(3);
        };

        _proto.pauseRenderJP = function pauseRenderJP() {
          if (this.isPausedJP) return;
          this.isPausedJP = true;
          this.counter.pause();
        };

        _proto.resumeRenderJP = function resumeRenderJP() {
          if (!this.isPausedJP) return;
          this.isPausedJP = false;
          this.counter.resume();
          this.renderJackpot(1);
        };

        _proto.updateValueJP = function updateValueJP(jpType, jpValue) {
          if (jpType == this.jackpotKey) {
            this.pauseRenderJP();
            this.jackpotAmt = jpValue;
            this.counter.count(this.jackpotAmt, 0.3);
          }
        };

        _proto.renderJackpot = function renderJackpot(time) {
          if (time === void 0) {
            time = 3;
          }

          if (this.isPausedJP || !this.isInitialized) return;
          this.counter.count(this.jackpotAmt, time);
        };

        _proto.resetCurrentJP = function resetCurrentJP() {
          var defaultValue = this.jpBetValue * this.jpMultiplier;
          this.counter.count(defaultValue, 0);
        };

        _proto.onClickJP = function onClickJP() {
          this.soundPlayer.playSFXClick();
          this.emit(gaEventsCode.POPUP.SHOW_POPUP_HISTORY_JP);
        };

        _proto.otherUserWin = function otherUserWin(data) {
          var _this2 = this;

          if (!data.jpAmt || this.isPausedJP || !this.particleCoin) return;
          this.particleCoin.node.active = true;
          this.particleCoin.resetSystem();
          gaUtils.stopAllByTarget(this.particleCoin.node);
          tween(this.particleCoin.node).delay(5).call(function () {
            return _this2.particleCoin.stopSystem();
          }).delay(1).call(function () {
            return _this2.particleCoin.node.active = false;
          }).start();
        };

        return gaJackpotFrame;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblValue", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "particleCoin", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "jackpotKey", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "";
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaJackpotHistoryItem.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaUtils.ts', './gaHistoryItem.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Node, gaUtils, gaHistoryItem;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Node = module.Node;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      gaHistoryItem = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "f71bbFkEWlIQqoOJRCsc4t7", "gaJackpotHistoryItem", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaJackpotHistoryItem = exports('gaJackpotHistoryItem', (_dec = ccclass('gaJackpotHistoryItem'), _dec2 = property(Label), _dec3 = property(Node), _dec4 = property(Label), _dec5 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_gaHistoryItem) {
        _inheritsLoose(gaJackpotHistoryItem, _gaHistoryItem);

        function gaJackpotHistoryItem() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaHistoryItem.call.apply(_gaHistoryItem, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "account", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "overlay", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "time", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "winAmount", _descriptor4, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaJackpotHistoryItem.prototype;

        _proto.onSpawn = function onSpawn(data, index) {
          this.time.string = gaUtils.getTimeString(data.timeStamp.toString());
          this.account.string = gaUtils.formatUserName(data.displayName, 14);
          this.winAmount.string = gaUtils.formatMoney(data.jackpotAmount);

          if (this.overlay) {
            this.overlay.active = index % 2 !== 0;
          }
        };

        return gaJackpotHistoryItem;
      }(gaHistoryItem), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "account", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "overlay", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "time", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "winAmount", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaJoinGameData.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaRoundData.ts'], function (exports) {
  var _inheritsLoose, cclegacy, gaRoundData;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaRoundData = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "f07d9S37pZBY5Jo8UYCUXoa", "gaJoinGameData", undefined);

      var gaJoinGameData = exports('default', /*#__PURE__*/function (_gaRoundData) {
        _inheritsLoose(gaJoinGameData, _gaRoundData);

        function gaJoinGameData(data) {
          var _this;

          _this = _gaRoundData.call(this, data) || this;
          _this.gameChannel = undefined;
          _this.gameChannel = data.gCN;
          return _this;
        }

        return gaJoinGameData;
      }(gaRoundData));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaLoadingScene.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaLogger.ts', './gaTweenUtils.ts', './gaUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, ProgressBar, Node, UITransform, sys, profiler, director, game, Component, gaBaseConfig, logger, sequence, callFunc, fadeOut, gaUtils;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      ProgressBar = module.ProgressBar;
      Node = module.Node;
      UITransform = module.UITransform;
      sys = module.sys;
      profiler = module.profiler;
      director = module.director;
      game = module.game;
      Component = module.Component;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      sequence = module.sequence;
      callFunc = module.callFunc;
      fadeOut = module.fadeOut;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _class3;

      cclegacy._RF.push({}, "9784f3FeyBERKX4oP8qRLoT", "gaLoadingScene", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaLoadingScene = exports('default', (_dec = ccclass('gaLoadingScene'), _dec2 = property(ProgressBar), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaLoadingScene, _Component);

        function gaLoadingScene() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this; //#region ------------------------------------------------------------------ Declare variables

          _initializerDefineProperty(_this, "progressBar", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "iconProgressBar", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "rootMainScene", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "rootLoading", _descriptor4, _assertThisInitialized(_this));

          _this._progress = 0;
          _this._loadedPercentage = 0;
          _this._loadedMainScene = false;
          _this._progressBarTF = null;
          return _this;
        }

        var _proto = gaLoadingScene.prototype; //#endregion
        //#region  --------------------------------------------------------------- Component functions

        _proto.onLoad = function onLoad() {
          var _this2 = this;

          gaLoadingScene.instance = this;
          this.progressBar.progress = 0;
          this._progressBarTF = this.progressBar.node.getComponent(UITransform);

          if (sys.isNative) {
            this.rootLoading.active = false;
            this.enabled = false;
            this.scheduleOnce(function () {
              _this2.rootLoading.active = true;
              _this2.enabled = true;
            }, 0.25);
          }

          profiler.hideStats();
        };

        _proto.start = function start() {
          var _this3 = this;

          director.preloadScene(gaBaseConfig.mainScene, function (completedCount, totalCount) {
            _this3._loadedPercentage = completedCount / totalCount;
          }, function () {
            _this3._loadedPercentage = 1;
          });
        };

        _proto.lateUpdate = function lateUpdate() {
          if (this._loadedMainScene) {
            return;
          }

          var delta = this._loadedPercentage - this.progressBar.progress;
          delta = gaUtils.clamp(delta, 0.001, 0.01);

          if (delta > 0) {
            this._progress += delta;
            this.progressBar.progress = gaUtils.clamp(this._progress, this.progressBar.progress, 1);

            if (this.iconProgressBar) {
              this.iconProgressBar.setPosition(this.progressBar.progress * this._progressBarTF.width, this.iconProgressBar.position.y);
            }
          }

          if (this.progressBar.progress >= 0.98) {
            this._loadMainScene();
          }
        };

        _proto.onDestroy = function onDestroy() {
          gaLoadingScene.instance = null;
        } //#endregion
        //#region  ------------------------------------------------------------------ public functions
        ;

        _proto.hide = function hide() {
          var _this4 = this;

          logger.log("Hide Loading Scene");
          this.rootLoading.runAction(sequence(fadeOut(0.5), callFunc(function () {
            _this4.rootLoading.destroy();

            _this4.destroy();
          })));
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto._loadMainScene = function _loadMainScene() {
          var _this5 = this;

          if (this._loadedMainScene) {
            return;
          }

          this._loadedMainScene = true;
          game.addPersistRootNode(this.node);
          director.loadScene(gaBaseConfig.mainScene, function (err, scene) {
            game.removePersistRootNode(_this5.node);
            if (err) return;
            var canvas = scene.getChildByName('Canvas');
            var mainRoot = canvas.getChildByName('root');
            mainRoot.setParent(_this5.rootMainScene);
            canvas.destroy();
          });
        } //#endregion
        ;

        return gaLoadingScene;
      }(Component), _class3.instance = null, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "progressBar", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "iconProgressBar", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "rootMainScene", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "rootLoading", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaLocalize.ts", ['cc'], function (exports) {
  var cclegacy, _decorator;

  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }],
    execute: function () {
      var _dec, _class, _class2;

      cclegacy._RF.push({}, "f585dcu4ONGSY1+S0q/2KR6", "gaLocalize", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaLocalize = exports('default', (_dec = ccclass('gaLocalize'), _dec(_class = (_class2 = /*#__PURE__*/function () {
        function gaLocalize() {}

        var _proto = gaLocalize.prototype;

        _proto.initLocalizeConfig = function initLocalizeConfig(jsonLocalize) {
          var localize = jsonLocalize;

          if (!localize) {
            return;
          }

          for (var key in localize) {
            gaLocalize.instance[key] = localize[key];
          }
        };

        _proto.destroy = function destroy() {
          gaLocalize.instance = null;
        };

        return gaLocalize;
      }(), _class2.instance = null, _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaLocalStorage.ts", ['cc', './gaBaseConfig.ts', './gaLogger.ts'], function (exports) {
  var cclegacy, gaBaseConfig, logger;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      logger = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "742caCPjaxJKq9j10N/QU6l", "gaLocalStorage", undefined);

      var gaLocalStorage = exports('default', /*#__PURE__*/function () {
        function gaLocalStorage() {
          //#region ------------------------------------------------------------------ Declare variables
          this.KEY_LAST_ROUND = "LAST_ROUND";
          this.KEY_BET_DENOM = "BET_DENOM";
          this.KEY_TUTORIAL = "TUTORIAL";
          this.KEY_MODE_TURBO = "MODE_TURBO";
          this.KEY_LAST_CHIP = "LAST_CHIP";
          this._data = null;
        }

        var _proto = gaLocalStorage.prototype; //#endregion
        //#region  ------------------------------------------------------------------ public functions

        _proto.getLastResults = function getLastResults() {
          return this.get(this.KEY_LAST_ROUND) || [];
        };

        _proto.saveLastResult = function saveLastResult(result) {
          var results = this.getLastResults() || [];
          results.push(result);
          if (results.length > 5) results.shift();
          this.save(this.KEY_LAST_ROUND, results);
        };

        _proto.saveModeTurbo = function saveModeTurbo(isOn) {
          this.save(this.KEY_MODE_TURBO, isOn);
        };

        _proto.getModeTurbo = function getModeTurbo() {
          return this.get(this.KEY_MODE_TURBO);
        };

        _proto.saveResults = function saveResults(results) {
          this.save(this.KEY_LAST_ROUND, results);
        };

        _proto.getBetDenom = function getBetDenom() {
          return this.get(this.KEY_BET_DENOM);
        };

        _proto.saveBetDenom = function saveBetDenom(denom) {
          this.save(this.KEY_BET_DENOM, denom);
        };

        _proto.getTutorialEnable = function getTutorialEnable() {
          var data = this.get(this.KEY_TUTORIAL);

          if (data && data.isPlayed) {
            return false;
          }

          return true;
        };

        _proto.playedTutorial = function playedTutorial() {
          this.save(this.KEY_TUTORIAL, {
            isPlayed: true
          });
        };

        _proto.getLastChip = function getLastChip() {
          return this.get(this.KEY_LAST_CHIP);
        };

        _proto.saveLastChip = function saveLastChip(chip) {
          this.save(this.KEY_LAST_CHIP, chip);
        };

        _proto.destroy = function destroy() {
          gaLocalStorage.instance = null;
        };

        _proto.save = function save(key, data) {
          this._initUserData();

          try {
            this._data[key] = data;
            var stringData = JSON.stringify(this._data);
            cc.sys.localStorage.setItem(this._getUserKey(), stringData);
          } catch (error) {
            logger.error('gaLocalStorage save error: ', error);
          }
        };

        _proto.get = function get(key) {
          this._initUserData();

          return this._data[key];
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto._initUserData = function _initUserData() {
          if (!this._data) {
            var localString = cc.sys.localStorage.getItem(this._getUserKey());

            if (localString) {
              try {
                this._data = JSON.parse(localString);
              } catch (error) {}
            }
          }

          if (this._data == null) {
            this._data = {};
          }
        };

        _proto._getUserKey = function _getUserKey() {
          return "arcade_game_" + gaBaseConfig.gameId;
        } //#endregion
        ;

        return gaLocalStorage;
      }());
      gaLocalStorage.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaLogger.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _createClass, cclegacy;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "8dd064vMvpLoIKcxarA7O//", "gaLogger", undefined);

      var gaLogger = /*#__PURE__*/function () {
        function gaLogger() {
          this._enable = true;
          this._currentLogger = null;
          this.log = null;
          this.warn = null;
          this.error = null;
        }

        var _proto = gaLogger.prototype;

        _proto.setLoggers = function setLoggers(loggers) {
          if (loggers) {
            this._currentLogger = loggers;
            this.log = loggers.log || loggers.debug;
            this.warn = loggers.warn;
            this.error = loggers.error;
          } else {
            this.log = function () {};

            this.warn = function () {};

            this.error = function () {};
          }
        };

        _createClass(gaLogger, [{
          key: "enable",
          get: function get() {
            return this._enable;
          },
          set: function set(v) {
            this._enable = v;

            if (this._enable) {
              this.setLoggers(this._currentLogger);
            } else {
              this.setLoggers(null);
            }
          }
        }]);

        return gaLogger;
      }();

      var logger = exports('default', new gaLogger());
      logger.setLoggers(cc);

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaMainController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts', './gaBaseConfig.ts', './gaEventsCode.ts', './gaGameText.ts', './gaLoadingScene.ts', './gaGameNetwork.ts', './gaLogger.ts', './gaDataStore.ts', './gaLocalStorage.ts', './gaLocalize.ts', './gaMainStateMachine.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, JsonAsset, game, Game, gaComponent, gaBaseConfig, gaEventsCode, gaGameText, gaLoadingScene, gaGameNetwork, logger, gaDataStore, gaLocalStorage, gaLocalize, gaMainStateMachine;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      JsonAsset = module.JsonAsset;
      game = module.game;
      Game = module.Game;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaGameText = module.gaGameText;
    }, function (module) {
      gaLoadingScene = module.default;
    }, function (module) {
      gaGameNetwork = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaLocalStorage = module.default;
    }, function (module) {
      gaLocalize = module.default;
    }, function (module) {
      gaMainStateMachine = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "8faf8L4cXZPjJ7wJBksbVSd", "gaMainController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaMainController = exports('default', (_dec = ccclass('gaMainController'), _dec2 = property(JsonAsset), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaMainController, _gaComponent);

        function gaMainController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "fileVersion", _descriptor, _assertThisInitialized(_this));

          _this.gameNetwork = null;
          _this.promiseBetting = null;
          _this.isForceOut = false;
          _this.isCleanned = false;
          return _this;
        }

        var _proto = gaMainController.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          var version = this.fileVersion.json['version'];
          gaBaseConfig.gameVersion = version;
          gaDataStore.instance.initialize();
        };

        _proto.start = function start() {
          this.gameNetwork = this.createGameNetwork();
          this.gameNetwork.authenticate().then(this.onAuthenSuccess.bind(this))["catch"](this.onAuthenFail.bind(this));
        };

        _proto.onDestroy = function onDestroy() {
          _gaComponent.prototype.onDestroy.call(this);

          this._cleanUp();
        };

        _proto.createGameNetwork = function createGameNetwork() {
          logger.error("Please implement createGameNetwork method");
          return new gaGameNetwork();
        };

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.ACTION.BET, this.requestBet);
          this.register(gaEventsCode.ACTION.REFRESH_PAYOUT, this.requestRefreshPayout);
          this.register(gaEventsCode.ACTION.LEAVE_GAME, this.leaveGame);
          this.register(gaEventsCode.ACTION.CLEAR_USER_BETTING, this.clearUserBetting);
          this.register(gaEventsCode.ACTION.GET_USER_ACTIVE, this.getUserActive);
          this.register(gaEventsCode.BET.NOT_ENOUGH_MONEY, this.onNotEnoughMoney);
          this.register(gaEventsCode.BET.REACH_MAX_BET, this.onReachMaxBet);
          this.register(gaEventsCode.BET.CHANGE_BET_VALUE, this.onChangeBetValue);
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_OPEN, this.onWsOpen);
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_CLOSE, this.onWsClose);
          this.register(gaEventsCode.NETWORK.CANNOT_AUTHEN, this.onAuthenFail);
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_RECONNECT, this.onReconnect);
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_FORCE_DISCONNECT, this.onForceDisconnect);
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_DISCONNECT, this.onDisconnect);
          this.register(gaEventsCode.NETWORK.WEB_SOCKET_TEMP_DISCONNECT, this.onDisconnect);
          this.register(gaEventsCode.NETWORK.BACKEND_ERROR, this.onBackendError);
          this.register(gaEventsCode.NETWORK.PROMOTION_ERROR, this.onPromotionError);
          this.register(gaEventsCode.NETWORK.WALLET_ERROR, this.onWalletError);
          this.register(gaEventsCode.NETWORK.NORMAL, this.onNetworkNormal);
          this.register(gaEventsCode.DATA.EMPTY, this.onDataEmpty);
          this.register(gaEventsCode.WALLET.UPDATE_WALLET, this.onUpdateWallet);
          game.on(Game.EVENT_SHOW, this.onShowGame, this);
          game.on(Game.EVENT_HIDE, this.onHideGame, this);
        };

        _proto.removeEvents = function removeEvents() {
          _gaComponent.prototype.removeEvents.call(this);

          game.off(Game.EVENT_SHOW, this.onShowGame);
          game.off(Game.EVENT_HIDE, this.onHideGame);
        };

        _proto.onShowGame = function onShowGame() {
          this.emit(gaEventsCode.COMMON.GAME_SHOW);
        };

        _proto.onHideGame = function onHideGame() {
          this.emit(gaEventsCode.COMMON.GAME_HIDE);
        };

        _proto.leaveGame = function leaveGame() {
          this.gameNetwork.leaveGame();
        };

        _proto.clearUserBetting = function clearUserBetting() {
          if (this.promiseBetting) {
            this.promiseBetting.cancel();
            this.promiseBetting = null;
          }
        };

        _proto.requestBet = function requestBet() {
          var _this2 = this;

          this.clearUserBetting();
          this.promiseBetting = this.gameNetwork.bet();
          this.promiseBetting.then(function (result) {
            gaDataStore.instance.userInfo.setPending(result.totalWinAmount);

            _this2.emit(gaEventsCode.JACKPOT.PAUSE_JACKPOT);

            _this2.emit(gaEventsCode.DATA.RESULT_RECEIVED, result);
          })["catch"](function (err) {
            logger.error("Request play failed", err);

            _this2.emit(gaEventsCode.DATA.RESULT_RECEIVED, null, err);
          });
        };

        _proto.requestRefreshPayout = function requestRefreshPayout(data) {
          var _this3 = this;

          this.gameNetwork.refreshPayout(data).then(function (payout) {
            _this3.emit(gaEventsCode.DATA.PAYOUT_RECEIVED, payout);
          })["catch"](function (err) {
            logger.error("Refresh payout failed", err);

            _this3.emit(gaEventsCode.DATA.PAYOUT_RECEIVED, null, err);
          });
        };

        _proto.getUserActive = function getUserActive() {
          var _this4 = this;

          this.gameNetwork.getUserActive().then(function (users) {
            _this4.emit(gaEventsCode.VIEW.SET_USER_ONLINE, users);
          });
        };

        _proto.onInitGame = function onInitGame() {
          logger.warn('onInitGame');
          this.emit(gaEventsCode.COMMON.INITIALIZE_GAME);
          gaMainStateMachine.instance.initialize();
          var showTutorial = gaLocalStorage.instance.getTutorialEnable();

          if (showTutorial) {
            this.emit(gaEventsCode.POPUP.SHOW_TUTORIAL);
          }
        };

        _proto._cleanUp = function _cleanUp() {
          if (this.isCleanned) return;
          this.isCleanned = true;
          this.removeEvents();
          this.gameNetwork && this.gameNetwork.closeAndCleanUp();
          gaDataStore.instance.cleanUp();
        };

        _proto.onWsOpen = function onWsOpen() {
          var _this5 = this;

          this.gameNetwork.joinGame().then(function () {
            return _this5.onInitGame();
          })["catch"](this.onJoinGameFailed.bind(this))["finally"](function () {
            return _this5.hideLoadingScene();
          });
        };

        _proto.onWsClose = function onWsClose(data) {
          var _this6 = this;

          var message = gaLocalize.instance.DISCONNECT;

          var onConfirm = function onConfirm() {
            return _this6.gameNetwork.leaveGame();
          };

          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig.instance.POPUP_PROMPT.SOCKET_DISCONNECT
          });
        };

        _proto.onJoinGameFailed = function onJoinGameFailed(err) {
          var _this7 = this;

          logger.error("Join Game Failed", err);
          var message = gaLocalize.instance.AUTHEN_FAILED;

          var onConfirm = function onConfirm() {
            return _this7.gameNetwork.leaveGame();
          };

          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig.instance.POPUP_PROMPT.ERROR_NETWORK
          });
          this.gameNetwork.closeAndCleanUp();
          this.hideLoadingScene();
        };

        _proto.onReconnect = function onReconnect() {
          var _this8 = this;

          if (!this.isForceOut) {
            this.gameNetwork.joinGame().then(function () {
              _this8.hideLoadingScene();
            })["catch"](this.onJoinGameFailed.bind(this))["finally"](function () {});
          }
        };

        _proto.onDisconnect = function onDisconnect() {
          var _this9 = this;

          var message = gaLocalize.instance.DISCONNECT;

          var onConfirm = function onConfirm() {
            return _this9.gameNetwork.leaveGame();
          };

          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig.instance.POPUP_PROMPT.SOCKET_DISCONNECT
          });
        };

        _proto.onForceDisconnect = function onForceDisconnect(message) {
          var _this10 = this;

          this.isForceOut = true;

          this._cleanUp();

          if (message) {
            var onConfirm = function onConfirm() {
              return _this10.gameNetwork.backToLogin();
            };

            this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
              message: message,
              onConfirm: onConfirm,
              type: gaBaseConfig.instance.POPUP_PROMPT.ERROR_NETWORK
            });
          }
        };

        _proto.onBackendError = function onBackendError(data) {
          var _this11 = this;

          logger.error("Backend error", data.data);
          var message = gaGameText.getErrorMessage(data.code);

          if (data.forceDie) {
            this.isForceOut = true;

            this._cleanUp();

            var onConfirm = function onConfirm() {
              return _this11.gameNetwork.leaveGame();
            };

            this.hideLoadingScene();
            this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
              message: message,
              onConfirm: onConfirm,
              type: gaBaseConfig.instance.POPUP_PROMPT.ERROR_NETWORK
            });
          }
        };

        _proto.onPromotionError = function onPromotionError(data) {
          var _this12 = this;

          logger.error("Promotion error", data.data);
          var message = gaGameText.getErrorMessage(data.code);

          var onConfirm = function onConfirm() {
            return _this12.gameNetwork.refresh();
          };

          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
          });
        };

        _proto.onWalletError = function onWalletError(data) {
          var _this13 = this;

          logger.error("Wallet error", data.data);
          var message = gaGameText.getErrorMessage(data.code);

          var onConfirm = function onConfirm() {
            return _this13.gameNetwork.refresh();
          };

          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
          });
        };

        _proto.onNetworkNormal = function onNetworkNormal() {};

        _proto.onDataEmpty = function onDataEmpty() {
          var message = gaLocalize.instance.EMPTY_LEADER_BOARD;
          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            type: gaBaseConfig.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
          });
        };

        _proto.onUpdateWallet = function onUpdateWallet() {
          this.emit(gaEventsCode.USER.UPDATE_DATA);
        };

        _proto.onAuthenSuccess = function onAuthenSuccess() {};

        _proto.onAuthenFail = function onAuthenFail(err) {
          var _this14 = this;

          logger.error("Authentication failed", err);
          var message = gaLocalize.instance.AUTHEN_FAILED;

          var onConfirm = function onConfirm() {
            return _this14.gameNetwork.backToLogin();
          };

          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig.instance.POPUP_PROMPT.ERROR_NETWORK
          });
          this.hideLoadingScene();
        };

        _proto.onNotEnoughMoney = function onNotEnoughMoney(callback) {
          var message = gaLocalize.instance.NO_MONEY;
          this.emit(gaEventsCode.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: callback,
            type: gaBaseConfig.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
          });
          this.emit(gaEventsCode.USER.UPDATE_BALANCE);
        };

        _proto.onReachMaxBet = function onReachMaxBet() {
          var message = gaLocalize.instance.OVER_MAX_BET;
          this.emit(gaEventsCode.POPUP.SHOW_TOAST, {
            message: message,
            duration: 1
          });
        };

        _proto.onChangeBetValue = function onChangeBetValue(betValue) {
          gaDataStore.instance.betValue = betValue;
        };

        _proto.hideLoadingScene = function hideLoadingScene() {
          if (gaLoadingScene.instance) {
            gaLoadingScene.instance.hide();
          }
        };

        return gaMainController;
      }(gaComponent), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "fileVersion", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaMainStateMachine.ts", ['cc', './gaBaseConfig.ts', './gaEventsCode.ts', './gaStateMachine.ts'], function (exports) {
  var cclegacy, gaBaseConfig, gaEventsCode, Transition, gaStateMachine;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      Transition = module.Transition;
      gaStateMachine = module.gaStateMachine;
    }],
    execute: function () {
      cclegacy._RF.push({}, "90d1cfn7NpExLagTzmg4N2x", "gaMainStateMachine", undefined);

      var gaMainStateMachine = exports('default', /*#__PURE__*/function () {
        function gaMainStateMachine() {
          this._initialized = false;
          this._stateMachine = null;
          this._states = [];
        }

        var _proto = gaMainStateMachine.prototype; //#endregion
        //#region  ------------------------------------------------------------------ public functions

        _proto.addState = function addState(stateView) {
          this._states.push(stateView);
        };

        _proto.removeState = function removeState(stateView) {
          var index = this._states.indexOf(stateView);

          if (index > -1) {
            this._states.splice(index, 1);
          }
        };

        _proto.initialize = function initialize() {
          if (!this._initialized) {
            this._initialized = true;
            var stateViews = new Map();

            for (var index = 0; index < this._states.length; index++) {
              var element = this._states[index];
              stateViews.set(element.stateName, element);
            }

            this._stateMachine = this.initStateViews(stateViews);
            stateViews.forEach(function (state) {
              return state.initialize();
            });

            this._stateMachine.startLifeCycle();
          }
        };

        _proto.getCurrentState = function getCurrentState() {
          var state = this._stateMachine.getState();

          for (var index = 0; index < this._states.length; index++) {
            var element = this._states[index];

            if (state == element.stateName) {
              return element;
            }
          }

          return null;
        };

        _proto.getState = function getState(state) {
          for (var index = 0; index < this._states.length; index++) {
            var element = this._states[index];

            if (state == element.stateName) {
              return element;
            }
          }

          return null;
        };

        _proto.destroy = function destroy() {
          gaMainStateMachine.instance = null;

          if (this._stateMachine) {
            this._stateMachine.cleanUp();
          }
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto.initStateViews = function initStateViews(stateViews) {
          var STATE = gaBaseConfig.instance.GAME_STATE;
          var transitions = [Transition(STATE.INIT, gaEventsCode.STATE.START_BETTING, STATE.BETTING), Transition(STATE.BETTING, gaEventsCode.STATE.END_BETTING, STATE.PLAYING), Transition(STATE.PLAYING, gaEventsCode.STATE.FINISHED, STATE.RESULT), Transition(STATE.RESULT, gaEventsCode.STATE.NEW_ROUND, STATE.INIT)]; // initialize the state machine

          return new gaStateMachine(STATE.INIT, transitions, stateViews);
        } //#endregion
        ;

        return gaMainStateMachine;
      }()); //#region ------------------------------------------------------------------ Declare variables

      gaMainStateMachine.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaMapKeyConfig.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "e46e5GcMMtI55prbgvxjdFo", "gaMapKeyConfig", undefined);

      var Mapping = exports('default', {
        "gain": "winAmount",
        "bet": "betAmount",
        "jpAmt": "jackpotAmount",
        "gameNum": "gameNumber",
        "gn": "gameNumber",
        "timeMilli": "timeStamp",
        "dn": "displayName",
        "psId": "sessionId"
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/game-network.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      exports('default', void 0);

      var _cjsExports;

      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);

      loader.define(__cjsMetaURL, function (exports$1, require, module, __filename, __dirname) {
        // #region ORIGINAL CODE
        function a1_0x1adc(_0x1f9f73, _0x45e474) {
          var _0x4180d4 = a1_0x4180();

          return a1_0x1adc = function a1_0x1adc(_0x1adc85, _0xaeee2f) {
            _0x1adc85 = _0x1adc85 - 0x109;
            var _0x4258ce = _0x4180d4[_0x1adc85];
            return _0x4258ce;
          }, a1_0x1adc(_0x1f9f73, _0x45e474);
        }

        function a1_0x4180() {
          var _0x21027a = ['wallet-updated', 'generateId', 'user-logged-out:\x20%j', 'currentLatencyIdx', 'maybeReconnectOnOpen', 'onCannotSendMessage', 'rememberUpgrade', 'receiveBuffer', '\x22%s\x22\x20works\x20-\x20aborting\x20\x22%s\x22', 'COMMAND_FAILED_RETRY', '_serverSocketVersion', 'encodePayloadAsArrayBuffer', '#3300CC', 'MessageManager\x20-\x20_initSocket.', 'forEach', 'finishedReconstruction', 'second', 'walletVersion', 'waitForEvent', '_keyAB', 'managers', 'charAt', 'withCredentials', 'engine.io-client:socket', 'state-pushed', '#CC0000', 'delete', 'millisecond', 'constructor', 'hasPromotionWalletType', 'floor', '_duplicateEventId', '_startIntervalExtendToken', 'pingTimeoutTimer', '_subscribe', 'timestampParam', 'SocketManager\x20-\x20send\x20message:\x20counter=%s,\x20messageId=%s', '_events', 'pAmount', '#66CC33', '__importDefault', 'color:\x20', 'poor-connection', 'encodePayload', 'iterator', '&env=', 'removeWaiting', 'packetCreate', 'will\x20wait\x20%dms\x20before\x20reconnect\x20attempt', '#3333FF', 'ontimeout', 'STATUS_KILLED', 'getWalletTypes', 'option', 'transports', 'attempts', 'CommandManager', 'isNaN', 'updateSocketIds', 'fromCharCode', 'subEvents', 'requestsCount', 'reconnectionAttempts', 'EIO', 'pVer', '#6633FF', 'isView', 'engine', 'createTransport', 'forceNew', 'pause', 'year', 'reconstructor', '_commandIdFieldName', 'EVENT', 'buffers', 'setJitter', 'isFull', 'CommandManager\x20%s\x20-\x20clean\x20up', 'onDrain', 'threshold', 'Deferred', 'invalid\x20payload', 'DISCONNECT', 'parser\x20error:\x20', 'Accept', 'onopen', '\x20listeners\x20added.\x20Use\x20emitter.setMaxListeners()\x20to\x20increase\x20limit', '_buildPacket', 'SOCKET_REQUEST_EVENT_V4', 'sid', 'setRequestHeader', 'byteLength', 'charCodeAt', 'form', 'isArray', 'readyState', '3032792qPoQLa', 'upgrades', '#CC3366', 'uri', 'compress', '_validateDublicateCommandType', 'removeBlobs', 'val\x20is\x20not\x20a\x20non-empty\x20string\x20or\x20a\x20valid\x20number.\x20val=', 'num', 'arraybuffer', 'array', 'addEventListener', 'supports', 'createElement', 'application/octet-stream', 'unSubscribe', '#CC3333', 'pre-pause\x20writing\x20complete', 'xscheme', 'MessageManager\x20-\x20_handleSocketStatus\x20with\x20null\x20_socketManager', 'io\x20server\x20disconnect', '#99CC00', 'ondecoded', 'ping', 'load', 'availableAmount', 'beforeunload', 'socket\x20closed', 'reset', 'pagehide', 'colors', 'pong', 'autoConnect', 'keys', 'multi', 'CommandManager\x20%s\x20-\x20resendMessage:\x20messageId=%s,\x20resendMessageId=%s,\x20numberResend=%s,\x20resendCount=%s', 'cert', 'wrapFn', '#CC3300', '_close', 'polling\x20got\x20data\x20%s', '&sv=', '_getPacketType', 'MessageManager\x20-\x20sendMessage:\x20%s\x20-\x20%j', 'closing', 'drain', 'success', 'PONG_EVENT', 'reconnect_attempt', '_encrypt', 'TextEncoder', 'polling', 'flush', 'rawListeners', 'setMin', 'doClose', 'SocketManager\x20-\x20Add\x20message\x20to\x20queue:\x20%j', '_reconnect_attempt', '_countPingOverTime', 'Illegal\x20attachments', 'pop', 'getInstance', 'onHeartbeat', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', 'reconnect\x20attempt\x20error', 'iteratePacket', 'getMaxListeners', '#33CC33', 'eventNames', 'has', 'abort', 'error-pushed', 'hrs', 'probe', 'payload', 'maxConcurrentCommand', 'xhr\x20poll', 'setDisableHeaderCheck', 'parse', 'decodePayload', 'readAsDataURL', 'script', 'pingIntervalTimer', 'getBlob', 'doWrite', 'password', 'force-disconnect', 'Object', 'emit', 'ondisconnect', 'documentElement', 'SocketManager\x20-\x20emit\x20event\x20can-not-connect!', 'listLastLatency', 'defineProperty', '_commandHandlerMap', 'can-not-send-message', 'priorWebsocketSuccess', 'bind', 'reconnect_error', 'chat-event', 'ondata', 'shouldWaitForACK', 'removeEventListener', 'complete', 'probing\x20transport\x20\x22%s\x22', 'onreadystatechange', 'getPromise', 'now', 'blob', 'SocketManager\x20-\x20Clear\x20interval\x20sending\x20message!', '0000', '#CC00FF', 'packet', 'listeners', 'toUpperCase', 'off', 'prependOnceListener', 'timestampRequests', 'toLowerCase', 'socket-info', 'reactnative', 'ceil', '_handleReponseMessage', 'performing\x20disconnect\x20(%s)', 'paused', 'userId', 'onClose', 'backoff', 'shift', 'Invalid\x20continuation\x20byte', 'text/plain;charset=UTF-8', 'SOCKET_RESPONSE_EVENT_V5_2', 'usingBrowserWebSocket', '#FF6633', '#CC9900', 'startsWith', 'console', 'xhr', 'indexOf', 'eventId', 'changing\x20transport\x20and\x20sending\x20upgrade\x20packet', 'top', '_reconnectionAttempts', 'CommandManager\x20%s\x20-\x20COMMAND_FAILED_DUPLICATE.\x20Executing\x20type:\x20%j', 'XMLHttpServiceRest', 'passphrase', 'jitter', '#CC0099', '#FF3366', 'probe\x20error:\x20', 'ping-event', '#FF0099', 'once', 'write', 'Socket', 'body', 'upgrading', 'onlyBinaryUpgrades', 'serviceId', 'popup-disconnected-event', 'secure', 'concat', 'filterUpgrades', '_timeout', '#0066FF', 'decoded', 'onerror', 'CAN_NOT_CONNECT_EVENT', 'jsonp\x20poll\x20error', 'buffer', 'EventManager\x20-\x20connected.', 'maxRetry', '#CC0066', 'randomizationFactor', 'error', 'deconstructPacket', 'urlVerifyToken', 'encoded\x20%j\x20as\x20%s', 'https://', 'PlayerInfoStateManager', 'maxSize', 'SocketManager\x20status\x20KILLED,\x20not\x20init\x20new\x20connection!', 'prev', '#FF3333', '#FFCC33', '_ackPacket', 'socket\x20open', 'doPoll', 'enqueue', 'SocketManager\x20-\x20send-message-success:\x20%s', '#33CC99', 'sendPacket', 'event', '_unSubscribe', 'counter', 'onmessage', 'EventEmitter', 'isSuccess', 'writable', 'substring', 'socketio', 'emitting\x20event\x20%j', 'env', 'unregisterGame', 'version', 'join', 'base64', 'setAttribute', 'Lone\x20surrogate\x20U+', '957720ayhVYQ', 'packet\x20received\x20with\x20socket\x20readyState\x20\x22%s\x22', 'socketUrl', 'disconnected', 'encodeQueryData', 'eio_iframe_', 'apiUrl', 'wss', '#FF33FF', 'post', 'host', '#6633CC', 'getPrototypeOf', 'eid', 'JSONP\x20disabled', 'connect_timeout', 'isReactNative', 'enable', 'creating\x20transport\x20\x22%s\x22', 'onAck', '%c\x20', 'default', 'buildSocketUrlQueryParam', 'displayName', 'Decoder', '__initialize', 'packetBuffer', 'parentNode', '_stopIntervalExtendToken', 'io\x20client\x20disconnect', 'CONNECTED_EVENT', 'websocket\x20error', 'log', 'push', 'onNetworkStatus', 'wallet-service-id', '_messageIdInfosMap', '#CC3399', 'socket\x20error\x20%j', 'The\x20value\x20of\x20\x22defaultMaxListeners\x22\x20is\x20out\x20of\x20range.\x20It\x20must\x20be\x20a\x20non-negative\x20number.\x20Received\x20', 'Request', 'skipReconnect', 'diff', 'window', 'insertBefore', 'test', 'alive', 'NEW_MESSAGE_EVENT', 'avatar', 'SEND_MESSAGE_SUCCESS_EVENT', '#0033CC', 'setWalletType', 'maxLastLatency', '#33CCCC', 'minute', 'application/octet-stream;\x20charset=UTF-8', 'EventManager\x20-\x20newEvent:\x20%j', 'SockerManager\x20-\x20emit\x20event\x20can-not-connect!', 'length', '_socket', '#3366CC', 'getOwnPropertySymbols', 'setWalletBalance', 'walletTypes', 'exports', 'enablesXDR', 'sendMessage', '_latency', 'SocketManager\x20-\x20Init\x20new\x20connection!!!', 'MISMATCH_COMMAND_ID', 'decoder', 'Invalid\x20byte\x20index', 'connect_error', 'textarea', 'pollComplete', 'isDebugging', 'customEventMapping', 'pollXhr', '#3399CC', 'reconPack', 'MessageManager\x20-\x20Authen\x20token:\x20%s', 'all', 'undefined', 'onack', 'file', '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_', 'destroy', 'removeListener', 'BINARY_EVENT', 'types', 'newListener', 'table', '_initNewConnection', '_subscribeChannelList', 'Content-Type', 'sendChatMessage:\x20_socketManager\x20was\x20not\x20setup.', 'socket.io-client:manager', 'socket\x20closing\x20-\x20telling\x20transport\x20to\x20close', 'javascript:0', 'logFn', 'skips', '#3399FF', '8iYUZAa', 'agent', 'cleanup', '#CC00CC', 'milliseconds', 'transportOptions', '_eventsCount', 'ssid', 'main', 'pathNames', 'Content-type', 'pingInterval', 'setting\x20transport\x20%s', '/engine.io', 'setPing', 'fired', 'onpacket', 'Microsoft.XMLHTTP', 'messageId', 'apply', 'server\x20error', 'encodeBase64Packet', 'create', 'COMMAND_SEND_SUCCESSFULLY', 'POST', '#FF3300', 'BINARY_ACK', 'connect', 'hasPacket', 'reject', 'CommandManager\x20%s\x20-\x20COMMAND_FAILED_CONC_OVER_LIMIT.\x20current\x20:\x20%s,\x20maximum:\x20%s', 'socket', 'protocol-less\x20url\x20%s', 'iframeId', 'probe\x20transport\x20\x22%s\x22\x20failed\x20because\x20of\x20error:\x20%s', 'xhr\x20poll\x20error', 'getAvatar', 'response', 'setTransport', 'Encoder', 'init', 'decodePacket', 'SocketManager\x20-\x20force-disconnect\x20>>>\x20close\x20connect!', '#FF0033', 'isBuffer', 'ServiceRest', 'Login\x20fail.\x20Clean\x20up.', 'exists', 'amount', 'ciphers', 'slice', 'clearRemainingCommand', 'context', 'onError', '728658zABOpr', 'fromCodePoint', 'my\x20wallet\x20update:\x20%j', 'duration', 'flags', 'reconstructPacket', 'MessageManager', 'socket.io-client:socket', 'binary', 'query', 'uid', 'set', '[object\x20BlobConstructor]', '#FF0000', 'decodePayloadAsBinary', 'prevBufferLen', 'EventManager', 'sec', 'save', 'SocketManager\x20-\x20CAN_NOT_SEND_MESSAGE_EVENT\x20:\x20%s.', 'map', 'byteOffset', 'transport\x20error', 'socket.io-client:url', 'local', 'clearAll', '#66CC00', 'ACK', 'commandPayload', 'socket\x20receive:\x20type\x20\x22%s\x22,\x20data\x20\x22%s\x22', 'closed', '#0033FF', 'source', 'initSocket', 'product', 'onOpen', '#33CC66', 'isFullfill', 'EventManager\x20-\x20waitForEvent\x20was\x20timeout.\x20%s', 'poll', 'authority', 'split', '[object\x20FileConstructor]', '16566EOLsPS', 'getUserId', 'href', 'exec', 'strict', 'Connect\x20without\x20login\x20due\x20to\x20missing\x20serviceRest', 'hasOwnProperty', 'src', 'xhr\x20open\x20%s:\x20%s', 'isEmpty', 'url', 'executeCommand', 'add', 'target', '_reconnectionDelay', 'connecting', 'toJSON', 'Invalid\x20UTF-8\x20detected', 'isPromiseFullfill', 'SocketManager', 'pausing', 'forced\x20close', 'pong\x20-\x20latency:\x20%s,\x20avarage\x20latency:\x20%s', 'policyPort', 'pow', 'copy', 'CONNECTED', 'POOR_CONNECTION', 'starting\x20upgrade\x20probes', 'index', 'Duplicate', 'removeAllListeners', '#CC0033', 'https', 'UPDATE_TOKEN', 'close', 'substr', 'protocols', 'secs', 'type', 'STATUS_INIT', 'Queue', 'closeAndCleanUp', 'removeItem', 'nsp', 'path', 'can-not-connect', 'onevent', '_randomizationFactor', 'opts', 'toString', 'WebSocket', 'then', 'requestTimeout', 'reduce', 'message', 'names', 'absolute', 'connected', 'cleanUp', 'ackPacket', 'upgradeError', 'status', 'msec', 'count', 'reconnect', '_duplicateMessageId', 'Unhandled\x20error.', 'emitBuffered', 'unload', 'probe\x20error', 'pAmt', 'Queue\x20is\x20empty', 'message-pushed', 'supportsBinary', 'EXPECTED_EVENT_TIMEOUT', 'commandId', '#FF00CC', 'listener', 'bad\x20ack\x20%s', 'get', 'calling\x20ack\x20%s\x20with\x20%j', 'MISMATCH_DATA_VERSION', 'factor', 'socket\x20close\x20with\x20reason:\x20\x22%s\x22', 'update-token', 'entries', 'upgrade', 'registerOnce', 'onData', 'updateCounter', 'new\x20io\x20instance\x20for\x20%s', '_hmuid_', 'error-pushed\x20%j', 'server\x20disconnect\x20(%s)', '3837231SrLfdk', '*/*', '#0099CC', 'amd', 'async', '_reject', 'name', 'getElementsByTagName', 'DISCONNECTED_CONNECTION', 'defaultOption', '5ZDPtwx', 'localhost', 'connect\x20attempt\x20will\x20timeout\x20after\x20%d', 'SOCKET_REQUEST_EVENT_V5_2', '#CCCC00', 'Transport\x20not\x20open', 'prependListener', 'probe\x20transport\x20\x22%s\x22\x20failed', 'Authen\x20token\x20success:\x20%j', 'perMessageDeflate', 'callback', 'removeEvent', 'call', '_handleSocketStatus', 'TransportError', 'color', 'CAN_NOT_CONNECT', 'description', 'lib', '#0099FF', '_isSkipMapNewEvent', 'timeout', 'getDisplayName', 'getSSID', '\x20%c', 'isAbleSendingData', 'reconnection', 'hostname', '#CC6600', 'disconnected-connection', 'my\x20wallet\x20CANNOT\x20update\x20promotion\x20wallet.\x20current\x20version\x20[%s],\x20new\x20version\x20[%s],\x20wallet:\x20%j', 'EventManager\x20-\x20newEvent:\x20duplicate\x20eventId\x20%s', 'MaxListenersExceededWarning', 'includes', '#3300FF', 'games', 'dequeue', '_pendingSubscribeChannelList', 'transport\x20is\x20open\x20-\x20connecting', 'port', 'pre-pause\x20polling\x20complete', '_maxListeners', 'averageLatency', 'code', 'color:\x20inherit', '_resolve', 'onunload', 'ping\x20timeout', 'useColors', 'SockerManager\x20-\x20reconnect_error\x20in\x20', 'SOCKET_REQUEST_EVENT_V3', 'append', 'send-message-success', 'RoutingEvent', 'Connection\x20error', 'requests', 'close\x20(%s)', 'presence', 'sId', 'function', 'sendBuffer', 'pVersion', 'transport', 'forceJSONP', 'ownKeys', 'SockerManager\x20-\x20health-check\x20CONNECTED!', 'jsonp', 'device', 'wud-pAmt', 'setDisplayName', '_intervalExtendToken', 'POPUP_DISCONNECTED_EVENT', 'ipv6uri', 'hasMainWalletType', 'result', 'mismatch-command', 'process', '_eventManager', 'updateAllCounter', 'https:', 'transport\x20open\x20-\x20closing', 'logFnWarn', 'heartbeat', 'localStorage', 'round', 'websocket', 'registerEvent', 'reconnectionDelayMax', 'my\x20wallet\x20CANNOT\x20update\x20main\x20wallet.\x20current\x20version\x20[%s],\x20new\x20version\x20[%s],\x20wallet:\x20%j', 'CommandManager\x20%s\x20-\x20cannotSendMessage:\x20messageId=%s', 'forceBase64', 'xhr\x20post\x20error', '_routingEventHandler', 'removeWaitingQueue', 'removeAllEventListeners', 'encodePacket', 'instance', 'codePointAt', 'pingTimeout', 'decodeBase64Packet', 'wallet', 'storage', 'hashMap', 'SocketManager\x20-\x20chat-event:\x20%j', 'prototype', 'boolean', '_sendPacket', '_messageIdServiceIdMap', 'listenerCount', 'decoded\x20%s\x20as\x20%j', '_handleSocketEvent', 'object', '#9933FF', 'Queue\x20underflow', 'localAddress', 'reconnect_failed', 'CAN_NOT_SEND_MESSAGE_EVENT', 'opening\x20%s', 'q52', 'reconnect\x20failed', 'setToken', '/socket.io', 'transport\x20closed', 'date', '_callbacks', 'replace', '_encrypt_5_1', 'jsonp\x20polling\x20iframe\x20removal\x20error', '#FF3399', 'protocol', 'nsps', 'warn', '_encrypt_5_2', 'STATUS_ALIVE', 'http', 'network', 'accept-charset', 'mins', 'doLogin', 'ignoring\x20socket\x20cache\x20for\x20%s', 'state-updated', 'ERROR', 'forceNode', 'data', 'resendCount', '[UnexpectedJSONParseError]:\x20', 'match', '-1000px', 'addEventListeners', '_opt', '___eio', 'resolve', '_status', 'check', 'chat-emit', 'debug', '#33CC00', 'logFnError', 'pfx', '_placeholder', 'exTkn', 'setUserId', 'xdomain', 'socket.io-client', 'CommandManager\x20%s\x20-\x20sendMessage\x20messageId=%s,\x20commandId=%s', 'ids', 'renderer', 'parse\x20%s', 'token', 'decode', 'userAgent', 'MozWebSocket', '__esModule', 'onping', 'socket.io-parser', 'onHandshake', 'DEBUG', '#00CCFF', 'EventManager\x20-\x20clean\x20up.', 'reconnecting', '#00CC99', 'EventManager\x20-\x20newEvent:\x20data\x20is\x20null.', 'abcd', 'Transport', 'COMMAND_FAILED_CONC_OVER_LIMIT', 'xhr\x20data\x20%s', 'takeBinaryData', 'we\x20are\x20currently\x20polling\x20-\x20waiting\x20to\x20pause', '#FF33CC', 'writeBuffer', 'encoding', '_eventHandlerMap', 'encode', '3602430AbDPIw', 'parser\x20error', 'formatArgs', 'onShowPopupDisconnected', 'hour', '916755SPABKC', '_packetManager', '_registerSystemState', 'responseType', '_emitter', 'sendXhr', '_config', '#6600FF', 'svt', 'CommandManager\x20%s\x20-\x20COMMAND_FAILED_RETRY:\x20messageId=%s,\x20numberResend=%s', 'doOpen', 'attachments', 'min', '_initSocket', 'opening', 'uuid', '_executingCommandType', 'WebkitAppearance', 'onEvent', 'warned', 'onclose', 'b64', 'disconnect', 'binaryType', '_data', 'onreconnect', 'string', 'probe\x20transport\x20\x22%s\x22\x20pong', 'subs', 'packets', 'extraHeaders', 'hasXDR', 'onCannotConnect', 'Updated\x20token\x20must\x20not\x20empty.', 'Logger', 'formatters', 'removeChild', 'encoder', 'stringify', 'onLoad', 'getToken', 'promotion', '_ids', '#FFCC00', '_reconnect', '\x20ms', 'reconnect\x20success', 'emitAll', 'encodePayloadAsBlob', 'unshift', 'area', 'clear', 'updateToken', 'rejectUnauthorized', 'queueContents', 'token=', 'coerce', 'subscribe', 'onload', 'playerStateInfo', 'numberRetrySendingMessage', 'defaultMaxListeners', 'probe\x20transport\x20\x22%s\x22\x20opened', 'ack', '#FF00FF', 'COMMAND_FAILED_DUPLICATE', 'processPacketQueue', 'key', 'yrs', 'responseText', '[object\x20Array]', 'The\x20value\x20of\x20\x22n\x22\x20is\x20out\x20of\x20range.\x20It\x20must\x20be\x20a\x20non-negative\x20number.\x20Received\x20', 'GET', '38wAXIlX', '#0000FF', 'SocketManager\x20-\x20Pause\x20interval\x20sending\x20message!', 'encoding\x20packet\x20%j', 'acks', 'left', '#CCCC33', 'iframe', '#00CCCC', 'exception', 'onpagehide', 'parser', 'No\x20transports\x20available', 'removeSendingMessage', '_sId', 'years', 'readAsArrayBuffer', 'SocketManager\x20-\x20DISCONNECTED.', '#00CC33', 'CommandManager\x20%s\x20-\x20ack:\x20messageId=%s', '&ssid=', 'canBeDuplicated', 'onSuccess', '_cachedMessage', 'style', 'isBinary', '#FF9900', 'method', 'getWalletBalance', 'insert', 'SOCKET_REQUEST_EVENT_V5_1', 'unregisterEvent', 'open', 'TextDecoder', 'instances', '2.1.2', 'onPacket', 'sendChatMessage', 'onConnected', 'onNetworkWarning', 'from', 'appendChild', 'onpong', 'CONNECT', 'size', 'pWallet', 'player-can-not-connect', '_socketManager', '#FF0066', '#9900CC', 'max', 'registerGame', 'options', 'we\x20are\x20currently\x20writing\x20-\x20waiting\x20to\x20pause', 'reconnectionDelay', 'application/x-www-form-urlencoded', 'queue', 'attachEvent', 'getTime', 'hash', 'serviceRest', '.*?', 'msecs', 'getOwnPropertyNames', '://', 'Haven\x27t\x20init\x20socket\x20connection.\x20Please\x20update\x20config.', 'Ignore\x20due\x20to\x20config\x20is\x20exist.', 'days', 'onPong', '_reconnection', 'onCannotAuthen', 'json', 'got\x20binary\x20data\x20when\x20not\x20reconstructing\x20a\x20packet', 'GameNetwork', 'random', 'engine.io-client:polling', '_waitForEventTimeOutId', 'splice', '\x22encode\x20error\x22', 'number', 'lastPing', 'engine.io-client:websocket', 'addListener', '#0000CC', 'send', 'curr', 'Queue\x20overflow', 'setMax', 'websocket\x20closed\x20before\x20onclose\x20event', 'namespace', 'PacketManager', 'relative', '#CC6633', 'enabled', '#0066CC'];

          a1_0x4180 = function a1_0x4180() {
            return _0x21027a;
          };

          return a1_0x4180();
        }

        (function (_0x3c7c12, _0x215342) {
          var _0x62f52 = a1_0x1adc,
              _0x37522c = _0x3c7c12();

          while (!![]) {
            try {
              var _0x48a517 = parseInt(_0x62f52(0x30e)) / 0x1 * (parseInt(_0x62f52(0x196)) / 0x2) + parseInt(_0x62f52(0x2c5)) / 0x3 + parseInt(_0x62f52(0x49f)) / 0x4 + parseInt(_0x62f52(0x1ff)) / 0x5 * (-parseInt(_0x62f52(0x16b)) / 0x6) + -parseInt(_0x62f52(0x3ce)) / 0x7 + -parseInt(_0x62f52(0x135)) / 0x8 * (parseInt(_0x62f52(0x1f5)) / 0x9) + parseInt(_0x62f52(0x2c0)) / 0xa;

              if (_0x48a517 === _0x215342) break;else _0x37522c['push'](_0x37522c['shift']());
            } catch (_0x18a200) {
              _0x37522c['push'](_0x37522c['shift']());
            }
          }
        })(a1_0x4180, 0x3a56a), !function (_0x6e8636, _0x92d62c) {
          var _0x20e42a = a1_0x1adc;
          _0x20e42a(0x26e) == typeof exports$1 && _0x20e42a(0x26e) == typeof module ? module['exports'] = _0x92d62c() : _0x20e42a(0x23a) == typeof define && define[_0x20e42a(0x1f8)] ? define(_0x20e42a(0x357), [], _0x92d62c) : 'object' == typeof exports$1 ? exports$1['GameNetwork'] = _0x92d62c() : _0x6e8636[_0x20e42a(0x357)] = _0x92d62c();
        }(self, function () {
          return _0x46691d = {
            0x1542: function _(_0x373e87, _0x59c8c7, _0xbca1f2) {
              var _0x22a681 = a1_0x1adc;

              var _0x6e3e07 = this && this['__importDefault'] || function (_0x20d1ac) {
                var _0xdfea1b = a1_0x1adc;
                return _0x20d1ac && _0x20d1ac[_0xdfea1b(0x2ab)] ? _0x20d1ac : {
                  'default': _0x20d1ac
                };
              };

              Object['defineProperty'](_0x59c8c7, _0x22a681(0x2ab), {
                'value': !0x0
              }), _0x59c8c7['Duplicate'] = void 0x0;

              var _0x20808b = _0xbca1f2(0x13dc),
                  _0x2f55c7 = _0x6e3e07(_0xbca1f2(0x28a)),
                  _0x25f47f = function () {
                var _0xf4504 = _0x22a681;

                function _0x4ca02d(_0x2d486e) {
                  var _0x1e6d6e = a1_0x1adc;
                  void 0x0 === _0x2d486e && (_0x2d486e = 0x3e8), this[_0x1e6d6e(0x482)] = 0x3e8, this[_0x1e6d6e(0x482)] = _0x2d486e, this[_0x1e6d6e(0x346)] = new _0x20808b['Queue'](_0x2d486e), this[_0x1e6d6e(0x265)] = new _0x2f55c7['default']();
                }

                return _0x4ca02d['prototype'][_0xf4504(0x32b)] = function (_0x23ac70) {
                  var _0x40f4e9 = _0xf4504;
                  this[_0x40f4e9(0x346)][_0x40f4e9(0x33a)]() >= this[_0x40f4e9(0x482)] && this[_0x40f4e9(0x265)][_0x40f4e9(0x387)](this[_0x40f4e9(0x346)][_0x40f4e9(0x223)]()), this['queue'][_0x40f4e9(0x48a)](_0x23ac70), this[_0x40f4e9(0x265)][_0x40f4e9(0x176)](_0x23ac70, !0x0);
                }, _0x4ca02d[_0xf4504(0x267)][_0xf4504(0x164)] = function (_0x1a85a2) {
                  var _0x326f1b = _0xf4504;
                  return this[_0x326f1b(0x265)][_0x326f1b(0x413)](_0x1a85a2);
                }, _0x4ca02d['prototype'][_0xf4504(0x184)] = function () {
                  var _0x5401c3 = _0xf4504;
                  this[_0x5401c3(0x346)][_0x5401c3(0x2f8)](), this[_0x5401c3(0x265)][_0x5401c3(0x2f8)]();
                }, _0x4ca02d;
              }();

              _0x59c8c7[_0x22a681(0x1b4)] = _0x25f47f;
            },
            0x13dc: function _(_0xb822a5, _0x3fa4cc) {
              var _0x8eb0e9 = a1_0x1adc;
              Object[_0x8eb0e9(0x42b)](_0x3fa4cc, '__esModule', {
                'value': !0x0
              }), _0x3fa4cc['Queue'] = void 0x0;

              var _0x26faf9 = function () {
                var _0x3d5084 = _0x8eb0e9;

                function _0x5287fe(_0x5c1710) {
                  var _0x3fb2a8 = a1_0x1adc;
                  this['maxSize'] = _0x5c1710 > 0x0 ? _0x5c1710 : 0xa, this[_0x3fb2a8(0x109)] = 0x0, this[_0x3fb2a8(0x346)] = new Array(this['maxSize']);
                }

                return _0x5287fe[_0x3d5084(0x267)][_0x3d5084(0x19f)] = function () {
                  var _0x564ee7 = _0x3d5084;
                  return 0x0 === this[_0x564ee7(0x109)];
                }, _0x5287fe[_0x3d5084(0x267)][_0x3d5084(0x3ba)] = function () {
                  var _0x404205 = _0x3d5084;
                  return this[_0x404205(0x109)] === this[_0x404205(0x482)];
                }, _0x5287fe[_0x3d5084(0x267)][_0x3d5084(0x48a)] = function (_0x3f358b) {
                  var _0x505d0c = _0x3d5084;
                  if (this[_0x505d0c(0x3ba)]()) throw new Error(_0x505d0c(0x364));
                  this[_0x505d0c(0x346)][this[_0x505d0c(0x109)]++] = _0x3f358b;
                }, _0x5287fe[_0x3d5084(0x267)]['dequeue'] = function () {
                  var _0x2bdb91 = _0x3d5084;
                  if (this[_0x2bdb91(0x19f)]()) throw new Error(_0x2bdb91(0x270));

                  for (var _0x1bad9c = this[_0x2bdb91(0x346)][0x0], _0x38d269 = 0x0; _0x38d269 < this[_0x2bdb91(0x109)]; _0x38d269++) this[_0x2bdb91(0x346)][_0x38d269] = this[_0x2bdb91(0x346)][_0x38d269 + 0x1];

                  return this[_0x2bdb91(0x109)]--, _0x1bad9c;
                }, _0x5287fe['prototype']['peek'] = function () {
                  var _0x2d03ec = _0x3d5084;
                  if (this[_0x2d03ec(0x19f)]()) throw new Error(_0x2d03ec(0x1de));
                  return this[_0x2d03ec(0x346)][0x0];
                }, _0x5287fe[_0x3d5084(0x267)][_0x3d5084(0x2f8)] = function () {
                  var _0x25c963 = _0x3d5084;
                  this[_0x25c963(0x109)] = 0x0, this[_0x25c963(0x346)] = new Array(this[_0x25c963(0x482)]);
                }, _0x5287fe[_0x3d5084(0x267)][_0x3d5084(0x33a)] = function () {
                  var _0x4dbcd7 = _0x3d5084;
                  return this[_0x4dbcd7(0x109)];
                }, _0x5287fe[_0x3d5084(0x267)][_0x3d5084(0x2fb)] = function () {
                  for (var _0x35b824 = 0x0; _0x35b824 < this['length']; ++_0x35b824);
                }, _0x5287fe;
              }();

              _0x3fa4cc[_0x8eb0e9(0x1bf)] = _0x26faf9;
            },
            0xb46: function _(_0x4b8573, _0x2f1059) {
              var _0x42560c = a1_0x1adc;
              Object[_0x42560c(0x42b)](_0x2f1059, '__esModule', {
                'value': !0x0
              }), _0x2f1059[_0x42560c(0x3be)] = void 0x0;

              var _0x3b9c7c = function () {
                var _0x2dea59 = _0x42560c;

                function _0x3135f5() {
                  var _0x2e1d2a = a1_0x1adc,
                      _0x19d0cd = this;

                  this[_0x2e1d2a(0x22c)] = function () {}, this['_reject'] = function () {}, this['isFullfill'] = !0x1, this['promise'] = new Promise(function (_0xcb3955, _0x2d88ac) {
                    var _0x51cd30 = _0x2e1d2a;
                    _0x19d0cd[_0x51cd30(0x22c)] = _0xcb3955, _0x19d0cd[_0x51cd30(0x1fa)] = _0x2d88ac;
                  });
                }

                return _0x3135f5[_0x2dea59(0x267)]['resolve'] = function (_0x5eb88d) {
                  var _0x364758 = _0x2dea59;
                  this[_0x364758(0x22c)](_0x5eb88d), this[_0x364758(0x190)] = !0x0;
                }, _0x3135f5[_0x2dea59(0x267)][_0x2dea59(0x152)] = function (_0x3386bc, _0x1f8ff1) {
                  var _0x1b8297 = _0x2dea59;
                  this[_0x1b8297(0x1fa)](_0x3386bc, _0x1f8ff1), this[_0x1b8297(0x190)] = !0x0;
                }, _0x3135f5[_0x2dea59(0x267)]['getPromise'] = function () {
                  return this['promise'];
                }, _0x3135f5['prototype'][_0x2dea59(0x1a8)] = function () {
                  var _0xbcc54b = _0x2dea59;
                  return this[_0xbcc54b(0x190)];
                }, _0x3135f5;
              }();

              _0x2f1059[_0x42560c(0x3be)] = _0x3b9c7c;
            },
            0x370: function _(_0x139a95, _0x1ea224, _0x4e622d) {
              var _0xca185e = a1_0x1adc;

              var _0x1f3b25 = this && this[_0xca185e(0x395)] || function (_0x47d77b) {
                return _0x47d77b && _0x47d77b['__esModule'] ? _0x47d77b : {
                  'default': _0x47d77b
                };
              };

              Object[_0xca185e(0x42b)](_0x1ea224, _0xca185e(0x2ab), {
                'value': !0x0
              }), _0x1ea224['ServiceRest'] = _0x1ea224['SocketManager'] = _0x1ea224[_0xca185e(0x17b)] = _0x1ea224[_0xca185e(0x3a5)] = _0x1ea224['MessageManager'] = _0x1ea224[_0xca185e(0x481)] = _0x1ea224[_0xca185e(0x3be)] = _0x1ea224['network'] = _0x1ea224[_0xca185e(0x211)] = void 0x0;

              var _0x23505f = _0x1f3b25(_0x4e622d(0x28a)),
                  _0x2a698a = _0x4e622d(0x1a99),
                  _0x2bfed1 = _0x4e622d(0x758),
                  _0x8b1157 = _0x1f3b25(_0x4e622d(0x7e9)),
                  _0xf8c102 = _0x4e622d(0xb46);

              Object[_0xca185e(0x42b)](_0x1ea224, 'Deferred', {
                'enumerable': !0x0,
                'get': function get() {
                  return _0xf8c102['Deferred'];
                }
              });

              var _0xcee7b7 = _0x4e622d(0x1531);

              Object[_0xca185e(0x42b)](_0x1ea224, _0xca185e(0x481), {
                'enumerable': !0x0,
                'get': function get() {
                  var _0x4a14e8 = _0xca185e;
                  return _0xcee7b7[_0x4a14e8(0x481)];
                }
              });

              var _0x188b26 = _0x4e622d(0x19be);

              Object[_0xca185e(0x42b)](_0x1ea224, _0xca185e(0x171), {
                'enumerable': !0x0,
                'get': function get() {
                  return _0x188b26['MessageManager'];
                }
              });

              var _0x1a319d = _0x4e622d(0x4f0);

              Object[_0xca185e(0x42b)](_0x1ea224, _0xca185e(0x3a5), {
                'enumerable': !0x0,
                'get': function get() {
                  var _0xdad524 = _0xca185e;
                  return _0x1a319d[_0xdad524(0x3a5)];
                }
              });

              var _0x196fcb = _0x4e622d(0x6);

              Object['defineProperty'](_0x1ea224, _0xca185e(0x17b), {
                'enumerable': !0x0,
                'get': function get() {
                  var _0x24b726 = _0xca185e;
                  return _0x196fcb[_0x24b726(0x17b)];
                }
              });

              var _0x1b0325 = _0x4e622d(0x1d8f);

              Object[_0xca185e(0x42b)](_0x1ea224, 'SocketManager', {
                'enumerable': !0x0,
                'get': function get() {
                  var _0x227ac7 = _0xca185e;
                  return _0x1b0325[_0x227ac7(0x1a9)];
                }
              });

              var _0x1799e9 = _0x4e622d(0x1518);

              Object[_0xca185e(0x42b)](_0x1ea224, _0xca185e(0x162), {
                'enumerable': !0x0,
                'get': function get() {
                  var _0x410369 = _0xca185e;
                  return _0x1799e9[_0x410369(0x162)];
                }
              }), _0x1ea224['lib'] = {
                'hashmap': _0x23505f['default'],
                'io': _0x2a698a,
                'logger': _0x8b1157[_0xca185e(0x4b4)],
                'uuid': _0x2bfed1['uuid']
              }, _0x1ea224[_0xca185e(0x286)] = {
                'Deferred': _0xf8c102['Deferred'],
                'PlayerInfoStateManager': _0xcee7b7[_0xca185e(0x481)],
                'MessageManager': _0x188b26[_0xca185e(0x171)],
                'CommandManager': _0x1a319d['CommandManager'],
                'EventManager': _0x196fcb[_0xca185e(0x17b)],
                'SocketManager': _0x1b0325[_0xca185e(0x1a9)],
                'ServiceRest': _0x1799e9[_0xca185e(0x162)]
              };
            },
            0x4f0: function _(_0x7f939b, _0x265cb6, _0x2c93b9) {
              var _0x7b6023 = a1_0x1adc;

              var _0x5ae64a = this && this[_0x7b6023(0x395)] || function (_0x25b1ad) {
                var _0x593e7a = _0x7b6023;
                return _0x25b1ad && _0x25b1ad[_0x593e7a(0x2ab)] ? _0x25b1ad : {
                  'default': _0x25b1ad
                };
              };

              Object['defineProperty'](_0x265cb6, _0x7b6023(0x2ab), {
                'value': !0x0
              }), _0x265cb6[_0x7b6023(0x3a5)] = void 0x0;

              var _0x4a2f15 = _0x2c93b9(0x19be),
                  _0x2cb40b = _0x2c93b9(0x758),
                  _0x366b12 = _0x5ae64a(_0x2c93b9(0x7e9)),
                  _0x2600ab = _0x5ae64a(_0x2c93b9(0x1c13)),
                  _0x1c45ba = _0x5ae64a(_0x2c93b9(0x28a)),
                  _0x59ff11 = function () {
                var _0x4feae2 = _0x7b6023;

                function _0x59fd99(_0x3840cd, _0x223d0e, _0x39d9ae) {
                  var _0x21778c = a1_0x1adc;
                  void 0x0 === _0x39d9ae && (_0x39d9ae = _0x21778c(0x1e2)), this['serviceId'] = _0x3840cd, this[_0x21778c(0x419)] = _0x223d0e || 0x1, this[_0x21778c(0x3b6)] = _0x39d9ae, this[_0x21778c(0x2c9)] = new _0x2600ab['default'](), this[_0x21778c(0x2d5)] = new _0x1c45ba[_0x21778c(0x4b4)](), this[_0x21778c(0x4c3)] = new _0x1c45ba['default']();
                }

                return _0x59fd99[_0x4feae2(0x267)][_0x4feae2(0x255)] = function (_0x376ec4, _0x2765bd) {
                  this['_emitter']['on'](_0x376ec4, _0x2765bd);
                }, _0x59fd99[_0x4feae2(0x267)]['registerOnce'] = function (_0x3d51ce, _0x4bd123) {
                  var _0x450d77 = _0x4feae2;

                  this[_0x450d77(0x2c9)][_0x450d77(0x466)](_0x3d51ce, _0x4bd123);
                }, _0x59fd99['prototype'][_0x4feae2(0x2fe)] = function (_0x510bad) {
                  var _0x581a22 = _0x4feae2;

                  _0x4a2f15[_0x581a22(0x171)][_0x581a22(0x40b)]()[_0x581a22(0x2fe)](_0x510bad);
                }, _0x59fd99['prototype'][_0x4feae2(0x3dd)] = function (_0x76e9f) {
                  var _0x530fab = _0x4feae2;

                  _0x4a2f15[_0x530fab(0x171)]['getInstance']()[_0x530fab(0x3dd)](_0x76e9f);
                }, _0x59fd99[_0x4feae2(0x267)][_0x4feae2(0x1a1)] = function (_0x282ce9, _0x1f7d9b) {
                  var _0x18c65f = _0x4feae2;

                  _0x366b12[_0x18c65f(0x4b4)]['debug']('CommandManager\x20%s\x20-\x20executeCommand:\x20%j', this[_0x18c65f(0x46c)], [_0x282ce9, _0x1f7d9b]);

                  var _0x37839e = this['_executingCommandType'][_0x18c65f(0x1d6)]();

                  if (!this[_0x18c65f(0x3d3)](_0x282ce9, _0x1f7d9b)) return _0x366b12[_0x18c65f(0x4b4)][_0x18c65f(0x47c)](_0x18c65f(0x45d), this[_0x18c65f(0x46c)], this[_0x18c65f(0x2d5)][_0x18c65f(0x3ef)]()), _0x59fd99[_0x18c65f(0x306)];
                  if (_0x37839e >= this[_0x18c65f(0x419)] && !this['_executingCommandType']['has'](_0x282ce9[_0x18c65f(0x48e)])) return _0x366b12['default'][_0x18c65f(0x47c)](_0x18c65f(0x153), this[_0x18c65f(0x46c)], _0x37839e, this[_0x18c65f(0x419)]), _0x59fd99[_0x18c65f(0x2b7)];

                  var _0x581be5 = (0, _0x2cb40b[_0x18c65f(0x2d4)])();

                  _0x282ce9['data'][this[_0x18c65f(0x3b6)]] = _0x581be5;

                  var _0xaf907d = _0x4a2f15[_0x18c65f(0x171)][_0x18c65f(0x40b)]()[_0x18c65f(0x111)](this[_0x18c65f(0x46c)], _0x282ce9);

                  return _0x1f7d9b[_0x18c65f(0x433)] && (this[_0x18c65f(0x2d5)][_0x18c65f(0x176)](_0x282ce9[_0x18c65f(0x48e)], !0x0), this['_messageIdInfosMap'][_0x18c65f(0x176)](_0xaf907d, {
                    'commandId': _0x581be5,
                    'resendCount': _0x1f7d9b[_0x18c65f(0x28f)],
                    'commandPayload': _0x282ce9,
                    'numberResend': 0x0
                  })), _0x366b12[_0x18c65f(0x4b4)][_0x18c65f(0x29a)](_0x18c65f(0x2a3), this[_0x18c65f(0x46c)], _0xaf907d, _0x581be5), _0x581be5;
                }, _0x59fd99[_0x4feae2(0x267)][_0x4feae2(0x168)] = function () {
                  var _0x4a664c = _0x4feae2;
                  this[_0x4a664c(0x2d5)]['clear'](), _0x4a2f15[_0x4a664c(0x171)]['getInstance']()[_0x4a664c(0x31b)](this[_0x4a664c(0x4c3)]['keys']()), this[_0x4a664c(0x4c3)][_0x4a664c(0x2f8)]();
                }, _0x59fd99[_0x4feae2(0x267)]['removeAllEventListeners'] = function () {
                  var _0x19458a = _0x4feae2;

                  this[_0x19458a(0x2c9)][_0x19458a(0x1b5)]();
                }, _0x59fd99[_0x4feae2(0x267)]['cleanUp'] = function () {
                  var _0x24f7f8 = _0x4feae2;
                  _0x366b12[_0x24f7f8(0x4b4)]['debug'](_0x24f7f8(0x3bb), this[_0x24f7f8(0x46c)]), this['_emitter'][_0x24f7f8(0x1b5)](), this[_0x24f7f8(0x168)]();
                }, _0x59fd99[_0x4feae2(0x267)][_0x4feae2(0x4b2)] = function (_0x5c7193) {
                  var _0x40409f = _0x4feae2;

                  if (_0x366b12['default'][_0x40409f(0x29a)](_0x40409f(0x321), this['serviceId'], _0x5c7193), this[_0x40409f(0x4c3)]['has'](_0x5c7193)) {
                    var _0x11ec42 = this[_0x40409f(0x4c3)][_0x40409f(0x1e6)](_0x5c7193)[_0x40409f(0x187)];

                    this[_0x40409f(0x4c3)][_0x40409f(0x387)](_0x5c7193), this[_0x40409f(0x2d5)][_0x40409f(0x387)](_0x11ec42[_0x40409f(0x48e)]), this[_0x40409f(0x2c9)][_0x40409f(0x426)](_0x59fd99[_0x40409f(0x14c)], _0x11ec42);
                  }
                }, _0x59fd99[_0x4feae2(0x267)][_0x4feae2(0x372)] = function (_0x4c6c04) {
                  var _0x3d6373 = _0x4feae2;

                  if (_0x366b12[_0x3d6373(0x4b4)][_0x3d6373(0x29a)](_0x3d6373(0x258), this[_0x3d6373(0x46c)], _0x4c6c04), this[_0x3d6373(0x4c3)]['has'](_0x4c6c04)) {
                    var _0x299487 = this[_0x3d6373(0x4c3)][_0x3d6373(0x1e6)](_0x4c6c04),
                        _0x367615 = _0x299487[_0x3d6373(0x28f)],
                        _0x4454e5 = _0x299487[_0x3d6373(0x1e2)],
                        _0x329104 = _0x299487[_0x3d6373(0x187)],
                        _0x41b590 = _0x299487['numberResend'];

                    if (this[_0x3d6373(0x4c3)][_0x3d6373(0x387)](_0x4c6c04), this['_executingCommandType']['delete'](_0x329104[_0x3d6373(0x48e)]), _0x41b590 < _0x367615) {
                      _0x366b12[_0x3d6373(0x4b4)][_0x3d6373(0x29a)]('CommandManager\x20%s\x20-\x20resendMessage:\x20%s', this['serviceId'], _0x4c6c04);

                      var _0x3823ed = _0x4a2f15[_0x3d6373(0x171)][_0x3d6373(0x40b)]()[_0x3d6373(0x111)](this['serviceId'], _0x329104, _0x4c6c04);

                      _0x41b590++, this[_0x3d6373(0x4c3)][_0x3d6373(0x176)](_0x3823ed, {
                        'resendCount': _0x367615,
                        'commandId': _0x4454e5,
                        'commandPayload': _0x329104,
                        'numberResend': _0x41b590
                      }), _0x366b12['default'][_0x3d6373(0x29a)](_0x3d6373(0x3f1), this['serviceId'], _0x4c6c04, _0x3823ed, _0x41b590, _0x367615);
                    } else _0x366b12['default'][_0x3d6373(0x29a)](_0x3d6373(0x2ce), this[_0x3d6373(0x46c)], _0x4c6c04, _0x41b590), this[_0x3d6373(0x2c9)][_0x3d6373(0x426)](_0x59fd99[_0x3d6373(0x376)], _0x4454e5);
                  }
                }, _0x59fd99[_0x4feae2(0x267)][_0x4feae2(0x3d3)] = function (_0x1eda59, _0x419c03) {
                  var _0x573a60 = _0x4feae2,
                      _0x5b11b2 = _0x1eda59[_0x573a60(0x48e)];

                  return !!_0x419c03[_0x573a60(0x323)] || !0x1 === this[_0x573a60(0x2d5)][_0x573a60(0x413)](_0x5b11b2);
                }, _0x59fd99[_0x4feae2(0x2b7)] = 'COMMAND_FAILED_CONC_OVER_LIMIT', _0x59fd99[_0x4feae2(0x306)] = _0x4feae2(0x306), _0x59fd99[_0x4feae2(0x376)] = _0x4feae2(0x376), _0x59fd99[_0x4feae2(0x14c)] = 'COMMAND_SEND_SUCCESSFULLY', _0x59fd99;
              }();

              _0x265cb6['CommandManager'] = _0x59ff11;
            },
            0x6: function _(_0x1400aa, _0x310248, _0x437f30) {
              var _0x1a6592 = a1_0x1adc;

              var _0x4d172b = this && this[_0x1a6592(0x395)] || function (_0x1db56e) {
                var _0x19e205 = _0x1a6592;
                return _0x1db56e && _0x1db56e[_0x19e205(0x2ab)] ? _0x1db56e : {
                  'default': _0x1db56e
                };
              };

              Object['defineProperty'](_0x310248, _0x1a6592(0x2ab), {
                'value': !0x0
              }), _0x310248[_0x1a6592(0x17b)] = void 0x0;

              var _0x4542ff = _0x4d172b(_0x437f30(0x1c13)),
                  _0x18c735 = _0x4d172b(_0x437f30(0x28a)),
                  _0x3efae1 = _0x437f30(0x1542),
                  _0x2bf525 = _0x4d172b(_0x437f30(0x7e9)),
                  _0xf39437 = {
                'jgr': 'client-join-game-result',
                'sud': _0x1a6592(0x28b),
                'spu': 'state-pushed',
                'erp': _0x1a6592(0x415),
                'mep': _0x1a6592(0x1df)
              },
                  _0x2fd50f = function () {
                var _0x5bf1dd = _0x1a6592;

                function _0x39466b(_0xea2994, _0x13c556) {
                  var _0x42fea7 = a1_0x1adc;
                  void 0x0 === _0xea2994 && (_0xea2994 = !0x1), this[_0x42fea7(0x2c9)] = new _0x4542ff[_0x42fea7(0x4b4)](), this[_0x42fea7(0x38c)] = new _0x3efae1[_0x42fea7(0x1b4)](0x3e8), this[_0x42fea7(0x35a)] = new _0x18c735[_0x42fea7(0x4b4)](), this['_isSkipMapNewEvent'] = _0xea2994, this['customEventMapping'] = _0x13c556 || _0xf39437;
                }

                return _0x39466b[_0x5bf1dd(0x267)]['registerEvent'] = function (_0x1db569, _0x4c5d87) {
                  this['_emitter']['on'](_0x1db569, _0x4c5d87);
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x32d)] = function (_0x24f621, _0x5177a8) {
                  var _0x29d1f0 = _0x5bf1dd;

                  this[_0x29d1f0(0x2c9)][_0x29d1f0(0x126)](_0x24f621, _0x5177a8);
                }, _0x39466b['prototype'][_0x5bf1dd(0x1ee)] = function (_0x28aa58, _0x1e3c16) {
                  var _0x2f8733 = _0x5bf1dd;

                  this[_0x2f8733(0x2c9)][_0x2f8733(0x466)](_0x28aa58, _0x1e3c16);
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x25d)] = function () {
                  var _0x4844ad = _0x5bf1dd;

                  this[_0x4844ad(0x2c9)][_0x4844ad(0x1b5)]();
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x37f)] = function (_0x453470, _0x490484, _0xaf17e5) {
                  var _0x475b65 = _0x5bf1dd,
                      _0x1fcaa9 = setTimeout(function () {
                    var _0x1c4486 = a1_0x1adc;
                    _0x2bf525['default']['debug'](_0x1c4486(0x191), _0x490484), _0xaf17e5();
                  }, _0x453470);

                  return this['_waitForEventTimeOutId'][_0x475b65(0x176)](_0x1fcaa9, _0x490484), _0x1fcaa9;
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x25c)] = function () {
                  var _0x45fd9e = _0x5bf1dd;
                  this['_waitForEventTimeOutId'][_0x45fd9e(0x3ef)]()[_0x45fd9e(0x37b)](function (_0x8f6ae9) {
                    clearTimeout(_0x8f6ae9);
                  }), this[_0x45fd9e(0x35a)][_0x45fd9e(0x2f8)]();
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x39b)] = function (_0x58899f) {
                  var _0x2b952e = _0x5bf1dd;
                  clearTimeout(_0x58899f), this[_0x2b952e(0x35a)][_0x2b952e(0x387)](_0x58899f);
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x1d1)] = function () {
                  var _0x28fb8c = _0x5bf1dd;
                  _0x2bf525[_0x28fb8c(0x4b4)][_0x28fb8c(0x29a)](_0x28fb8c(0x2b1)), this[_0x28fb8c(0x2c9)][_0x28fb8c(0x1b5)](), this[_0x28fb8c(0x38c)]['clearAll'](), this[_0x28fb8c(0x25c)]();
                }, _0x39466b['prototype'][_0x5bf1dd(0x334)] = function () {
                  var _0x544a66 = _0x5bf1dd;
                  _0x2bf525[_0x544a66(0x4b4)]['debug'](_0x544a66(0x478)), this[_0x544a66(0x2c9)][_0x544a66(0x426)](_0x39466b['CONNECTED']);
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x352)] = function (_0x3966a5) {
                  var _0x186824 = _0x5bf1dd;

                  this[_0x186824(0x2c9)][_0x186824(0x426)](_0x39466b['PONG'], _0x3966a5);
                }, _0x39466b[_0x5bf1dd(0x267)][_0x5bf1dd(0x2e5)] = function () {
                  var _0x2c3c61 = _0x5bf1dd;
                  _0x2bf525[_0x2c3c61(0x4b4)][_0x2c3c61(0x29a)]('EventManager\x20-\x20cannotConnect.'), this[_0x2c3c61(0x2c9)][_0x2c3c61(0x426)](_0x39466b[_0x2c3c61(0x20f)]);
                }, _0x39466b['prototype'][_0x5bf1dd(0x2d7)] = function (_0x2ffe23) {
                  var _0x3778da = _0x5bf1dd,
                      _0x362219 = this;

                  _0x2bf525[_0x3778da(0x4b4)][_0x3778da(0x29a)](_0x3778da(0x4d7), _0x2ffe23), _0x2ffe23 && _0x2ffe23[_0x3778da(0x48e)] && (_0x2ffe23[_0x3778da(0x48e)] = !this[_0x3778da(0x213)] && this['customEventMapping'][_0x2ffe23[_0x3778da(0x48e)]] ? this[_0x3778da(0x11b)][_0x2ffe23['event']] : _0x2ffe23[_0x3778da(0x48e)]);

                  var _0x2e5858 = _0x2ffe23[_0x3778da(0x48e)],
                      _0x12c7ee = _0x2ffe23[_0x3778da(0x28e)],
                      _0x34fafc = _0x2ffe23[_0x3778da(0x459)];

                  _0x12c7ee ? this[_0x3778da(0x38c)][_0x3778da(0x164)](_0x34fafc) ? _0x2bf525[_0x3778da(0x4b4)][_0x3778da(0x47c)](_0x3778da(0x21e), _0x34fafc) : (this[_0x3778da(0x38c)][_0x3778da(0x32b)](_0x34fafc), this['_waitForEventTimeOutId'][_0x3778da(0x3ef)]()[_0x3778da(0x37b)](function (_0x7253f) {
                    var _0x479d3d = _0x3778da;
                    _0x362219[_0x479d3d(0x35a)][_0x479d3d(0x1e6)](_0x7253f)(_0x2ffe23) && (clearTimeout(_0x7253f), _0x362219[_0x479d3d(0x35a)][_0x479d3d(0x387)](_0x7253f));
                  }), _0x3778da(0x415) === _0x2e5858 && _0x2bf525[_0x3778da(0x4b4)][_0x3778da(0x282)](_0x3778da(0x1f3), _0x2ffe23), this[_0x3778da(0x2c9)]['emit'](_0x2e5858, _0x2ffe23)) : _0x2bf525['default'][_0x3778da(0x47c)](_0x3778da(0x2b4));
                }, _0x39466b[_0x5bf1dd(0x1b0)] = _0x5bf1dd(0x1d0), _0x39466b['PONG'] = _0x5bf1dd(0x3ed), _0x39466b[_0x5bf1dd(0x20f)] = _0x5bf1dd(0x1c4), _0x39466b[_0x5bf1dd(0x1e1)] = 'expected-event-timeout', _0x39466b[_0x5bf1dd(0x114)] = _0x5bf1dd(0x24a), _0x39466b[_0x5bf1dd(0x1e8)] = 'mismatch-version', _0x39466b;
              }();

              _0x310248[_0x1a6592(0x17b)] = _0x2fd50f;
            },
            0x1531: function _(_0xb93c8e, _0x2ed418, _0x23a03d) {
              var _0x39ab22 = a1_0x1adc;

              var _0x143abc = this && this['__spreadArray'] || function (_0x5dc89a, _0x2bef09, _0xc7963e) {
                var _0x1d4729 = a1_0x1adc;

                if (_0xc7963e || 0x2 === arguments[_0x1d4729(0x109)]) {
                  for (var _0x57639f, _0x44ad9a = 0x0, _0x5ea752 = _0x2bef09[_0x1d4729(0x109)]; _0x44ad9a < _0x5ea752; _0x44ad9a++) !_0x57639f && _0x44ad9a in _0x2bef09 || (_0x57639f || (_0x57639f = Array['prototype'][_0x1d4729(0x167)][_0x1d4729(0x20b)](_0x2bef09, 0x0, _0x44ad9a)), _0x57639f[_0x44ad9a] = _0x2bef09[_0x44ad9a]);
                }

                return _0x5dc89a[_0x1d4729(0x46f)](_0x57639f || Array[_0x1d4729(0x267)]['slice']['call'](_0x2bef09));
              },
                  _0x3ab28f = this && this[_0x39ab22(0x395)] || function (_0x4bf5d3) {
                var _0x503d33 = _0x39ab22;
                return _0x4bf5d3 && _0x4bf5d3[_0x503d33(0x2ab)] ? _0x4bf5d3 : {
                  'default': _0x4bf5d3
                };
              };

              Object['defineProperty'](_0x2ed418, _0x39ab22(0x2ab), {
                'value': !0x0
              }), _0x2ed418['PlayerInfoStateManager'] = void 0x0;

              var _0x53d7cc = _0x3ab28f(_0x23a03d(0x1c13)),
                  _0x482549 = _0x23a03d(0x6),
                  _0xccf66e = _0x3ab28f(_0x23a03d(0x7e9)),
                  _0x51ed83 = _0x23a03d(0x758),
                  _0x5372ca = _0x39ab22(0x13d),
                  _0x1bf73e = function () {
                var _0x3ab179 = _0x39ab22;

                function _0x1d03f1() {
                  var _0x3ebbdf = a1_0x1adc,
                      _0xae917f = this;

                  this[_0x3ebbdf(0x263)] = {
                    'amount': 0x0,
                    'availableAmount': 0x0,
                    'version': 0x0,
                    'pAmount': 0x0,
                    'pAvailableAmount': 0x0,
                    'pVersion': 0x0
                  }, this[_0x3ebbdf(0x2a7)] = null, this[_0x3ebbdf(0x44b)] = null, this[_0x3ebbdf(0x4b6)] = null, this[_0x3ebbdf(0x4cf)] = '', this[_0x3ebbdf(0x24c)] = new _0x482549[_0x3ebbdf(0x17b)](), this['_emitter'] = new _0x53d7cc[_0x3ebbdf(0x4b4)](), this[_0x3ebbdf(0x24c)]['registerEvent']('wallet-updated', function (_0x43d4ff) {
                    _0xae917f['setWalletBalance'](_0x43d4ff);
                  }), this[_0x3ebbdf(0x24c)][_0x3ebbdf(0x255)](_0x3ebbdf(0x243), function (_0x53d69f) {
                    var _0x4f2815 = _0x3ebbdf;

                    _0xae917f[_0x4f2815(0x10d)](_0x53d69f);
                  }), this[_0x3ebbdf(0x24c)][_0x3ebbdf(0x255)]('user-logged-out', function (_0x3d3628) {
                    var _0x29ffd0 = _0x3ebbdf;
                    _0xccf66e['default'][_0x29ffd0(0x29a)](_0x29ffd0(0x36f), _0x3d3628), _0xae917f[_0x29ffd0(0x2c9)][_0x29ffd0(0x426)](_0x3d3628[_0x29ffd0(0x48e)], _0x3d3628[_0x29ffd0(0x28e)]);
                  }), this[_0x3ebbdf(0x24c)][_0x3ebbdf(0x255)](_0x3ebbdf(0x385), function (_0x5c02e3) {
                    var _0x3bd99a = _0x3ebbdf;
                    _0x3bd99a(0x4c2) === _0x5c02e3[_0x3bd99a(0x46c)] && _0xae917f[_0x3bd99a(0x10d)](_0x5c02e3);
                  }), this[_0x3ebbdf(0x13c)] = (0, _0x51ed83[_0x3ebbdf(0x2d4)])(), this['walletTypes'] = [];
                }

                return _0x1d03f1['getInstance'] = function () {
                  var _0x29ed96 = a1_0x1adc;
                  return _0x1d03f1[_0x29ed96(0x25f)] || (_0x1d03f1[_0x29ed96(0x25f)] = new _0x1d03f1()), _0x1d03f1[_0x29ed96(0x25f)];
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x2c7)] = function (_0x3eb234) {
                  var _0x49b5ad = _0x3ab179,
                      _0x2ee4bd = this;

                  _0x3eb234['registerGame'](_0x49b5ad(0x4c2), {
                    'onAck': function onAck() {},
                    'onCannotSendMessage': function onCannotSendMessage() {}
                  }, {
                    'onConnected': function onConnected() {
                      var _0x5fe4b8 = _0x49b5ad;
                      _0x2ee4bd[_0x5fe4b8(0x197)]() && _0x3eb234[_0x5fe4b8(0x111)](_0x5fe4b8(0x4c2), {
                        'event': 'client-state-request',
                        'data': {
                          'serviceId': _0x5fe4b8(0x4c2),
                          'objectId': _0x2ee4bd['getUserId'](),
                          'stateType': 'wallet-type',
                          'token': _0x2ee4bd[_0x5fe4b8(0x2ed)](),
                          'commandId': Date[_0x5fe4b8(0x439)]() + ''
                        }
                      });
                    },
                    'onCannotConnect': function onCannotConnect() {
                      var _0x3adaee = _0x49b5ad;
                      _0x2ee4bd[_0x3adaee(0x263)] = {
                        'amount': 0x0,
                        'version': 0x0
                      }, _0x2ee4bd['token'] = null, _0x2ee4bd[_0x3adaee(0x44b)] = null, _0x2ee4bd[_0x3adaee(0x4b6)] = null;
                    },
                    'onCannotAuthen': function onCannotAuthen() {},
                    'onEvent': this[_0x49b5ad(0x24c)][_0x49b5ad(0x2d7)][_0x49b5ad(0x42f)](this[_0x49b5ad(0x24c)])
                  }), _0x3eb234[_0x49b5ad(0x341)](_0x49b5ad(0x43c), {}, {
                    'onConnected': function onConnected() {},
                    'onCannotConnect': function onCannotConnect() {
                      var _0x20be26 = _0x49b5ad;

                      _0x2ee4bd[_0x20be26(0x2c9)]['emit'](_0x20be26(0x33c));
                    },
                    'onCannotAuthen': function onCannotAuthen() {
                      var _0x508f8f = _0x49b5ad;

                      _0x2ee4bd[_0x508f8f(0x2c9)][_0x508f8f(0x426)]('player-can-not-authen');
                    },
                    'onEvent': this[_0x49b5ad(0x24c)][_0x49b5ad(0x2d7)]['bind'](this[_0x49b5ad(0x24c)])
                  });
                }, _0x1d03f1[_0x3ab179(0x267)]['registerEventOnce'] = function (_0x5c355c, _0x371abd) {
                  var _0x2d78da = _0x3ab179;

                  this[_0x2d78da(0x2c9)][_0x2d78da(0x466)](_0x5c355c, _0x371abd);
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x255)] = function (_0x8d2ef9, _0x2b38d5) {
                  var _0x133031 = _0x3ab179;

                  this[_0x133031(0x2c9)]['on'](_0x8d2ef9, _0x2b38d5);
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x20a)] = function (_0x8d500c, _0x5619f9) {
                  var _0xb1e023 = _0x3ab179;

                  this[_0xb1e023(0x2c9)][_0xb1e023(0x126)](_0x8d500c, _0x5619f9);
                }, _0x1d03f1[_0x3ab179(0x267)]['setWalletBalance'] = function (_0x3a1cab) {
                  var _0x2901cf = _0x3ab179,
                      _0x29d434 = _0x3a1cab[_0x2901cf(0x28e)],
                      _0xfee8a9 = !0x1;

                  isNaN(_0x29d434[_0x2901cf(0x49a)]) || isNaN(_0x29d434[_0x2901cf(0x165)]) || (!this[_0x2901cf(0x263)][_0x2901cf(0x49a)] || this[_0x2901cf(0x263)]['version'] <= _0x29d434['version'] ? (this['wallet'][_0x2901cf(0x165)] = _0x29d434[_0x2901cf(0x165)] || 0x0, this['wallet'][_0x2901cf(0x3e7)] = _0x29d434[_0x2901cf(0x3e7)] || 0x0, this[_0x2901cf(0x263)][_0x2901cf(0x49a)] = _0x29d434['version'], _0xfee8a9 = !0x0) : _0xccf66e[_0x2901cf(0x4b4)][_0x2901cf(0x29a)](_0x2901cf(0x257), this[_0x2901cf(0x263)][_0x2901cf(0x49a)], _0x29d434[_0x2901cf(0x49a)], this['wallet'])), isNaN(_0x29d434[_0x2901cf(0x3ad)]) || isNaN(_0x29d434[_0x2901cf(0x1dd)]) || (!this[_0x2901cf(0x263)][_0x2901cf(0x23c)] || this['wallet']['pVersion'] <= _0x29d434[_0x2901cf(0x3ad)] ? (this[_0x2901cf(0x263)][_0x2901cf(0x393)] = _0x29d434[_0x2901cf(0x1dd)] || 0x0, this['wallet']['pAvailableAmount'] = _0x29d434['pAvaiAmt'] || 0x0, this[_0x2901cf(0x263)][_0x2901cf(0x23c)] = _0x29d434[_0x2901cf(0x3ad)], _0xfee8a9 = !0x0) : _0xccf66e['default'][_0x2901cf(0x29a)](_0x2901cf(0x21d), this[_0x2901cf(0x263)][_0x2901cf(0x23c)], _0x29d434[_0x2901cf(0x3ad)], this[_0x2901cf(0x263)])), _0xfee8a9 && (_0xccf66e[_0x2901cf(0x4b4)]['debug'](_0x2901cf(0x16d), this['wallet']), this[_0x2901cf(0x2c9)][_0x2901cf(0x426)](_0x2901cf(0x36d)));
                }, _0x1d03f1['prototype'][_0x3ab179(0x32a)] = function () {
                  var _0x40fd69 = _0x3ab179;
                  return Math[_0x40fd69(0x38b)](this['wallet'][_0x40fd69(0x165)]);
                }, _0x1d03f1[_0x3ab179(0x267)]['getWallets'] = function () {
                  var _0x867916 = _0x3ab179;
                  return {
                    'amount': Math[_0x867916(0x38b)](this[_0x867916(0x263)][_0x867916(0x165)] || 0x0),
                    'pAmount': Math['floor'](this[_0x867916(0x263)][_0x867916(0x393)] || 0x0)
                  };
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x4d2)] = function (_0x42bb1d) {
                  var _0x5a7ae1 = _0x3ab179;
                  _0x42bb1d && 0x0 !== _0x42bb1d[_0x5a7ae1(0x109)] ? this['walletTypes'] = _0x42bb1d : this[_0x5a7ae1(0x10e)] = [_0x5372ca];
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x248)] = function () {
                  var _0x124767 = _0x3ab179;
                  return this[_0x124767(0x10e)][_0x124767(0x220)](_0x5372ca);
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x38a)] = function () {
                  var _0x56c6c8 = _0x3ab179;
                  return this[_0x56c6c8(0x10e)][_0x56c6c8(0x220)](_0x56c6c8(0x2ee));
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x3a1)] = function () {
                  var _0x10c0a2 = _0x3ab179;
                  return _0x143abc([], this[_0x10c0a2(0x10e)], !0x0);
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x2a0)] = function (_0xa7cd01) {
                  var _0x3a61bb = _0x3ab179;
                  this[_0x3a61bb(0x44b)] = _0xa7cd01;
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x197)] = function () {
                  var _0x335cf6 = _0x3ab179;
                  return this[_0x335cf6(0x44b)] || '';
                }, _0x1d03f1[_0x3ab179(0x267)]['setToken'] = function (_0x234509) {
                  this['token'] = _0x234509;
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x2ed)] = function () {
                  var _0x26ab5 = _0x3ab179;
                  return this[_0x26ab5(0x2a7)] || '';
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x244)] = function (_0x488d5f) {
                  this['displayName'] = _0x488d5f;
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x215)] = function () {
                  var _0x1df28f = _0x3ab179;
                  return this[_0x1df28f(0x4b6)] || '';
                }, _0x1d03f1['prototype']['setAvatar'] = function (_0x3ef177) {
                  this['avatar'] = _0x3ef177;
                }, _0x1d03f1['prototype'][_0x3ab179(0x159)] = function () {
                  return this['avatar'];
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x216)] = function () {
                  return this['ssid'];
                }, _0x1d03f1[_0x3ab179(0x267)][_0x3ab179(0x1d1)] = function () {
                  var _0x5860f2 = _0x3ab179;

                  this[_0x5860f2(0x2c9)]['removeAllListeners']();
                }, _0x1d03f1;
              }();

              _0x2ed418[_0x39ab22(0x481)] = _0x1bf73e;
            },
            0x19be: function _(_0x3219b0, _0x97a51f, _0x101145) {
              var _0x301c57 = a1_0x1adc;

              var _0xaf6ad = this && this['__importDefault'] || function (_0x29f1d2) {
                return _0x29f1d2 && _0x29f1d2['__esModule'] ? _0x29f1d2 : {
                  'default': _0x29f1d2
                };
              };

              Object[_0x301c57(0x42b)](_0x97a51f, _0x301c57(0x2ab), {
                'value': !0x0
              }), _0x97a51f[_0x301c57(0x171)] = void 0x0;

              var _0x990800 = _0xaf6ad(_0x101145(0x28a)),
                  _0x1947b8 = _0x101145(0x1542),
                  _0x310ceb = _0x101145(0x758),
                  _0x5da4c4 = _0x101145(0x233a),
                  _0x211612 = _0x101145(0x1d8f),
                  _0x3c2c09 = _0x101145(0x1531),
                  _0x519247 = _0x101145(0xb46),
                  _0xd7b32b = _0xaf6ad(_0x101145(0x7e9)),
                  _0x46bd87 = function () {
                var _0x2b4f64 = _0x301c57;

                function _0xc90d20() {
                  var _0x418f3d = a1_0x1adc;
                  this['_config'] = {}, this[_0x418f3d(0x325)] = [], this[_0x418f3d(0x33d)] = null, this[_0x418f3d(0x25b)] = new _0x5da4c4[_0x418f3d(0x234)](), this[_0x418f3d(0x1d8)] = new _0x1947b8['Duplicate'](0x3e8), this[_0x418f3d(0x26a)] = new _0x990800[_0x418f3d(0x4b4)](), this['playerStateInfo'] = _0x3c2c09[_0x418f3d(0x481)][_0x418f3d(0x40b)](), this[_0x418f3d(0x245)] = null;
                }

                return _0xc90d20[_0x2b4f64(0x40b)] = function () {
                  var _0x3df3b5 = _0x2b4f64;
                  return _0xc90d20[_0x3df3b5(0x25f)] || (_0xc90d20['instance'] = new _0xc90d20()), _0xc90d20[_0x3df3b5(0x25f)];
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x18c)] = function (_0x332ea5) {
                  var _0x3438ff = _0x2b4f64,
                      _0x3c530d = this,
                      _0xae4fef = _0x332ea5[_0x3438ff(0x4a1)],
                      _0x235a54 = _0x332ea5['token'],
                      _0x21bb42 = _0x332ea5['env'],
                      _0x156ae0 = _0x332ea5[_0x3438ff(0x222)],
                      _0x5793a1 = _0x332ea5[_0x3438ff(0x34a)],
                      _0x59cb09 = _0x332ea5[_0x3438ff(0x242)],
                      _0x2155b7 = void 0x0 === _0x59cb09 ? {} : _0x59cb09;

                  if (!_0xae4fef) return Promise[_0x3438ff(0x152)]({
                    'isSuccess': !0x1,
                    'message': 'Updated\x20url\x20must\x20not\x20empty.'
                  });
                  if (!_0x235a54) return Promise['reject']({
                    'isSuccess': !0x1,
                    'message': _0x3438ff(0x2e6)
                  });

                  if (this[_0x3438ff(0x2cb)][_0x3438ff(0x2a7)] === _0x235a54) {
                    if (Array[_0x3438ff(0x3cc)](_0xae4fef)) {
                      if (_0xae4fef[_0x3438ff(0x220)](this['_config'][_0x3438ff(0x1a0)])) return Promise[_0x3438ff(0x296)]({
                        'isSuccess': !0x0,
                        'message': _0x3438ff(0x350)
                      });
                    } else {
                      if (_0xae4fef === this[_0x3438ff(0x2cb)][_0x3438ff(0x1a0)]) return Promise[_0x3438ff(0x296)]({
                        'isSuccess': !0x0,
                        'message': _0x3438ff(0x350)
                      });
                    }
                  }

                  _0xd7b32b['default'][_0x3438ff(0x29a)]('MessageManager\x20-\x20Update\x20new\x20config:\x20%j', {
                    'socketUrl': _0xae4fef,
                    'token': _0x235a54
                  }), this[_0x3438ff(0x1c0)]();

                  var _0x3af4ca;

                  if (_0x3af4ca = Array['isArray'](_0xae4fef) ? _0xae4fef[parseInt(0x2710 * Math['random']()) % _0xae4fef['length']] : _0xae4fef, this['_config'][_0x3438ff(0x1a0)] = _0x3af4ca, this[_0x3438ff(0x2cb)][_0x3438ff(0x2a7)] = _0x235a54, this[_0x3438ff(0x2cb)]['env'] = _0x21bb42, this[_0x3438ff(0x2cb)][_0x3438ff(0x222)] = _0x156ae0, this[_0x3438ff(0x2cb)][_0x3438ff(0x3a2)] = _0x332ea5, this[_0x3438ff(0x300)][_0x3438ff(0x2c7)](this), this[_0x3438ff(0x300)][_0x3438ff(0x277)](_0x235a54), _0x5793a1) {
                    _0xd7b32b[_0x3438ff(0x4b4)][_0x3438ff(0x29a)](_0x3438ff(0x11f), _0x235a54), _0x2155b7 && (_0x2155b7[_0x3438ff(0x13c)] = this[_0x3438ff(0x300)][_0x3438ff(0x216)]());

                    var _0x4bbaba = this['doLogin'](_0x332ea5);

                    return _0x4bbaba[_0x3438ff(0x1ca)](function (_0x3a121d) {
                      var _0x326b7e = _0x3438ff;
                      _0x3a121d[_0x326b7e(0x493)] ? _0x3c530d['_initSocket']() : (_0x3c530d[_0x326b7e(0x25b)]['onCannotAuthen'](), _0x3c530d[_0x326b7e(0x1c0)]());
                    }), _0x4bbaba;
                  }

                  return this[_0x3438ff(0x2d2)](), Promise[_0x3438ff(0x296)]({
                    'isSuccess': !0x0,
                    'message': _0x3438ff(0x19b)
                  });
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x2fe)] = function (_0x46aff2) {
                  var _0x48f141 = _0x2b4f64;
                  if (!this[_0x48f141(0x33d)]) throw new Error(_0x48f141(0x34f));

                  this[_0x48f141(0x33d)]['subscribe'](_0x46aff2);
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x3dd)] = function (_0x48347d) {
                  var _0x279fb2 = _0x2b4f64;
                  this['_socketManager'] && this[_0x279fb2(0x33d)][_0x279fb2(0x3dd)](_0x48347d);
                }, _0xc90d20['prototype']['sendMessage'] = function (_0x2843b1, _0x56aa06, _0x16b37f) {
                  var _0x124549 = _0x2b4f64;
                  return void 0x0 === _0x2843b1 && (_0x2843b1 = ''), void 0x0 === _0x56aa06 && (_0x56aa06 = {}), void 0x0 === _0x16b37f && (_0x16b37f = ''), _0x16b37f = _0x16b37f || (0, _0x310ceb[_0x124549(0x2d4)])(), this['_messageIdServiceIdMap'][_0x124549(0x176)](_0x16b37f, _0x2843b1), this['_socketManager'] ? this[_0x124549(0x33d)][_0x124549(0x218)]() ? (_0xd7b32b['default'][_0x124549(0x29a)](_0x124549(0x3f9), _0x2843b1, _0x56aa06), this[_0x124549(0x33d)][_0x124549(0x111)]({
                    'messageId': _0x16b37f,
                    'data': _0x56aa06
                  })) : (this[_0x124549(0x325)]['push']({
                    'serviceId': _0x2843b1,
                    'payload': _0x56aa06,
                    'messageId': _0x16b37f
                  }), this[_0x124549(0x2d2)]()) : this[_0x124549(0x325)][_0x124549(0x4c0)]({
                    'serviceId': _0x2843b1,
                    'payload': _0x56aa06,
                    'messageId': _0x16b37f
                  }), _0x16b37f;
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x333)] = function (_0x114ce5) {
                  var _0xfcc709 = _0x2b4f64;

                  if (void 0x0 === _0x114ce5 && (_0x114ce5 = {}), this[_0xfcc709(0x33d)]) {
                    var _0x3b358f = {
                      'messageId': (0, _0x310ceb[_0xfcc709(0x2d4)])(),
                      'data': _0x114ce5
                    };
                    _0xd7b32b[_0xfcc709(0x4b4)][_0xfcc709(0x29a)]('MessageManager\x20-\x20sendChatMessage:\x20%j', _0x3b358f), this['_socketManager'][_0xfcc709(0x333)](_0x3b358f);
                  } else _0xd7b32b[_0xfcc709(0x4b4)][_0xfcc709(0x47c)](_0xfcc709(0x12e));
                }, _0xc90d20[_0x2b4f64(0x267)]['removeSendingMessage'] = function (_0x134b96) {
                  var _0x1ed874 = _0x2b4f64;
                  this[_0x1ed874(0x33d)] && this[_0x1ed874(0x33d)][_0x1ed874(0x31b)](_0x134b96);
                }, _0xc90d20[_0x2b4f64(0x267)]['registerGame'] = function (_0xe34a6c, _0x54d359, _0x17b712) {
                  var _0x11bbca = _0x2b4f64;
                  void 0x0 === _0xe34a6c && (_0xe34a6c = ''), this['_routingEventHandler'][_0x11bbca(0x341)](_0xe34a6c, _0x54d359, _0x17b712);
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x499)] = function (_0x5364b8) {
                  var _0x1531db = _0x2b4f64;
                  void 0x0 === _0x5364b8 && (_0x5364b8 = ''), this['_routingEventHandler'][_0x1531db(0x499)](_0x5364b8);
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x1c0)] = function () {
                  var _0x55b79a = _0x2b4f64;
                  _0xd7b32b['default'][_0x55b79a(0x29a)]('MessageManager\x20-\x20closeAndCleanUp.'), this[_0x55b79a(0x25b)][_0x55b79a(0x2e5)](), this[_0x55b79a(0x25b)][_0x55b79a(0x1d1)](), this[_0x55b79a(0x2cb)] = {}, this['_duplicateMessageId'][_0x55b79a(0x184)](), this[_0x55b79a(0x26a)][_0x55b79a(0x2f8)](), this[_0x55b79a(0x325)] = [], this['_socketManager'] && (this[_0x55b79a(0x33d)][_0x55b79a(0x1b9)](), this[_0x55b79a(0x33d)] = null), this['playerStateInfo'][_0x55b79a(0x1d1)](), this['_stopIntervalExtendToken']();
                }, _0xc90d20['prototype'][_0x2b4f64(0x289)] = function (_0x3db9e4) {
                  var _0x26e593 = _0x2b4f64,
                      _0x2b8f1f = this,
                      _0x1e9462 = _0x3db9e4[_0x26e593(0x4a5)],
                      _0x5abe6b = _0x3db9e4[_0x26e593(0x47e)],
                      _0x5452ea = _0x3db9e4['token'],
                      _0x489292 = _0x3db9e4[_0x26e593(0x34a)],
                      _0x511818 = _0x3db9e4['device'],
                      _0x1927c8 = void 0x0 === _0x511818 ? {} : _0x511818,
                      _0x1a6551 = new _0x519247[_0x26e593(0x3be)]();

                  return _0x489292[_0x26e593(0x4a8)]({
                    'apiUrl': _0x1e9462,
                    'url': _0x5abe6b,
                    'params': {},
                    'data': {
                      'token': _0x5452ea,
                      'device': JSON[_0x26e593(0x2eb)](_0x1927c8)
                    },
                    'callback': function callback(_0x523653) {
                      var _0x4dde7f = _0x26e593,
                          _0x19c787 = _0x523653['data'];
                      _0x19c787[_0x4dde7f(0x28e)] && _0x19c787['data']['userId'] ? (_0xd7b32b[_0x4dde7f(0x4b4)][_0x4dde7f(0x29a)](_0x4dde7f(0x207), _0x19c787), _0x19c787 = _0x19c787[_0x4dde7f(0x28e)], _0x2b8f1f[_0x4dde7f(0x300)][_0x4dde7f(0x2a0)](_0x19c787[_0x4dde7f(0x44b)]), _0x2b8f1f['playerStateInfo'][_0x4dde7f(0x277)](_0x19c787[_0x4dde7f(0x2a7)]), _0x2b8f1f['playerStateInfo'][_0x4dde7f(0x244)](_0x19c787[_0x4dde7f(0x4b6)]), _0x2b8f1f[_0x4dde7f(0x300)]['setWalletBalance']({
                        'data': {
                          'amount': parseInt(_0x19c787[_0x4dde7f(0x263)]),
                          'availableAmount': parseInt(_0x19c787['wallet']),
                          'version': parseInt(_0x19c787[_0x4dde7f(0x37e)]),
                          'pAmt': parseInt(_0x19c787[_0x4dde7f(0x33b)]),
                          'pAvaiAmt': parseInt(_0x19c787[_0x4dde7f(0x33b)]),
                          'pVer': parseInt(_0x19c787[_0x4dde7f(0x37e)])
                        }
                      }), _0x2b8f1f['playerStateInfo']['setWalletType'](_0x19c787['walletType']), _0x1a6551['resolve']({
                        'isSuccess': !0x0,
                        'message': 'Login\x20success.\x20Connecting'
                      })) : (_0xd7b32b[_0x4dde7f(0x4b4)][_0x4dde7f(0x29a)]('Authen\x20token\x20fail:\x20%j', _0x19c787), _0x1a6551['resolve']({
                        'isSuccess': !0x1,
                        'message': _0x4dde7f(0x163)
                      }));
                    },
                    'callbackErr': function callbackErr() {
                      var _0x2c1725 = _0x26e593;
                      _0xd7b32b[_0x2c1725(0x4b4)]['debug']('Authen\x20token\x20error'), _0x1a6551[_0x2c1725(0x296)]({
                        'isSuccess': !0x1,
                        'message': 'Login\x20error.\x20Clean\x20up.'
                      });
                    }
                  }), _0x1a6551[_0x26e593(0x438)]();
                }, _0xc90d20['prototype'][_0x2b4f64(0x38d)] = function () {
                  var _0xf9961e = _0x2b4f64,
                      _0x22f832 = this;

                  this['_stopIntervalExtendToken'](), this[_0xf9961e(0x245)] = setInterval(function () {
                    var _0x34262a = _0xf9961e;

                    _0x22f832[_0x34262a(0x111)](_0x34262a(0x43c), {
                      'event': _0x34262a(0x29f),
                      'data': {
                        'tkn': _0x22f832['playerStateInfo'][_0x34262a(0x2ed)](),
                        'cId': (0, _0x310ceb['uuid'])(),
                        'sId': _0x34262a(0x43c)
                      }
                    });
                  }, 0x493e0);
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x4bb)] = function () {
                  var _0xeb11af = _0x2b4f64;
                  clearInterval(this[_0xeb11af(0x245)]), this[_0xeb11af(0x245)] = null;
                }, _0xc90d20['prototype'][_0x2b4f64(0x2d2)] = function () {
                  var _0x426908 = _0x2b4f64,
                      _0x1b5023 = this;

                  _0xd7b32b[_0x426908(0x4b4)][_0x426908(0x29a)](_0x426908(0x37a)), this[_0x426908(0x33d)] && this[_0x426908(0x33d)][_0x426908(0x218)]() ? _0xd7b32b[_0x426908(0x4b4)][_0x426908(0x29a)]('MessageManager\x20-\x20_initSocket\x20-\x20exist\x20socket.') : (_0xd7b32b[_0x426908(0x4b4)][_0x426908(0x29a)]('MessageManager\x20-\x20_initSocket\x20-\x20new\x20socket.'), this[_0x426908(0x33d)] = new _0x211612[_0x426908(0x1a9)]({
                    'url': this['_config'][_0x426908(0x1a0)],
                    'token': this[_0x426908(0x2cb)][_0x426908(0x2a7)],
                    'env': this[_0x426908(0x2cb)][_0x426908(0x498)],
                    'games': this[_0x426908(0x2cb)][_0x426908(0x222)],
                    'reconnectionAttempts': 0xf423f,
                    'reconnectionDelay': 0x1f4,
                    'nextTickIn': 0x96,
                    'numberRetrySendingMessage': 0xa,
                    'ssid': this[_0x426908(0x300)][_0x426908(0x216)]()
                  }), this[_0x426908(0x26d)](), this[_0x426908(0x20c)](), this[_0x426908(0x325)][_0x426908(0x37b)](function (_0x4db369) {
                    var _0xc98d9b = _0x426908,
                        _0x6d5b4c = _0x4db369[_0xc98d9b(0x46c)],
                        _0x5a322f = void 0x0 === _0x6d5b4c ? '' : _0x6d5b4c,
                        _0x8ebf70 = _0x4db369[_0xc98d9b(0x418)],
                        _0x40a5c0 = void 0x0 === _0x8ebf70 ? {} : _0x8ebf70,
                        _0x2ac0b7 = _0x4db369[_0xc98d9b(0x147)],
                        _0x2564d0 = void 0x0 === _0x2ac0b7 ? '' : _0x2ac0b7;

                    _0x1b5023['sendMessage'](_0x5a322f, _0x40a5c0, _0x2564d0);
                  }), this[_0x426908(0x325)] = []);
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x26d)] = function () {
                  var _0x744bea = _0x2b4f64,
                      _0x33bf90 = this;

                  _0xd7b32b[_0x744bea(0x4b4)][_0x744bea(0x29a)]('MessageManager\x20-\x20_handleSocketEvent.'), this['_socketManager'] ? (this[_0x744bea(0x33d)][_0x744bea(0x255)](_0x211612[_0x744bea(0x1a9)]['NEW_MESSAGE_EVENT'], function (_0x1ede19) {
                    var _0x5ddd1e = _0x744bea;
                    _0x33bf90[_0x5ddd1e(0x1d8)][_0x5ddd1e(0x164)](_0x1ede19[_0x5ddd1e(0x147)]) || (_0x33bf90[_0x5ddd1e(0x1d8)][_0x5ddd1e(0x32b)](_0x1ede19[_0x5ddd1e(0x147)]), _0x33bf90[_0x5ddd1e(0x25b)]['onEvent'](_0x1ede19[_0x5ddd1e(0x28e)]));
                  }), this[_0x744bea(0x33d)][_0x744bea(0x255)](_0x211612[_0x744bea(0x1a9)][_0x744bea(0x4d0)], function (_0x45a7b7) {
                    var _0x2e2c87 = _0x744bea,
                        _0x3560a4 = _0x33bf90[_0x2e2c87(0x26a)][_0x2e2c87(0x1e6)](_0x45a7b7);

                    _0x3560a4 && (_0x33bf90[_0x2e2c87(0x25b)]['onAck'](_0x3560a4, _0x45a7b7), _0x33bf90[_0x2e2c87(0x26a)][_0x2e2c87(0x387)](_0x45a7b7));
                  }), this[_0x744bea(0x33d)]['registerEvent'](_0x211612[_0x744bea(0x1a9)][_0x744bea(0x273)], function (_0x35d0bb) {
                    var _0x2dd162 = _0x744bea,
                        _0x5722d = _0x33bf90[_0x2dd162(0x26a)]['get'](_0x35d0bb);

                    _0x5722d && (_0x33bf90[_0x2dd162(0x26a)]['delete'](_0x35d0bb), _0x33bf90['_routingEventHandler'][_0x2dd162(0x372)](_0x5722d, _0x35d0bb));
                  }), this[_0x744bea(0x33d)][_0x744bea(0x255)](_0x211612[_0x744bea(0x1a9)][_0x744bea(0x1b8)], function (_0x49feb5) {
                    var _0x660202 = _0x744bea,
                        _0x1dd5c9 = _0x49feb5['token'];

                    _0x33bf90[_0x660202(0x300)][_0x660202(0x277)](_0x1dd5c9);
                  })) : _0xd7b32b[_0x744bea(0x4b4)][_0x744bea(0x47c)]('MessageManager\x20-\x20_handleSocketEvent\x20with\x20null\x20_socketManager');
                }, _0xc90d20[_0x2b4f64(0x267)][_0x2b4f64(0x20c)] = function () {
                  var _0x2d528d = _0x2b4f64,
                      _0x2dbf1a = this;

                  _0xd7b32b[_0x2d528d(0x4b4)][_0x2d528d(0x29a)]('MessageManager\x20-\x20_handleSocketStatus.'), this['_socketManager'] ? (this['_socketManager'][_0x2d528d(0x255)](_0x211612[_0x2d528d(0x1a9)][_0x2d528d(0x475)], function () {
                    var _0x1fa0cb = _0x2d528d;
                    _0x2dbf1a[_0x1fa0cb(0x25b)][_0x1fa0cb(0x2e5)](), _0x2dbf1a[_0x1fa0cb(0x1c0)]();
                  }), this['_socketManager']['registerEvent'](_0x211612['SocketManager'][_0x2d528d(0x4bd)], function () {
                    var _0x5cd169 = _0x2d528d;

                    _0x2dbf1a[_0x5cd169(0x25b)][_0x5cd169(0x334)]();
                  }), this[_0x2d528d(0x33d)][_0x2d528d(0x255)](_0x211612[_0x2d528d(0x1a9)][_0x2d528d(0x1b1)], function () {
                    var _0x4f7205 = _0x2d528d;

                    _0x2dbf1a[_0x4f7205(0x25b)]['onNetworkStatus'](_0x211612[_0x4f7205(0x1a9)][_0x4f7205(0x1b1)]);
                  }), this[_0x2d528d(0x33d)]['registerEvent'](_0x211612['SocketManager'][_0x2d528d(0x1fd)], function () {
                    var _0x32c5f2 = _0x2d528d;

                    _0x2dbf1a['_routingEventHandler'][_0x32c5f2(0x335)](_0x211612[_0x32c5f2(0x1a9)]['DISCONNECTED_CONNECTION']);
                  }), this[_0x2d528d(0x33d)][_0x2d528d(0x255)](_0x211612['SocketManager']['POPUP_DISCONNECTED_EVENT'], function () {
                    var _0x34db5f = _0x2d528d;

                    _0x2dbf1a[_0x34db5f(0x25b)][_0x34db5f(0x2c3)](_0x211612[_0x34db5f(0x1a9)][_0x34db5f(0x246)]);
                  }), this[_0x2d528d(0x33d)]['registerEvent'](_0x211612[_0x2d528d(0x1a9)][_0x2d528d(0x3fd)], function (_0x17ccb8) {
                    var _0x2c5e7b = _0x2d528d;

                    _0x2dbf1a[_0x2c5e7b(0x25b)][_0x2c5e7b(0x352)](_0x17ccb8);
                  })) : _0xd7b32b[_0x2d528d(0x4b4)][_0x2d528d(0x47c)](_0x2d528d(0x3e1));
                }, _0xc90d20;
              }();

              _0x97a51f['MessageManager'] = _0x46bd87;
            },
            0x233a: function _(_0x4e8559, _0x1d22b9, _0x167a5e) {
              var _0x42be07 = a1_0x1adc;

              var _0x172b33 = this && this[_0x42be07(0x395)] || function (_0x58d4cf) {
                var _0x44e9b8 = _0x42be07;
                return _0x58d4cf && _0x58d4cf[_0x44e9b8(0x2ab)] ? _0x58d4cf : {
                  'default': _0x58d4cf
                };
              };

              Object[_0x42be07(0x42b)](_0x1d22b9, '__esModule', {
                'value': !0x0
              }), _0x1d22b9[_0x42be07(0x234)] = void 0x0;

              var _0x2dbc6c = _0x172b33(_0x167a5e(0x28a)),
                  _0x4e1cdd = function () {
                var _0x2a538c = _0x42be07;

                function _0x2c1c4e() {
                  var _0x2b50a4 = a1_0x1adc;
                  this['_commandHandlerMap'] = new _0x2dbc6c[_0x2b50a4(0x4b4)](), this[_0x2b50a4(0x2be)] = new _0x2dbc6c['default']();
                }

                return _0x2c1c4e['prototype'][_0x2a538c(0x341)] = function (_0x3c4745, _0x237260, _0x2a7a5c) {
                  var _0x4b3394 = _0x2a538c;
                  void 0x0 === _0x3c4745 && (_0x3c4745 = ''), this[_0x4b3394(0x42c)][_0x4b3394(0x176)](_0x3c4745, _0x237260), this['_eventHandlerMap'][_0x4b3394(0x176)](_0x3c4745, _0x2a7a5c);
                }, _0x2c1c4e[_0x2a538c(0x267)][_0x2a538c(0x499)] = function (_0x21207e) {
                  var _0x5e430e = _0x2a538c;
                  void 0x0 === _0x21207e && (_0x21207e = ''), this[_0x5e430e(0x42c)][_0x5e430e(0x387)](_0x21207e), this[_0x5e430e(0x2be)]['delete'](_0x21207e);
                }, _0x2c1c4e[_0x2a538c(0x267)][_0x2a538c(0x4b2)] = function (_0x54e38c, _0x4b4008) {
                  var _0x5a85a7 = _0x2a538c;
                  void 0x0 === _0x54e38c && (_0x54e38c = ''), void 0x0 === _0x4b4008 && (_0x4b4008 = '');

                  var _0x640c5b = this[_0x5a85a7(0x42c)]['get'](_0x54e38c);

                  _0x640c5b && _0x640c5b['onAck'](_0x4b4008);
                }, _0x2c1c4e[_0x2a538c(0x267)][_0x2a538c(0x372)] = function (_0x4a81b8, _0x478afd) {
                  var _0x52674a = _0x2a538c;
                  void 0x0 === _0x4a81b8 && (_0x4a81b8 = ''), void 0x0 === _0x478afd && (_0x478afd = '');

                  var _0x2e981d = this['_commandHandlerMap'][_0x52674a(0x1e6)](_0x4a81b8);

                  _0x2e981d && _0x2e981d[_0x52674a(0x372)](_0x478afd);
                }, _0x2c1c4e['prototype'][_0x2a538c(0x2e5)] = function () {
                  var _0x13de34 = _0x2a538c,
                      _0x5be502 = this;

                  this[_0x13de34(0x2be)]['keys']()['forEach'](function (_0x1f831a) {
                    var _0x53f047 = _0x13de34;
                    void 0x0 === _0x1f831a && (_0x1f831a = '');

                    var _0x49679b = _0x5be502['_eventHandlerMap']['get'](_0x1f831a);

                    _0x49679b && _0x49679b[_0x53f047(0x2e5)]();
                  });
                }, _0x2c1c4e[_0x2a538c(0x267)][_0x2a538c(0x4c1)] = function (_0x3f43e5) {
                  var _0x181fda = _0x2a538c,
                      _0x40bf10 = this;

                  this[_0x181fda(0x2be)][_0x181fda(0x3ef)]()[_0x181fda(0x37b)](function (_0x1bc0c0) {
                    var _0x1babcf = _0x181fda;
                    void 0x0 === _0x1bc0c0 && (_0x1bc0c0 = '');

                    var _0x5924b7 = _0x40bf10[_0x1babcf(0x2be)][_0x1babcf(0x1e6)](_0x1bc0c0);

                    _0x5924b7 && _0x5924b7['onNetworkStatus'] && _0x5924b7[_0x1babcf(0x4c1)](_0x3f43e5);
                  });
                }, _0x2c1c4e[_0x2a538c(0x267)]['onNetworkWarning'] = function (_0x360f07) {
                  var _0x4c4e43 = _0x2a538c,
                      _0x116163 = this;

                  this[_0x4c4e43(0x2be)][_0x4c4e43(0x3ef)]()[_0x4c4e43(0x37b)](function (_0x331518) {
                    var _0x439500 = _0x4c4e43;
                    void 0x0 === _0x331518 && (_0x331518 = '');

                    var _0x30f309 = _0x116163[_0x439500(0x2be)][_0x439500(0x1e6)](_0x331518);

                    _0x30f309 && _0x30f309[_0x439500(0x335)] && _0x30f309[_0x439500(0x335)](_0x360f07);
                  });
                }, _0x2c1c4e[_0x2a538c(0x267)][_0x2a538c(0x2c3)] = function (_0x3abe07) {
                  var _0x309cb8 = _0x2a538c,
                      _0xe972ad = this;

                  this['_eventHandlerMap'][_0x309cb8(0x3ef)]()['forEach'](function (_0x1ff07d) {
                    var _0x48c576 = _0x309cb8;
                    void 0x0 === _0x1ff07d && (_0x1ff07d = '');

                    var _0x20012e = _0xe972ad['_eventHandlerMap'][_0x48c576(0x1e6)](_0x1ff07d);

                    _0x20012e && _0x20012e[_0x48c576(0x2c3)] && _0x20012e[_0x48c576(0x2c3)]();
                  });
                }, _0x2c1c4e[_0x2a538c(0x267)]['onCannotAuthen'] = function () {
                  var _0x33519d = _0x2a538c,
                      _0x1a54a1 = this;

                  this[_0x33519d(0x2be)][_0x33519d(0x3ef)]()[_0x33519d(0x37b)](function (_0x36bca4) {
                    var _0x2431b2 = _0x33519d;
                    void 0x0 === _0x36bca4 && (_0x36bca4 = '');

                    var _0x2be7af = _0x1a54a1[_0x2431b2(0x2be)][_0x2431b2(0x1e6)](_0x36bca4);

                    _0x2be7af && _0x2be7af[_0x2431b2(0x354)]();
                  });
                }, _0x2c1c4e[_0x2a538c(0x267)]['onConnected'] = function () {
                  var _0x5629e1 = _0x2a538c,
                      _0x5d1378 = this;

                  this[_0x5629e1(0x2be)][_0x5629e1(0x3ef)]()[_0x5629e1(0x37b)](function (_0x13c5ee) {
                    var _0x130ed7 = _0x5629e1;
                    void 0x0 === _0x13c5ee && (_0x13c5ee = '');

                    var _0x5b667e = _0x5d1378[_0x130ed7(0x2be)]['get'](_0x13c5ee);

                    _0x5b667e && _0x5b667e[_0x130ed7(0x334)]();
                  });
                }, _0x2c1c4e[_0x2a538c(0x267)][_0x2a538c(0x352)] = function (_0x1d7549) {
                  var _0x4bee79 = _0x2a538c,
                      _0x3f70c7 = this;

                  this[_0x4bee79(0x2be)][_0x4bee79(0x3ef)]()[_0x4bee79(0x37b)](function (_0x3da610) {
                    var _0x39b977 = _0x4bee79;
                    void 0x0 === _0x3da610 && (_0x3da610 = '');

                    var _0x360373 = _0x3f70c7['_eventHandlerMap']['get'](_0x3da610);

                    _0x360373 && _0x360373[_0x39b977(0x352)] && _0x360373[_0x39b977(0x352)](_0x1d7549);
                  });
                }, _0x2c1c4e['prototype'][_0x2a538c(0x2d7)] = function (_0x3af7ef) {
                  var _0x3722f3 = _0x2a538c,
                      _0x1bd866 = this[_0x3722f3(0x2be)][_0x3722f3(0x1e6)](_0x3af7ef[_0x3722f3(0x46c)]);

                  _0x1bd866 && _0x1bd866[_0x3722f3(0x2d7)](_0x3af7ef);
                }, _0x2c1c4e[_0x2a538c(0x267)][_0x2a538c(0x1d1)] = function () {
                  var _0x5d7b4b = _0x2a538c;
                  this[_0x5d7b4b(0x42c)][_0x5d7b4b(0x2f8)](), this[_0x5d7b4b(0x2be)][_0x5d7b4b(0x2f8)]();
                }, _0x2c1c4e;
              }();

              _0x1d22b9[_0x42be07(0x234)] = _0x4e1cdd;
            },
            0xa79: function _(_0x2ae12c, _0x3d86d2) {
              var _0x4fe376 = a1_0x1adc;
              Object['defineProperty'](_0x3d86d2, _0x4fe376(0x2ab), {
                'value': !0x0
              }), _0x3d86d2[_0x4fe376(0x368)] = void 0x0;

              var _0x166b3a = function () {
                var _0x297aa4 = _0x4fe376;

                function _0x15deee(_0x499c7a) {
                  var _0x6c5390 = a1_0x1adc;
                  void 0x0 === _0x499c7a && (_0x499c7a = 0x3), this['_ackPacket'] = {}, this['_ids'] = 0x0, this[_0x6c5390(0x479)] = _0x499c7a;
                }

                return _0x15deee[_0x297aa4(0x267)][_0x297aa4(0x151)] = function () {
                  var _0x6796c3 = _0x297aa4;
                  return Object['keys'](this[_0x6796c3(0x487)])[_0x6796c3(0x109)] > 0x0;
                }, _0x15deee[_0x297aa4(0x267)]['addNew'] = function (_0x6ed2fa) {
                  var _0x2c0fd8 = _0x297aa4,
                      _0x54049a = this[_0x2c0fd8(0x2ef)]++;

                  return this['_ackPacket'][_0x54049a] = {
                    'counter': 0x0,
                    'message': _0x6ed2fa
                  }, _0x54049a;
                }, _0x15deee[_0x297aa4(0x267)][_0x297aa4(0x31b)] = function (_0x2a3c2e) {
                  var _0x2ce0cc = _0x297aa4,
                      _0x49df32 = this;

                  Object['keys'](this[_0x2ce0cc(0x487)])[_0x2ce0cc(0x37b)](function (_0x499c8f) {
                    var _0x11d4d0 = _0x2ce0cc,
                        _0x2cf4a8 = _0x49df32[_0x11d4d0(0x487)][_0x499c8f][_0x11d4d0(0x1cd)];

                    _0x2a3c2e(_0x2cf4a8) && delete _0x49df32[_0x11d4d0(0x487)][_0x499c8f];
                  });
                }, _0x15deee[_0x297aa4(0x267)][_0x297aa4(0x40f)] = function (_0x197676, _0xdf8ebc) {
                  var _0x58c5e9 = _0x297aa4,
                      _0x1368f3,
                      _0x2ec1b5 = this;

                  Object['keys'](this[_0x58c5e9(0x487)])[_0x58c5e9(0x37b)](function (_0x157bae) {
                    var _0x5de569 = _0x58c5e9;
                    0x0 === (_0x1368f3 = _0x2ec1b5['_ackPacket'][_0x157bae])[_0x5de569(0x490)] ? _0x1368f3[_0x5de569(0x490)]++ : _0x1368f3[_0x5de569(0x490)] < _0x2ec1b5['maxRetry'] ? (_0x197676(_0x157bae, _0x1368f3[_0x5de569(0x1cd)], _0x1368f3['counter']), _0x1368f3[_0x5de569(0x490)]++) : (delete _0x2ec1b5[_0x5de569(0x487)][_0x157bae], _0xdf8ebc(_0x1368f3[_0x5de569(0x1cd)]));
                  });
                }, _0x15deee['prototype'][_0x297aa4(0x1d2)] = function (_0x321d57) {
                  var _0x21397b = _0x297aa4,
                      _0x2717a7 = this['_ackPacket'][_0x321d57];
                  return delete this[_0x21397b(0x487)][_0x321d57], _0x2717a7 ? _0x2717a7[_0x21397b(0x1cd)] : null;
                }, _0x15deee['prototype'][_0x297aa4(0x24d)] = function (_0x5d07e3) {
                  var _0x526744 = _0x297aa4,
                      _0x23102e = this;

                  Object[_0x526744(0x3ef)](this[_0x526744(0x487)])[_0x526744(0x37b)](function (_0x4c7e1e) {
                    var _0x27cba1 = _0x526744;
                    _0x23102e[_0x27cba1(0x487)][_0x4c7e1e]['counter'] = _0x5d07e3;
                  });
                }, _0x15deee[_0x297aa4(0x267)][_0x297aa4(0x1f0)] = function (_0x179caf, _0x581335) {
                  var _0x208941 = _0x297aa4;
                  this[_0x208941(0x487)][_0x179caf][_0x208941(0x490)] = _0x581335;
                }, _0x15deee['prototype'][_0x297aa4(0x184)] = function () {
                  var _0x27ee6e = _0x297aa4;
                  this[_0x27ee6e(0x487)] = {};
                }, _0x15deee;
              }();

              _0x3d86d2[_0x4fe376(0x368)] = _0x166b3a;
            },
            0x1d8f: function _(_0x1a5ea6, _0x3e8a6e, _0x3c90f7) {
              var _0x4e66e9 = a1_0x1adc;

              var _0x312773 = this && this[_0x4e66e9(0x395)] || function (_0x5407fc) {
                var _0x1270ef = _0x4e66e9;
                return _0x5407fc && _0x5407fc[_0x1270ef(0x2ab)] ? _0x5407fc : {
                  'default': _0x5407fc
                };
              };

              Object[_0x4e66e9(0x42b)](_0x3e8a6e, _0x4e66e9(0x2ab), {
                'value': !0x0
              }), _0x3e8a6e[_0x4e66e9(0x1a9)] = void 0x0;

              var _0x3ef7a1 = _0x3c90f7(0xa79),
                  _0x43d17f = _0x312773(_0x3c90f7(0x7e9)),
                  _0x26e4cf = _0x312773(_0x3c90f7(0x1c13)),
                  _0x23c0fd = _0x3c90f7(0x1a99),
                  _0xaa19d2 = _0x312773(_0x3c90f7(0x2501)),
                  _0x2bbbc9 = _0x3c90f7(0x11f2),
                  _0x557a7c = 'v5',
                  _0x5942ce = 'v4',
                  _0x10b9f4 = 'v5',
                  _0x2d1576 = function () {
                var _0x3a6c24 = _0x4e66e9;

                function _0x54df50(_0xa251a0) {
                  var _0x3ae0f8 = a1_0x1adc;
                  this[_0x3ae0f8(0x12c)] = [], this[_0x3ae0f8(0x224)] = [], this[_0x3ae0f8(0x408)] = 0x0, this[_0x3ae0f8(0x377)] = _0x557a7c, this['_latency'] = {
                    'listLastLatency': [],
                    'maxLastLatency': 0x5,
                    'currentLatencyIdx': -0x1,
                    'averageLatency': 0x96
                  }, this[_0x3ae0f8(0x407)] = 0x0, this['_socket'] = null, this[_0x3ae0f8(0x31c)] = '', this[_0x3ae0f8(0x380)] = null, this['_opt'] = this[_0x3ae0f8(0x1fe)](_0xa251a0), this[_0x3ae0f8(0x2c9)] = new _0x26e4cf[_0x3ae0f8(0x4b4)](), this['_packetManager'] = new _0x3ef7a1[_0x3ae0f8(0x368)](this[_0x3ae0f8(0x294)][_0x3ae0f8(0x301)]), this[_0x3ae0f8(0x297)] = _0x54df50[_0x3ae0f8(0x1be)], this['_initNewConnection']();
                }

                return _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x4b5)] = function () {
                  var _0x53b230 = _0x3a6c24;
                  return _0x53b230(0x2fc)[_0x53b230(0x46f)](this['_opt'][_0x53b230(0x2a7)], _0x53b230(0x3f7))[_0x53b230(0x46f)](_0x557a7c, _0x53b230(0x39a))[_0x53b230(0x46f)](this[_0x53b230(0x294)]['env'], '&games=')[_0x53b230(0x46f)](this[_0x53b230(0x294)][_0x53b230(0x222)], _0x53b230(0x322))[_0x53b230(0x46f)](this[_0x53b230(0x294)][_0x53b230(0x13c)]);
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x12b)] = function () {
                  var _0x3ff5dc = _0x3a6c24,
                      _0x27a77b = this;

                  Object[_0x3ff5dc(0x3ef)](_0x23c0fd[_0x3ff5dc(0x381)])[_0x3ff5dc(0x37b)](function (_0x401b54) {
                    var _0x43808f = _0x3ff5dc;
                    delete _0x23c0fd[_0x43808f(0x381)][_0x401b54];
                  }), this[_0x3ff5dc(0x297)] !== _0x54df50['STATUS_KILLED'] ? (this['_socket'] = _0x23c0fd(''[_0x3ff5dc(0x46f)](this['_opt'][_0x3ff5dc(0x1a0)], '/?')['concat'](this[_0x3ff5dc(0x4b5)]()), {
                    'transports': this[_0x3ff5dc(0x294)][_0x3ff5dc(0x3a3)],
                    'reconnection': !0x0,
                    'forceNew': this['_opt'][_0x3ff5dc(0x3b2)],
                    'reconnectionAttempts': this['_opt'][_0x3ff5dc(0x3ab)] || 0xa,
                    'reconnectionDelay': this['_opt'][_0x3ff5dc(0x344)] || 0x1f4,
                    'randomizationFactor': 0x0,
                    'rememberUpgrade': !0x0,
                    'timestampRequests': !0x0,
                    'parser': _0xaa19d2[_0x3ff5dc(0x4b4)]
                  }), this[_0x3ff5dc(0x407)] = 0x0, this[_0x3ff5dc(0x448)](this[_0x3ff5dc(0x10a)]), this['_handleConnectionStatus'](this[_0x3ff5dc(0x10a)]), this[_0x3ff5dc(0x12c)][_0x3ff5dc(0x37b)](function (_0x20ecd0) {
                    var _0x36206c = _0x3ff5dc;

                    _0x27a77b[_0x36206c(0x38f)](_0x20ecd0);
                  }), _0x43d17f['default'][_0x3ff5dc(0x29a)](_0x3ff5dc(0x113))) : _0x43d17f[_0x3ff5dc(0x4b4)]['debug'](_0x3ff5dc(0x483));
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x1fe)] = function (_0x164772) {
                  var _0x16d27e = _0x3a6c24;
                  return {
                    'url': _0x164772[_0x16d27e(0x1a0)] || '',
                    'token': _0x164772[_0x16d27e(0x2a7)] || '',
                    'numberRetrySendingMessage': _0x164772[_0x16d27e(0x301)] || 0x2,
                    'forceNew': _0x164772['forceNew'] || !0x1,
                    'transports': _0x164772[_0x16d27e(0x3a3)] || [_0x16d27e(0x254)],
                    'reconnectionDelay': _0x164772[_0x16d27e(0x344)] || 0x3e8,
                    'reconnectionDelayMax': _0x164772[_0x16d27e(0x256)] || 0xbb8,
                    'reconnectionAttempts': _0x164772[_0x16d27e(0x3ab)] || 0x3,
                    'nextTickIn': _0x164772['nextTickIn'] || 0xc8,
                    'pingTimeoutWarning': 0x258,
                    'env': _0x164772[_0x16d27e(0x498)] || 'portal',
                    'games': _0x164772[_0x16d27e(0x222)] || _0x16d27e(0x120),
                    'ssid': _0x164772[_0x16d27e(0x13c)] || _0x164772['token'] || ''
                  };
                }, _0x54df50[_0x3a6c24(0x267)]['_handleReponseMessage'] = function (_0x58ad20) {
                  var _0x266303 = _0x3a6c24,
                      _0x111cb0 = this;

                  _0x58ad20['on'](_0x54df50['SOCKET_RESPONSE_EVENT'], function (_0x3296ec, _0x40cd56) {
                    var _0x4079b9 = a1_0x1adc;
                    _0x40cd56 && _0x40cd56(), _0x3296ec && (_0x3296ec['v'] === _0x5942ce && (_0x3296ec = {
                      'messageId': _0x3296ec['id'],
                      'data': {
                        'event': _0x3296ec['da']['ev'],
                        'svt': _0x3296ec['da']['svt'],
                        'serviceId': _0x3296ec['da'][_0x4079b9(0x3c7)],
                        'eventId': _0x3296ec['da'][_0x4079b9(0x4ac)],
                        'data': _0x3296ec['da']['da'],
                        'channelType': _0x3296ec['da']['ch']
                      },
                      'version': _0x3296ec['v']
                    }), _0x111cb0[_0x4079b9(0x2c9)]['emit'](_0x54df50[_0x4079b9(0x4ce)], _0x3296ec));
                  }), _0x58ad20['on'](_0x54df50['SOCKET_RESPONSE_EVENT_V5_1'], function (_0xcdaaf3, _0x2e54c8) {
                    var _0x2d03f7 = a1_0x1adc;

                    if (_0x2e54c8 && _0x2e54c8(), _0xcdaaf3) {
                      for (var _0x4b3d0e = new Uint8Array(_0xcdaaf3), _0x13a00a = 0x0; _0x13a00a < _0x4b3d0e[_0x2d03f7(0x109)]; _0x13a00a++) _0x4b3d0e[_0x13a00a]--;

                      _0xcdaaf3 = _0x2bbbc9[_0x2d03f7(0x32f)]['decode'](_0x4b3d0e), _0x43d17f[_0x2d03f7(0x4b4)]['debug']('SocketManagerNewMessage:\x20%s', _0xcdaaf3), _0xcdaaf3 = {
                        'messageId': (_0xcdaaf3 = JSON[_0x2d03f7(0x41c)](_0xcdaaf3))['id'],
                        'data': {
                          'event': _0xcdaaf3['da']['ev'],
                          'svt': _0xcdaaf3['da'][_0x2d03f7(0x2cd)],
                          'serviceId': _0xcdaaf3['da'][_0x2d03f7(0x3c7)],
                          'eventId': _0xcdaaf3['da'][_0x2d03f7(0x4ac)],
                          'data': _0xcdaaf3['da']['da'],
                          'channelType': _0xcdaaf3['da']['ch']
                        },
                        'version': _0xcdaaf3['v']
                      }, _0x111cb0[_0x2d03f7(0x2c9)][_0x2d03f7(0x426)](_0x54df50[_0x2d03f7(0x4ce)], _0xcdaaf3);
                    }
                  }), _0x58ad20['on'](_0x54df50['SOCKET_RESPONSE_EVENT_V5_2'], function (_0x5db25b, _0x9f36dc) {
                    var _0x697ccf = a1_0x1adc;

                    if (_0x9f36dc && _0x9f36dc(), _0x5db25b && _0x111cb0[_0x697ccf(0x380)]) {
                      for (var _0x4c34b5 = new Uint8Array(_0x5db25b), _0x3db2cc = 0x0; _0x3db2cc < _0x4c34b5[_0x697ccf(0x109)]; _0x3db2cc++) _0x4c34b5[_0x3db2cc] = _0x4c34b5[_0x3db2cc] ^ _0x111cb0[_0x697ccf(0x380)][_0x3db2cc % _0x111cb0[_0x697ccf(0x380)][_0x697ccf(0x109)]];

                      _0x5db25b = _0x2bbbc9[_0x697ccf(0x32f)][_0x697ccf(0x2a8)](_0x4c34b5), _0x43d17f[_0x697ccf(0x4b4)]['debug']('SocketManagerNewMessage:\x20%s', _0x5db25b), _0x5db25b = {
                        'messageId': (_0x5db25b = JSON[_0x697ccf(0x41c)](_0x5db25b))['id'],
                        'data': {
                          'event': _0x5db25b['da']['ev'],
                          'svt': _0x5db25b['da']['svt'],
                          'serviceId': _0x5db25b['da'][_0x697ccf(0x3c7)],
                          'eventId': _0x5db25b['da'][_0x697ccf(0x4ac)],
                          'data': _0x5db25b['da']['da'],
                          'channelType': _0x5db25b['da']['ch']
                        },
                        'version': _0x5db25b['v']
                      }, _0x111cb0[_0x697ccf(0x2c9)][_0x697ccf(0x426)](_0x54df50['NEW_MESSAGE_EVENT'], _0x5db25b);
                    } else _0x43d17f[_0x697ccf(0x4b4)][_0x697ccf(0x282)]('SocketManagerNewMessage:\x20CANNOT\x20parse\x20message:\x20%s,\x20keyAB:\x20%j', _0x5db25b, _0x111cb0[_0x697ccf(0x380)]);
                  }), _0x58ad20['on'](_0x266303(0x431), function (_0x1b7963) {
                    var _0x94ba06 = _0x266303;
                    _0x1b7963 && (_0x43d17f[_0x94ba06(0x4b4)][_0x94ba06(0x29a)](_0x94ba06(0x266), _0x1b7963), _0x111cb0[_0x94ba06(0x2c9)]['emit'](_0x54df50[_0x94ba06(0x4ce)], {
                      'messageId': _0x1b7963[_0x94ba06(0x147)],
                      'data': {
                        'event': 'chat-event',
                        'eventId': _0x1b7963['messageId'],
                        'serviceId': _0x1b7963[_0x94ba06(0x28e)][_0x94ba06(0x46c)],
                        'channelType': _0x94ba06(0x238),
                        'data': _0x1b7963['data']
                      }
                    }));
                  }), _0x58ad20['on'](_0x266303(0x445), function (_0x36c129) {
                    var _0x1a7b82 = _0x266303;
                    _0x36c129['server'];

                    var _0x38d1a2 = _0x36c129[_0x1a7b82(0x239)];

                    _0x111cb0[_0x1a7b82(0x377)] = _0x557a7c, _0x111cb0['_sId'] = _0x38d1a2, _0x111cb0['updateKeyAB'](_0x38d1a2), _0x111cb0[_0x1a7b82(0x2c9)][_0x1a7b82(0x426)](_0x54df50[_0x1a7b82(0x4bd)]);
                  }), _0x58ad20['on'](_0x266303(0x1eb), function (_0x51a730) {
                    var _0x3e00dc = _0x266303,
                        _0x2e5183 = _0x51a730[_0x3e00dc(0x2a7)];

                    _0x111cb0['_emitter'][_0x3e00dc(0x426)](_0x54df50[_0x3e00dc(0x1b8)], {
                      'token': _0x2e5183
                    }), _0x111cb0[_0x3e00dc(0x2f9)](_0x2e5183);
                  });
                }, _0x54df50['prototype']['_handleConnectionStatus'] = function (_0x5eecbe) {
                  var _0x2f168f = _0x3a6c24,
                      _0x1add10,
                      _0x152103,
                      _0x7cc87a,
                      _0x485e6e = this,
                      _0x29358a = function _0x29358a() {
                    var _0x1b2ca1 = a1_0x1adc,
                        _0x1dc3ab = !0x1,
                        _0x1faabe = [];

                    if (_0x485e6e[_0x1b2ca1(0x2c6)][_0x1b2ca1(0x40f)](function (_0x55cd56, _0x18825d, _0x31dde2) {
                      var _0x48d4d9 = _0x1b2ca1;

                      _0x485e6e[_0x48d4d9(0x2c6)]['updateCounter'](_0x55cd56, _0x31dde2 + 0x1);
                    }, function (_0x52ef3a) {
                      var _0x2f6c0a = _0x1b2ca1;
                      _0x1faabe['push'](_0x52ef3a[_0x2f6c0a(0x147)]), _0x1dc3ab = !0x0;
                    }), _0x1dc3ab && _0x1faabe[_0x1b2ca1(0x37b)](function (_0x213d67) {
                      var _0x1dad0b = _0x1b2ca1;
                      _0x43d17f[_0x1dad0b(0x4b4)]['debug'](_0x1dad0b(0x17e), _0x213d67), _0x485e6e['_emitter'][_0x1dad0b(0x426)](_0x54df50['CAN_NOT_SEND_MESSAGE_EVENT'], _0x213d67);
                    }), _0x485e6e[_0x1b2ca1(0x2c6)][_0x1b2ca1(0x151)]()) {
                      var _0x23901b = _0x485e6e[_0x1b2ca1(0x112)][_0x1b2ca1(0x229)];

                      _0x1add10 = setTimeout(function () {
                        _0x29358a();
                      }, _0x23901b);
                    } else _0x1add10 = setTimeout(function () {
                      _0x29358a();
                    }, 0x96);
                  },
                      _0x483c5f = function _0x483c5f() {
                    var _0x180e77 = a1_0x1adc;
                    _0x43d17f[_0x180e77(0x4b4)][_0x180e77(0x29a)](_0x180e77(0x43b)), clearTimeout(_0x1add10), clearTimeout(_0x152103), clearTimeout(_0x7cc87a), _0x485e6e[_0x180e77(0x2c6)][_0x180e77(0x184)]();
                  };

                  _0x5eecbe['on'](_0x2f168f(0x150), function () {
                    var _0x131e84 = _0x2f168f;
                    _0x485e6e[_0x131e84(0x297)] = _0x54df50[_0x131e84(0x284)], _0x485e6e['_countPingOverTime'] = 0x0, _0x485e6e[_0x131e84(0x224)][_0x131e84(0x109)] > 0x0 && _0x485e6e['_pendingSubscribeChannelList'][_0x131e84(0x37b)](function (_0x3aa3bf) {
                      var _0x43c0a3 = _0x131e84;

                      _0x485e6e[_0x43c0a3(0x2fe)](_0x3aa3bf);
                    }), _0x485e6e[_0x131e84(0x224)] = [], _0x29358a(), clearTimeout(_0x152103), clearTimeout(_0x7cc87a), _0x43d17f['default'][_0x131e84(0x29a)](_0x131e84(0x240));
                  }), _0x5eecbe['on'](_0x2f168f(0x2db), function () {
                    var _0x1c6a41 = _0x2f168f;
                    _0x43d17f[_0x1c6a41(0x4b4)][_0x1c6a41(0x29a)](_0x1c6a41(0x31f)), _0x43d17f[_0x1c6a41(0x4b4)][_0x1c6a41(0x29a)](_0x1c6a41(0x310)), clearTimeout(_0x1add10), _0x152103 = setTimeout(function () {
                      var _0x3e417f = _0x1c6a41;

                      _0x485e6e[_0x3e417f(0x2c9)][_0x3e417f(0x426)](_0x54df50['DISCONNECTED_CONNECTION']);
                    }, 0x2710), _0x7cc87a = setTimeout(function () {
                      var _0x534eea = _0x1c6a41;

                      _0x485e6e[_0x534eea(0x2c9)]['emit'](_0x54df50[_0x534eea(0x246)]);
                    }, 0x3a98);
                  }), _0x5eecbe['on']('reconnecting', function (_0x468142) {
                    var _0x4e4d15 = _0x2f168f;
                    _0x485e6e[_0x4e4d15(0x407)] = _0x468142;
                  }), _0x5eecbe['on'](_0x2f168f(0x430), function (_0x4b7952) {
                    var _0x40f559 = _0x2f168f;
                    _0x43d17f['default'][_0x40f559(0x29a)](_0x40f559(0x230)[_0x40f559(0x46f)](_0x485e6e[_0x40f559(0x407)], '\x20times.\x20')['concat'](_0x485e6e['_opt'][_0x40f559(0x3ab)])), _0x485e6e['_reconnect_attempt'] >= _0x485e6e[_0x40f559(0x294)][_0x40f559(0x3ab)] ? (_0x485e6e[_0x40f559(0x3f5)](), _0x485e6e[_0x40f559(0x297)] = _0x54df50[_0x40f559(0x3a0)], _0x483c5f(), _0x43d17f['default'][_0x40f559(0x29a)](_0x40f559(0x4d8)), _0x485e6e[_0x40f559(0x2c9)][_0x40f559(0x426)](_0x54df50[_0x40f559(0x475)])) : _0x485e6e[_0x40f559(0x2c9)][_0x40f559(0x426)](_0x54df50[_0x40f559(0x1b1)]);
                  }), _0x5eecbe['on'](_0x2f168f(0x424), function (_0x3d0a01) {
                    var _0x2743e3 = _0x2f168f;
                    _0x43d17f[_0x2743e3(0x4b4)][_0x2743e3(0x29a)](_0x2743e3(0x15f)), _0x485e6e[_0x2743e3(0x3f5)](), _0x485e6e[_0x2743e3(0x297)] = _0x54df50[_0x2743e3(0x3a0)], _0x483c5f(), _0x43d17f[_0x2743e3(0x4b4)][_0x2743e3(0x29a)](_0x2743e3(0x429)), _0x485e6e[_0x2743e3(0x2c9)][_0x2743e3(0x426)](_0x54df50['CAN_NOT_CONNECT_EVENT']);
                  }), _0x5eecbe['on'](_0x2f168f(0x3e5), function () {
                    var _0x5edbb8 = _0x2f168f;

                    _0x43d17f[_0x5edbb8(0x4b4)][_0x5edbb8(0x29a)]('ping');
                  }), _0x5eecbe['on'](_0x2f168f(0x3ed), function (_0x39c515) {
                    var _0x4e450f = _0x2f168f;
                    _0x39c515 > _0x485e6e['_opt']['pingTimeoutWarning'] ? _0x485e6e['_countPingOverTime']++ : _0x485e6e[_0x4e450f(0x408)] = 0x0, _0x485e6e[_0x4e450f(0x408)] >= 0x5 && (_0x485e6e[_0x4e450f(0x2c9)]['emit'](_0x54df50['POOR_CONNECTION']), _0x485e6e[_0x4e450f(0x408)] = 0x0), _0x485e6e[_0x4e450f(0x112)]['currentLatencyIdx'] = ++_0x485e6e['_latency']['currentLatencyIdx'] % _0x485e6e[_0x4e450f(0x112)][_0x4e450f(0x4d3)], _0x485e6e[_0x4e450f(0x112)][_0x4e450f(0x42a)][_0x485e6e[_0x4e450f(0x112)][_0x4e450f(0x370)]] = _0x39c515, _0x485e6e[_0x4e450f(0x112)][_0x4e450f(0x229)] = _0x485e6e['_latency'][_0x4e450f(0x42a)]['reduce'](function (_0x3a508d, _0x2dff68) {
                      return _0x3a508d + _0x2dff68;
                    }, 0x0) / _0x485e6e['_latency'][_0x4e450f(0x42a)][_0x4e450f(0x109)], _0x485e6e[_0x4e450f(0x112)][_0x4e450f(0x229)] < 0x96 && (_0x485e6e[_0x4e450f(0x112)][_0x4e450f(0x229)] = 0x96), _0x43d17f['default'][_0x4e450f(0x29a)](_0x4e450f(0x1ac), _0x39c515, _0x485e6e['_latency'][_0x4e450f(0x229)]), _0x485e6e[_0x4e450f(0x2c9)][_0x4e450f(0x426)](_0x54df50[_0x4e450f(0x3fd)], {
                      'latency': _0x39c515,
                      'averageLatency': _0x485e6e[_0x4e450f(0x112)][_0x4e450f(0x229)]
                    });
                  });
                }, _0x54df50['prototype'][_0x3a6c24(0x269)] = function (_0x4db9b8, _0x4867a3, _0x579c0d) {
                  var _0xe5851f = _0x3a6c24,
                      _0x58127c = this;

                  if (this[_0xe5851f(0x10a)] && this[_0xe5851f(0x10a)]['connected']) {
                    var _0x31e55f = _0x4867a3;
                    this[_0xe5851f(0x377)] !== _0x5942ce && this['_serverSocketVersion'] !== _0x10b9f4 || (_0x31e55f = {
                      'id': _0x4867a3[_0xe5851f(0x147)],
                      'da': {
                        'ev': _0x4867a3[_0xe5851f(0x28e)]['event'],
                        'da': _0x4867a3[_0xe5851f(0x28e)][_0xe5851f(0x28e)],
                        'v': _0x4867a3['data'][_0xe5851f(0x49a)] ? _0x4867a3['data'][_0xe5851f(0x49a)] : 0x1
                      }
                    });

                    var _0x2e9687 = this[_0xe5851f(0x3c5)](_0x4db9b8, _0x31e55f);

                    this[_0xe5851f(0x10a)][_0xe5851f(0x312)][_0x4db9b8] = function () {
                      var _0x209be2 = _0xe5851f,
                          _0x27ac4b = _0x58127c[_0x209be2(0x2c6)]['ackPacket'](_0x4db9b8);

                      _0x27ac4b && (_0x43d17f[_0x209be2(0x4b4)][_0x209be2(0x29a)](_0x209be2(0x48b), _0x27ac4b[_0x209be2(0x147)]), _0x58127c[_0x209be2(0x2c9)][_0x209be2(0x426)](_0x54df50[_0x209be2(0x4d0)], _0x27ac4b[_0x209be2(0x147)]));
                    }, _0x43d17f[_0xe5851f(0x4b4)][_0xe5851f(0x29a)](_0xe5851f(0x391), _0x579c0d, _0x4867a3[_0xe5851f(0x147)]), this[_0xe5851f(0x10a)][_0xe5851f(0x43e)](_0x2e9687);
                  } else this[_0xe5851f(0x2c6)][_0xe5851f(0x1f0)](_0x4db9b8, _0x579c0d + 0x1);
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x3c5)] = function (_0x4f305f, _0x59cd31) {
                  var _0x2b7f14 = _0x3a6c24;
                  return {
                    'type': this[_0x2b7f14(0x3f8)](),
                    'options': {
                      'compress': !0x0
                    },
                    'id': _0x4f305f,
                    'data': this['_encrypt'](_0x59cd31)
                  };
                }, _0x54df50[_0x3a6c24(0x267)]['_getPacketType'] = function () {
                  var _0x560b27 = _0x3a6c24;
                  return this[_0x560b27(0x377)] === _0x10b9f4 ? 0x5 : 0x2;
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x3ff)] = function (_0x1e23be) {
                  var _0x287593 = _0x3a6c24,
                      _0x990c98 = _0x54df50[_0x287593(0x231)];

                  return this[_0x287593(0x377)] === _0x5942ce ? _0x990c98 = _0x54df50['SOCKET_REQUEST_EVENT_V4'] : this[_0x287593(0x377)] === _0x10b9f4 && (_0x1e23be = JSON[_0x287593(0x2eb)](_0x1e23be), _0x990c98 = _0x54df50['SOCKET_REQUEST_EVENT_V5_2'], _0x1e23be = this['_encrypt_5_2'](_0x1e23be)), [_0x990c98, _0x1e23be];
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x27d)] = function (_0x4ddd6) {
                  var _0xca017d = _0x3a6c24;

                  for (var _0x3afe25 = _0x2bbbc9[_0xca017d(0x400)][_0xca017d(0x2bf)](_0x4ddd6), _0x1f91e9 = 0x0; _0x1f91e9 < _0x3afe25['length']; _0x1f91e9++) _0x3afe25[_0x1f91e9]++;

                  return _0x3afe25['buffer'];
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x283)] = function (_0x56651a) {
                  var _0x5060a8 = _0x3a6c24;

                  if (this[_0x5060a8(0x380)]) {
                    for (var _0x59dc7f = _0x2bbbc9['TextEncoder'][_0x5060a8(0x2bf)](_0x56651a), _0x4696a5 = 0x0; _0x4696a5 < _0x59dc7f[_0x5060a8(0x109)]; _0x4696a5++) _0x59dc7f[_0x4696a5] = _0x59dc7f[_0x4696a5] ^ this['_keyAB'][_0x4696a5 % this[_0x5060a8(0x380)]['length']];

                    return _0x59dc7f[_0x5060a8(0x477)];
                  }

                  return _0x43d17f['default']['error']('_encrypt_5_2\x20CANNOT\x20encrypt:\x20%s', _0x56651a), null;
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x2f9)] = function (_0x115bc0) {
                  var _0x4986f7 = _0x3a6c24;
                  this[_0x4986f7(0x10a)] && (this[_0x4986f7(0x294)]['token'] = _0x115bc0, this[_0x4986f7(0x10a)]['io'][_0x4986f7(0x1c7)][_0x4986f7(0x174)] = this[_0x4986f7(0x4b5)](), this[_0x4986f7(0x10a)]['io'][_0x4986f7(0x3d1)] = ''[_0x4986f7(0x46f)](this[_0x4986f7(0x294)]['url'], '/?')[_0x4986f7(0x46f)](this[_0x4986f7(0x4b5)]())), this[_0x4986f7(0x294)]['token'] = _0x115bc0;
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x111)] = function (_0x342eb1) {
                  var _0x321985 = _0x3a6c24;

                  _0x43d17f['default'][_0x321985(0x29a)](_0x321985(0x406), _0x342eb1);

                  var _0x42a9d1 = this[_0x321985(0x2c6)]['addNew'](_0x342eb1);

                  this[_0x321985(0x269)](_0x42a9d1, _0x342eb1, 0x0);
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x31b)] = function (_0x33bb3d) {
                  var _0x1a5b13 = _0x3a6c24;
                  _0x33bb3d = _0x33bb3d || [], this[_0x1a5b13(0x2c6)][_0x1a5b13(0x31b)](function (_0x9d166f) {
                    var _0xfc8bcc = _0x1a5b13;
                    return _0x33bb3d['includes'](_0x9d166f[_0xfc8bcc(0x147)]);
                  });
                }, _0x54df50['prototype'][_0x3a6c24(0x333)] = function (_0x1ab446) {
                  var _0x186123 = _0x3a6c24;
                  _0x43d17f['default']['debug']('SocketManager\x20-\x20sendChatMessage:\x20%j', _0x1ab446), this['_socket'][_0x186123(0x426)](_0x186123(0x299), _0x1ab446);
                }, _0x54df50[_0x3a6c24(0x267)]['registerEvent'] = function (_0x1c2ff9, _0x2d0936) {
                  this['_emitter']['on'](_0x1c2ff9, _0x2d0936);
                }, _0x54df50['prototype'][_0x3a6c24(0x20a)] = function (_0x5a5f79, _0x22b07e) {
                  var _0x36301b = _0x3a6c24;

                  this[_0x36301b(0x2c9)][_0x36301b(0x126)](_0x5a5f79, _0x22b07e);
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x2fe)] = function (_0x2f2114) {
                  var _0x85c744 = _0x3a6c24;
                  _0x2f2114 && (_0x2f2114 = _0x2f2114[_0x85c744(0x27c)](_0x85c744(0x238), 'p'), this[_0x85c744(0x12c)][_0x85c744(0x220)](_0x2f2114) || (this[_0x85c744(0x10a)][_0x85c744(0x1d0)] ? (this['_subscribeChannelList'][_0x85c744(0x4c0)](_0x2f2114), this[_0x85c744(0x38f)](_0x2f2114)) : this['_pendingSubscribeChannelList'][_0x85c744(0x4c0)](_0x2f2114)));
                }, _0x54df50[_0x3a6c24(0x267)]['_subscribe'] = function (_0x23808c) {
                  var _0x4736b7 = _0x3a6c24,
                      _0x1302c0 = _0x23c0fd(''[_0x4736b7(0x46f)](this['_opt'][_0x4736b7(0x1a0)], '/')['concat'](_0x23808c, '?token=')['concat'](this[_0x4736b7(0x294)][_0x4736b7(0x2a7)], '&sv=')[_0x4736b7(0x46f)](_0x557a7c));

                  this['_handleReponseMessage'](_0x1302c0);
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x3dd)] = function (_0x5a8f37) {
                  var _0x532b94 = _0x3a6c24;
                  _0x5a8f37 && (_0x5a8f37 = _0x5a8f37[_0x532b94(0x27c)](_0x532b94(0x238), 'p'), this[_0x532b94(0x12c)]['includes'](_0x5a8f37) && (this[_0x532b94(0x12c)]['splice'](this[_0x532b94(0x12c)]['indexOf'](_0x5a8f37), 0x1), this['_unSubscribe'](_0x5a8f37)), this[_0x532b94(0x224)]['includes'](_0x5a8f37) && this[_0x532b94(0x224)][_0x532b94(0x35b)](this[_0x532b94(0x224)][_0x532b94(0x458)](_0x5a8f37), 0x1));
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x48f)] = function (_0x48895) {
                  var _0x3411b3 = _0x3a6c24,
                      _0x3650de = this['_socket']['io'][_0x3411b3(0x281)]['/'[_0x3411b3(0x46f)](_0x48895)];

                  _0x3650de && (_0x3650de['close'](), _0x3650de[_0x3411b3(0x1b5)](), delete this[_0x3411b3(0x10a)]['io'][_0x3411b3(0x281)]['/'['concat'](_0x48895)]);
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x3f5)] = function () {
                  var _0x3da21d = _0x3a6c24,
                      _0x920c68 = this;

                  Object[_0x3da21d(0x3ef)](this['_socket']['io'][_0x3da21d(0x281)])[_0x3da21d(0x37b)](function (_0x2191cb) {
                    var _0x37b71b = _0x3da21d,
                        _0x3c72b3 = _0x920c68[_0x37b71b(0x10a)]['io'][_0x37b71b(0x281)][_0x2191cb];

                    _0x3c72b3 && (_0x3c72b3[_0x37b71b(0x1b9)](), _0x3c72b3[_0x37b71b(0x1b5)](), delete _0x920c68[_0x37b71b(0x10a)]['io'][_0x37b71b(0x281)][_0x2191cb]);
                  });
                }, _0x54df50['prototype'][_0x3a6c24(0x1b9)] = function () {
                  var _0x2c8369 = _0x3a6c24;
                  this[_0x2c8369(0x3f5)](), this[_0x2c8369(0x297)] = _0x54df50[_0x2c8369(0x3a0)], this['_emitter'][_0x2c8369(0x1b5)](), this[_0x2c8369(0x2c6)][_0x2c8369(0x184)]();
                }, _0x54df50[_0x3a6c24(0x267)][_0x3a6c24(0x2f1)] = function () {
                  var _0x38b8a2 = _0x3a6c24;
                  this[_0x38b8a2(0x3f5)](), this[_0x38b8a2(0x12b)]();
                }, _0x54df50[_0x3a6c24(0x267)]['isAbleSendingData'] = function () {
                  var _0x477790 = _0x3a6c24;
                  return this[_0x477790(0x297)] !== _0x54df50[_0x477790(0x3a0)];
                }, _0x54df50[_0x3a6c24(0x267)]['updateKeyAB'] = function (_0x2ad79f) {
                  var _0x3ec857 = _0x3a6c24,
                      _0x14cedf = _0x3ec857(0x2b5);

                  _0x2ad79f && (_0x14cedf = _0x2ad79f[_0x3ec857(0x495)](0x9, 0xd));

                  for (var _0x540f9d = new ArrayBuffer(0x4), _0x1bc188 = new Uint8Array(_0x540f9d), _0x13fb39 = 0x0; _0x13fb39 < _0x14cedf[_0x3ec857(0x109)]; _0x13fb39++) _0x1bc188[_0x13fb39] = _0x14cedf[_0x3ec857(0x3ca)](_0x13fb39) % 0x80;

                  this['_keyAB'] = _0x1bc188;
                }, _0x54df50['SOCKET_REQUEST_EVENT'] = 'q', _0x54df50['SOCKET_RESPONSE_EVENT'] = 'p', _0x54df50['SOCKET_RESPONSE_EVENT_V5_1'] = '1', _0x54df50[_0x3a6c24(0x451)] = '2', _0x54df50[_0x3a6c24(0x231)] = 'q', _0x54df50[_0x3a6c24(0x3c6)] = 'q4', _0x54df50[_0x3a6c24(0x32c)] = 'q51', _0x54df50[_0x3a6c24(0x202)] = _0x3a6c24(0x275), _0x54df50[_0x3a6c24(0x4bd)] = _0x3a6c24(0x1d0), _0x54df50[_0x3a6c24(0x475)] = _0x3a6c24(0x1c4), _0x54df50[_0x3a6c24(0x273)] = _0x3a6c24(0x42d), _0x54df50[_0x3a6c24(0x4d0)] = _0x3a6c24(0x233), _0x54df50['NEW_MESSAGE_EVENT'] = 'new-message', _0x54df50['CHAT_MESSAGE_EVENT'] = 'chat-message', _0x54df50[_0x3a6c24(0x3fd)] = _0x3a6c24(0x464), _0x54df50['UPDATE_TOKEN'] = _0x3a6c24(0x1eb), _0x54df50[_0x3a6c24(0x1b1)] = _0x3a6c24(0x397), _0x54df50[_0x3a6c24(0x246)] = _0x3a6c24(0x46d), _0x54df50[_0x3a6c24(0x1fd)] = _0x3a6c24(0x21c), _0x54df50[_0x3a6c24(0x1be)] = 'init', _0x54df50['STATUS_ALIVE'] = _0x3a6c24(0x4cd), _0x54df50[_0x3a6c24(0x3a0)] = 'killed', _0x54df50;
              }();

              _0x3e8a6e['SocketManager'] = _0x2d1576;
            },
            0x35: function _(_0x4e6b0c, _0xffe363, _0x30932e) {
              var _0x1e6325 = a1_0x1adc;

              var _0x4b21c1 = _0x30932e(0x16c2),
                  _0x3fd241 = _0x30932e(0x141a),
                  _0x53ee68 = Object[_0x1e6325(0x267)][_0x1e6325(0x1c8)],
                  _0x4f53d7 = _0x1e6325(0x23a) == typeof Blob || _0x1e6325(0x121) != typeof Blob && _0x1e6325(0x177) === _0x53ee68[_0x1e6325(0x20b)](Blob),
                  _0x3280c0 = _0x1e6325(0x23a) == typeof File || _0x1e6325(0x121) != typeof File && '[object\x20FileConstructor]' === _0x53ee68[_0x1e6325(0x20b)](File);

              function _0x2b2df9(_0x48e1da, _0x3912b9) {
                var _0x3cde35 = _0x1e6325;
                if (!_0x48e1da) return _0x48e1da;

                if (_0x3fd241(_0x48e1da)) {
                  var _0x4306b2 = {
                    'p': 0x1,
                    'n': _0x3912b9['length']
                  };
                  return _0x3912b9['push'](_0x48e1da), _0x4306b2;
                }

                if (_0x4b21c1(_0x48e1da)) {
                  for (var _0x1f3fd1 = new Array(_0x48e1da[_0x3cde35(0x109)]), _0x530779 = 0x0; _0x530779 < _0x48e1da[_0x3cde35(0x109)]; _0x530779++) _0x1f3fd1[_0x530779] = _0x2b2df9(_0x48e1da[_0x530779], _0x3912b9);

                  return _0x1f3fd1;
                }

                if (_0x3cde35(0x26e) == typeof _0x48e1da && !(_0x48e1da instanceof Date)) {
                  for (var _0x2732d1 in _0x1f3fd1 = {}, _0x48e1da) _0x1f3fd1[_0x2732d1] = _0x2b2df9(_0x48e1da[_0x2732d1], _0x3912b9);

                  return _0x1f3fd1;
                }

                return _0x48e1da;
              }

              function _0x12af50(_0x569cf8, _0x289f25) {
                var _0xc269c9 = _0x1e6325;
                if (!_0x569cf8) return _0x569cf8;
                if (_0x569cf8 && _0x569cf8[_0xc269c9(0x29e)]) return _0x289f25[_0x569cf8[_0xc269c9(0x3d6)]];
                if (_0x569cf8 && _0xc269c9(0x2df) == typeof _0x569cf8 && _0x569cf8[_0xc269c9(0x455)]('b')) return _0x289f25[parseInt(_0x569cf8[_0xc269c9(0x495)](0x1))];

                if (_0x4b21c1(_0x569cf8)) {
                  for (var _0x495a84 = 0x0; _0x495a84 < _0x569cf8[_0xc269c9(0x109)]; _0x495a84++) _0x569cf8[_0x495a84] = _0x12af50(_0x569cf8[_0x495a84], _0x289f25);
                } else {
                  if ('object' == typeof _0x569cf8) {
                    for (var _0x436616 in _0x569cf8) _0x569cf8[_0x436616] = _0x12af50(_0x569cf8[_0x436616], _0x289f25);
                  }
                }

                return _0x569cf8;
              }

              _0xffe363['deconstructPacket'] = function (_0x51eea6) {
                var _0x20f00a = _0x1e6325,
                    _0x3b27e3 = [],
                    _0x5a68d6 = _0x51eea6['data'],
                    _0x5ae12c = _0x51eea6;
                return _0x5ae12c[_0x20f00a(0x28e)] = _0x2b2df9(_0x5a68d6, _0x3b27e3), _0x5ae12c[_0x20f00a(0x2d0)] = _0x3b27e3[_0x20f00a(0x109)], {
                  'packet': _0x5ae12c,
                  'buffers': _0x3b27e3
                };
              }, _0xffe363[_0x1e6325(0x170)] = function (_0x30982d, _0x3901bb) {
                var _0x581c92 = _0x1e6325;
                return _0x30982d[_0x581c92(0x28e)] = _0x12af50(_0x30982d[_0x581c92(0x28e)], _0x3901bb), _0x30982d[_0x581c92(0x2d0)] = void 0x0, _0x30982d;
              }, _0xffe363[_0x1e6325(0x3d4)] = function (_0x5bd307, _0x8fde3b) {
                var _0x430bd1 = 0x0,
                    _0x32a35d = _0x5bd307;
                !function _0x38591a(_0x710c34, _0x1c983f, _0x119400) {
                  var _0x1ef9ee = a1_0x1adc;
                  if (!_0x710c34) return _0x710c34;

                  if (_0x4f53d7 && _0x710c34 instanceof Blob || _0x3280c0 && _0x710c34 instanceof File) {
                    _0x430bd1++;

                    var _0x5ed519 = new FileReader();

                    _0x5ed519['onload'] = function () {
                      var _0x32782a = a1_0x1adc;
                      _0x119400 ? _0x119400[_0x1c983f] = this[_0x32782a(0x249)] : _0x32a35d = this['result'], --_0x430bd1 || _0x8fde3b(_0x32a35d);
                    }, _0x5ed519[_0x1ef9ee(0x31e)](_0x710c34);
                  } else {
                    if (_0x4b21c1(_0x710c34)) {
                      for (var _0x495668 = 0x0; _0x495668 < _0x710c34[_0x1ef9ee(0x109)]; _0x495668++) _0x38591a(_0x710c34[_0x495668], _0x495668, _0x710c34);
                    } else {
                      if (_0x1ef9ee(0x26e) == typeof _0x710c34 && !_0x3fd241(_0x710c34)) {
                        for (var _0x38c2de in _0x710c34) _0x38591a(_0x710c34[_0x38c2de], _0x38c2de, _0x710c34);
                      }
                    }
                  }
                }(_0x32a35d), _0x430bd1 || _0x8fde3b(_0x32a35d);
              };
            },
            0x2501: function _(_0x1d7fce, _0x4a92e5, _0x5e6b8b) {
              var _0x28870e = a1_0x1adc;

              var _0x33046f = _0x5e6b8b(0x4cb)(_0x28870e(0x2ad)),
                  _0x1154c1 = _0x5e6b8b(0x223f),
                  _0x147cff = _0x5e6b8b(0x35),
                  _0x27c60d = _0x5e6b8b(0x16c2),
                  _0x2e7e4a = _0x5e6b8b(0x141a);

              function _0x12fcb7() {}

              _0x4a92e5[_0x28870e(0x280)] = 0x4, _0x4a92e5['types'] = [_0x28870e(0x339), 'DISCONNECT', 'EVENT', 'ACK', _0x28870e(0x28c), _0x28870e(0x127), 'BINARY_ACK'], _0x4a92e5[_0x28870e(0x339)] = 0x0, _0x4a92e5[_0x28870e(0x3c0)] = 0x1, _0x4a92e5[_0x28870e(0x3b7)] = 0x2, _0x4a92e5[_0x28870e(0x186)] = 0x3, _0x4a92e5[_0x28870e(0x28c)] = 0x4, _0x4a92e5[_0x28870e(0x127)] = 0x5, _0x4a92e5['BINARY_ACK'] = 0x6, _0x4a92e5[_0x28870e(0x15c)] = _0x12fcb7, _0x4a92e5[_0x28870e(0x4b7)] = _0x4b643d;

              var _0x470c30 = _0x4a92e5['ERROR'] + _0x28870e(0x35c);

              function _0x214876(_0x2149db) {
                var _0x3b6879 = _0x28870e,
                    _0x165b10 = '' + _0x2149db[_0x3b6879(0x1bd)];

                if (_0x4a92e5[_0x3b6879(0x127)] !== _0x2149db['type'] && _0x4a92e5[_0x3b6879(0x14f)] !== _0x2149db[_0x3b6879(0x1bd)] || (_0x165b10 += _0x2149db[_0x3b6879(0x2d0)] + '-'), _0x2149db['nsp'] && '/' !== _0x2149db[_0x3b6879(0x1c2)] && (_0x165b10 += _0x2149db['nsp'] + ','), null != _0x2149db['id'] && (_0x165b10 += _0x2149db['id']), null != _0x2149db['data']) {
                  var _0x2707e1 = function (_0x418020) {
                    var _0x500bd9 = _0x3b6879;

                    try {
                      return JSON[_0x500bd9(0x2eb)](_0x418020);
                    } catch (_0x436e1a) {
                      return !0x1;
                    }
                  }(_0x2149db[_0x3b6879(0x28e)]);

                  if (!0x1 === _0x2707e1) return _0x470c30;
                  _0x165b10 += _0x2707e1;
                }

                return _0x33046f(_0x3b6879(0x47f), _0x2149db, _0x165b10), _0x165b10;
              }

              function _0x4b643d() {
                this['reconstructor'] = null;
              }

              function _0x419895(_0x129604) {
                var _0x10d964 = _0x28870e;
                this[_0x10d964(0x11e)] = _0x129604, this['buffers'] = [];
              }

              function _0x159992(_0x162eab) {
                var _0x1c4809 = _0x28870e;
                return {
                  'type': _0x4a92e5[_0x1c4809(0x28c)],
                  'data': 'parser\x20error:\x20' + _0x162eab
                };
              }

              _0x12fcb7[_0x28870e(0x267)][_0x28870e(0x2bf)] = function (_0x57183b, _0xa993e6) {
                var _0x47c3d6 = _0x28870e;
                _0x33046f('encoding\x20packet\x20%j', _0x57183b), _0x4a92e5[_0x47c3d6(0x127)] === _0x57183b[_0x47c3d6(0x1bd)] || _0x4a92e5[_0x47c3d6(0x14f)] === _0x57183b[_0x47c3d6(0x1bd)] ? function (_0x2dce42, _0x3efdc7) {
                  var _0x1c1f24 = _0x47c3d6;

                  _0x147cff[_0x1c1f24(0x3d4)](_0x2dce42, function (_0x355668) {
                    var _0x51d8f9 = _0x1c1f24,
                        _0x45ccf9 = _0x147cff['deconstructPacket'](_0x355668),
                        _0xba8c50 = _0x214876(_0x45ccf9[_0x51d8f9(0x43e)]),
                        _0x127e07 = _0x45ccf9[_0x51d8f9(0x3b8)];

                    _0x127e07['unshift'](_0xba8c50), _0x3efdc7(_0x127e07);
                  });
                }(_0x57183b, _0xa993e6) : _0xa993e6([_0x214876(_0x57183b)]);
              }, _0x1154c1(_0x4b643d[_0x28870e(0x267)]), _0x4b643d[_0x28870e(0x267)][_0x28870e(0x1a2)] = function (_0x5090a3) {
                var _0x2c2682 = _0x28870e,
                    _0x2318b6;

                if (_0x2c2682(0x2df) == typeof _0x5090a3) _0x2318b6 = function (_0x17ac4b) {
                  var _0x3b770b = _0x2c2682,
                      _0x4eb0d2 = 0x0,
                      _0x11b9ad = {
                    'type': Number(_0x17ac4b['charAt'](0x0))
                  };
                  if (null == _0x4a92e5[_0x3b770b(0x128)][_0x11b9ad[_0x3b770b(0x1bd)]]) return _0x159992('unknown\x20packet\x20type\x20' + _0x11b9ad[_0x3b770b(0x1bd)]);

                  if (_0x4a92e5[_0x3b770b(0x127)] === _0x11b9ad[_0x3b770b(0x1bd)] || _0x4a92e5['BINARY_ACK'] === _0x11b9ad[_0x3b770b(0x1bd)]) {
                    for (var _0xb9e221 = _0x4eb0d2 + 0x1; '-' !== _0x17ac4b[_0x3b770b(0x382)](++_0x4eb0d2) && _0x4eb0d2 != _0x17ac4b[_0x3b770b(0x109)];);

                    var _0x1606af = _0x17ac4b[_0x3b770b(0x495)](_0xb9e221, _0x4eb0d2);

                    if (_0x1606af != Number(_0x1606af) || '-' !== _0x17ac4b[_0x3b770b(0x382)](_0x4eb0d2)) throw new Error(_0x3b770b(0x409));
                    _0x11b9ad[_0x3b770b(0x2d0)] = Number(_0x1606af);
                  }

                  if ('/' === _0x17ac4b[_0x3b770b(0x382)](_0x4eb0d2 + 0x1)) {
                    for (_0xb9e221 = _0x4eb0d2 + 0x1; ++_0x4eb0d2 && ',' !== (_0x3b4da2 = _0x17ac4b[_0x3b770b(0x382)](_0x4eb0d2)) && _0x4eb0d2 !== _0x17ac4b['length'];);

                    _0x11b9ad[_0x3b770b(0x1c2)] = _0x17ac4b[_0x3b770b(0x495)](_0xb9e221, _0x4eb0d2);
                  } else _0x11b9ad[_0x3b770b(0x1c2)] = '/';

                  var _0x3c26de = _0x17ac4b[_0x3b770b(0x382)](_0x4eb0d2 + 0x1);

                  if ('' !== _0x3c26de && Number(_0x3c26de) == _0x3c26de) {
                    for (_0xb9e221 = _0x4eb0d2 + 0x1; ++_0x4eb0d2;) {
                      var _0x3b4da2;

                      if (null == (_0x3b4da2 = _0x17ac4b[_0x3b770b(0x382)](_0x4eb0d2)) || Number(_0x3b4da2) != _0x3b4da2) {
                        --_0x4eb0d2;
                        break;
                      }

                      if (_0x4eb0d2 === _0x17ac4b[_0x3b770b(0x109)]) break;
                    }

                    _0x11b9ad['id'] = Number(_0x17ac4b[_0x3b770b(0x495)](_0xb9e221, _0x4eb0d2 + 0x1));
                  }

                  if (_0x17ac4b[_0x3b770b(0x382)](++_0x4eb0d2)) {
                    var _0x523ec6 = function (_0x1413e9) {
                      var _0x57c0a0 = _0x3b770b;

                      try {
                        return JSON[_0x57c0a0(0x41c)](_0x1413e9);
                      } catch (_0x36984c) {
                        return !0x1;
                      }
                    }(_0x17ac4b[_0x3b770b(0x1ba)](_0x4eb0d2));

                    if (!0x1 === _0x523ec6 || _0x11b9ad[_0x3b770b(0x1bd)] !== _0x4a92e5[_0x3b770b(0x28c)] && !_0x27c60d(_0x523ec6)) return _0x159992(_0x3b770b(0x3bf));
                    _0x11b9ad['data'] = _0x523ec6;
                  }

                  return _0x33046f('decoded\x20%s\x20as\x20%j', _0x17ac4b, _0x11b9ad), _0x11b9ad;
                }(_0x5090a3), _0x4a92e5[_0x2c2682(0x127)] === _0x2318b6['type'] || _0x4a92e5[_0x2c2682(0x14f)] === _0x2318b6[_0x2c2682(0x1bd)] ? (this[_0x2c2682(0x3b5)] = new _0x419895(_0x2318b6), 0x0 === this[_0x2c2682(0x3b5)][_0x2c2682(0x11e)][_0x2c2682(0x2d0)] && this[_0x2c2682(0x426)](_0x2c2682(0x473), _0x2318b6)) : this[_0x2c2682(0x426)](_0x2c2682(0x473), _0x2318b6);else {
                  if (!_0x2e7e4a(_0x5090a3) && !_0x5090a3[_0x2c2682(0x49c)]) throw new Error('Unknown\x20type:\x20' + _0x5090a3);
                  if (!this[_0x2c2682(0x3b5)]) throw new Error(_0x2c2682(0x356));
                  (_0x2318b6 = this[_0x2c2682(0x3b5)][_0x2c2682(0x2b9)](_0x5090a3)) && (this[_0x2c2682(0x3b5)] = null, this[_0x2c2682(0x426)]('decoded', _0x2318b6));
                }
              }, _0x4b643d['prototype']['destroy'] = function () {
                var _0x57300f = _0x28870e;
                this[_0x57300f(0x3b5)] && this[_0x57300f(0x3b5)][_0x57300f(0x37c)]();
              }, _0x419895[_0x28870e(0x267)]['takeBinaryData'] = function (_0xd53535) {
                var _0x15d55c = _0x28870e;

                if (this['buffers'][_0x15d55c(0x4c0)](_0xd53535), this[_0x15d55c(0x3b8)]['length'] === this[_0x15d55c(0x11e)][_0x15d55c(0x2d0)]) {
                  var _0x3a8ffd = _0x147cff[_0x15d55c(0x170)](this['reconPack'], this[_0x15d55c(0x3b8)]);

                  return this[_0x15d55c(0x37c)](), _0x3a8ffd;
                }

                return null;
              }, _0x419895[_0x28870e(0x267)]['finishedReconstruction'] = function () {
                var _0x542c36 = _0x28870e;
                this[_0x542c36(0x11e)] = null, this[_0x542c36(0x3b8)] = [];
              };
            },
            0x141a: function _(_0xc19fd5) {
              var _0x211046 = a1_0x1adc;

              _0xc19fd5[_0x211046(0x10f)] = function (_0x5a7389) {
                var _0xe27180 = _0x211046;
                return _0x2a7fe1 && Buffer[_0xe27180(0x161)](_0x5a7389) || _0x536679 && (_0x5a7389 instanceof ArrayBuffer || function (_0x10d511) {
                  var _0x51cd4e = _0xe27180;
                  return _0x51cd4e(0x23a) == typeof ArrayBuffer[_0x51cd4e(0x3af)] ? ArrayBuffer[_0x51cd4e(0x3af)](_0x10d511) : _0x10d511[_0x51cd4e(0x477)] instanceof ArrayBuffer;
                }(_0x5a7389));
              };

              var _0x2a7fe1 = 'function' == typeof Buffer && _0x211046(0x23a) == typeof Buffer[_0x211046(0x161)],
                  _0x536679 = _0x211046(0x23a) == typeof ArrayBuffer;
            },
            0x7e9: function _(_0xbbc76, _0x44d3fb) {
              var _0x42690a = a1_0x1adc;
              Object[_0x42690a(0x42b)](_0x44d3fb, '__esModule', {
                'value': !0x0
              }), _0x44d3fb[_0x42690a(0x2e7)] = void 0x0;

              var _0x306aa4 = console['log'],
                  _0x27b51f = console['warn'],
                  _0x29afca = function () {
                var _0x59aaef = _0x42690a;

                function _0x342afd(_0x479a94, _0x4b212a, _0xf52950) {
                  var _0x197a10 = a1_0x1adc;
                  this[_0x197a10(0x11a)] = !!_0x479a94, this[_0x197a10(0x132)] = _0x479a94, this['logFnError'] = _0x4b212a, this[_0x197a10(0x250)] = _0xf52950;
                }

                return _0x342afd[_0x59aaef(0x267)][_0x59aaef(0x29a)] = function (_0x31b886) {
                  var _0x566a53 = _0x59aaef;

                  for (var _0x4b4b88 = [], _0x4170c5 = 0x1; _0x4170c5 < arguments[_0x566a53(0x109)]; _0x4170c5++) _0x4b4b88[_0x4170c5 - 0x1] = arguments[_0x4170c5];

                  var _0x2e63b0 = _0x31b886;
                  this[_0x566a53(0x11a)] && (_0x2e63b0 += JSON[_0x566a53(0x2eb)](_0x4b4b88)), this[_0x566a53(0x11a)] && this[_0x566a53(0x132)](_0x2e63b0);
                }, _0x342afd[_0x59aaef(0x267)][_0x59aaef(0x282)] = function (_0x543beb) {
                  var _0x1b0db5 = _0x59aaef;

                  for (var _0x3db7ce = [], _0x7c0519 = 0x1; _0x7c0519 < arguments[_0x1b0db5(0x109)]; _0x7c0519++) _0x3db7ce[_0x7c0519 - 0x1] = arguments[_0x7c0519];

                  var _0x20364c = _0x543beb;
                  this['isDebugging'] && (_0x20364c += JSON['stringify'](_0x3db7ce)), this['isDebugging'] && this[_0x1b0db5(0x250)](_0x20364c);
                }, _0x342afd[_0x59aaef(0x267)][_0x59aaef(0x47c)] = function (_0x77a6b7) {
                  var _0x138f23 = _0x59aaef;

                  for (var _0x215696 = [], _0x1278e7 = 0x1; _0x1278e7 < arguments[_0x138f23(0x109)]; _0x1278e7++) _0x215696[_0x1278e7 - 0x1] = arguments[_0x1278e7];

                  var _0x57af9c = _0x77a6b7;
                  this[_0x138f23(0x11a)] && (_0x57af9c += JSON[_0x138f23(0x2eb)](_0x215696)), this[_0x138f23(0x11a)] && this[_0x138f23(0x29c)](_0x57af9c);
                }, _0x342afd[_0x59aaef(0x267)]['updateLogger'] = function (_0x3b18a1, _0x368d22, _0x4031f3) {
                  var _0x1865f2 = _0x59aaef;
                  this[_0x1865f2(0x132)] = _0x3b18a1, this[_0x1865f2(0x29c)] = _0x368d22, this[_0x1865f2(0x250)] = _0x4031f3;
                }, _0x342afd;
              }();

              _0x44d3fb[_0x42690a(0x2e7)] = _0x29afca, _0x44d3fb[_0x42690a(0x4b4)] = new _0x29afca(_0x306aa4, _0x27b51f, _0x27b51f);
            },
            0x1518: function _(_0x38bd8a, _0xdeb08f) {
              var _0x18fc8f = a1_0x1adc;
              Object['defineProperty'](_0xdeb08f, _0x18fc8f(0x2ab), {
                'value': !0x0
              }), _0xdeb08f[_0x18fc8f(0x45e)] = _0xdeb08f[_0x18fc8f(0x162)] = void 0x0;

              var _0x557d09 = function () {
                function _0x453cfc() {}

                return _0x453cfc['getInstance'] = function (_0x5d710f) {
                  return new _0x6006df();
                }, _0x453cfc;
              }();

              _0xdeb08f[_0x18fc8f(0x162)] = _0x557d09;

              var _0x6006df = function () {
                var _0x367e95 = _0x18fc8f;

                function _0x3c1592() {}

                return _0x3c1592[_0x367e95(0x267)][_0x367e95(0x4a3)] = function (_0x14ab38) {
                  var _0x3c5fe1 = _0x367e95;
                  return Object[_0x3c5fe1(0x3ef)](_0x14ab38)[_0x3c5fe1(0x17f)](function (_0x58fcf1) {
                    var _0x3549cc = _0x3c5fe1;
                    return [_0x58fcf1, _0x14ab38[_0x58fcf1]]['map'](encodeURIComponent)[_0x3549cc(0x49b)]('=');
                  })['join']('&');
                }, _0x3c1592[_0x367e95(0x267)][_0x367e95(0x4a8)] = function (_0xf32689) {
                  var _0x222b88 = _0x367e95,
                      _0xc05f0a = _0xf32689[_0x222b88(0x1a0)],
                      _0x86871 = _0xf32689[_0x222b88(0x28e)],
                      _0x5ab69f = _0xf32689[_0x222b88(0x4a5)],
                      _0x57e46d = _0xf32689[_0x222b88(0x209)],
                      _0x5e7076 = _0xf32689['callbackErr'],
                      _0x19eb16 = this[_0x222b88(0x4a3)](_0x86871),
                      _0x12f6d2 = _0x5ab69f + _0xc05f0a,
                      _0x2f2cef = new XMLHttpRequest();

                  _0x2f2cef[_0x222b88(0x32e)]('POST', _0x12f6d2, !0x0), _0x2f2cef[_0x222b88(0x214)] = 0x3a98, _0x2f2cef['setRequestHeader'](_0x222b88(0x13f), _0x222b88(0x345)), _0x2f2cef[_0x222b88(0x437)] = function () {
                    var _0x5b14e0 = _0x222b88;
                    0x4 == _0x2f2cef[_0x5b14e0(0x3cd)] ? _0x2f2cef[_0x5b14e0(0x30a)] ? _0x57e46d({
                      'status': _0x2f2cef[_0x5b14e0(0x1d4)],
                      'data': JSON[_0x5b14e0(0x41c)](_0x2f2cef[_0x5b14e0(0x30a)])
                    }) : _0x5e7076() : 0x0 === _0x2f2cef['readyState'] && _0x5e7076(), 0xc8 !== _0x2f2cef[_0x5b14e0(0x1d4)] && _0x5e7076();
                  }, _0x2f2cef[_0x222b88(0x39f)] = function (_0x3bc568) {
                    _0x5e7076();
                  }, _0x2f2cef[_0x222b88(0x474)] = function (_0x4309f2) {
                    _0x5e7076();
                  }, _0x2f2cef[_0x222b88(0x362)](_0x19eb16);
                }, _0x3c1592;
              }();

              _0xdeb08f[_0x18fc8f(0x45e)] = _0x6006df;
            },
            0x11f2: function _(_0x2702d8, _0x4e84c7) {
              var _0x4a2ff1 = a1_0x1adc;
              Object[_0x4a2ff1(0x42b)](_0x4e84c7, _0x4a2ff1(0x2ab), {
                'value': !0x0
              }), _0x4e84c7[_0x4a2ff1(0x32f)] = _0x4e84c7[_0x4a2ff1(0x400)] = void 0x0;

              var _0x4ff95a = function () {
                var _0x903206 = _0x4a2ff1;

                function _0x551126() {}

                return _0x551126[_0x903206(0x2bf)] = function (_0x4587a8) {
                  var _0x25a0eb = _0x903206;

                  for (var _0x47a043 = [], _0x3c1949 = _0x4587a8[_0x25a0eb(0x109)], _0x426ebc = 0x0; _0x426ebc < _0x3c1949;) {
                    var _0x4b5b73 = _0x4587a8[_0x25a0eb(0x260)](_0x426ebc),
                        _0x4ef725 = 0x0,
                        _0x3849f3 = 0x0;

                    for (_0x4b5b73 <= 0x7f ? (_0x4ef725 = 0x0, _0x3849f3 = 0x0) : _0x4b5b73 <= 0x7ff ? (_0x4ef725 = 0x6, _0x3849f3 = 0xc0) : _0x4b5b73 <= 0xffff ? (_0x4ef725 = 0xc, _0x3849f3 = 0xe0) : _0x4b5b73 <= 0x1fffff && (_0x4ef725 = 0x12, _0x3849f3 = 0xf0), _0x47a043['push'](_0x3849f3 | _0x4b5b73 >> _0x4ef725), _0x4ef725 -= 0x6; _0x4ef725 >= 0x0;) _0x47a043[_0x25a0eb(0x4c0)](0x80 | _0x4b5b73 >> _0x4ef725 & 0x3f), _0x4ef725 -= 0x6;

                    _0x426ebc += _0x4b5b73 >= 0x10000 ? 0x2 : 0x1;
                  }

                  return new Uint8Array(_0x47a043);
                }, _0x551126;
              }();

              _0x4e84c7['TextEncoder'] = _0x4ff95a;

              var _0x3e632c = function () {
                var _0x29a26a = _0x4a2ff1;

                function _0x1353de() {}

                return _0x1353de[_0x29a26a(0x2a8)] = function (_0x3e4ede) {
                  var _0x4d991c = _0x29a26a;

                  for (var _0x4effec = Array[_0x4d991c(0x336)](_0x3e4ede), _0x4f3383 = '', _0x199f38 = 0x0; _0x199f38 < _0x4effec['length'];) {
                    var _0x378a2c = _0x4effec[_0x199f38],
                        _0x5898e1 = 0x0,
                        _0x23c951 = 0x0;

                    if (_0x378a2c <= 0x7f ? (_0x5898e1 = 0x0, _0x23c951 = 0xff & _0x378a2c) : _0x378a2c <= 0xdf ? (_0x5898e1 = 0x1, _0x23c951 = 0x1f & _0x378a2c) : _0x378a2c <= 0xef ? (_0x5898e1 = 0x2, _0x23c951 = 0xf & _0x378a2c) : _0x378a2c <= 0xf4 && (_0x5898e1 = 0x3, _0x23c951 = 0x7 & _0x378a2c), _0x4effec[_0x4d991c(0x109)] - _0x199f38 - _0x5898e1 > 0x0) {
                      for (var _0x3c8f3c = 0x0; _0x3c8f3c < _0x5898e1;) _0x23c951 = _0x23c951 << 0x6 | 0x3f & (_0x378a2c = _0x4effec[_0x199f38 + _0x3c8f3c + 0x1]), _0x3c8f3c += 0x1;
                    } else _0x23c951 = 0xfffd, _0x5898e1 = _0x4effec['length'] - _0x199f38;

                    _0x4f3383 += String[_0x4d991c(0x16c)](_0x23c951), _0x199f38 += _0x5898e1 + 0x1;
                  }

                  return _0x4f3383;
                }, _0x1353de;
              }();

              _0x4e84c7[_0x4a2ff1(0x32f)] = _0x3e632c;
            },
            0x758: function _(_0x11201e, _0x41dd32) {
              var _0x3e2c8f = a1_0x1adc;
              Object[_0x3e2c8f(0x42b)](_0x41dd32, _0x3e2c8f(0x2ab), {
                'value': !0x0
              }), _0x41dd32[_0x3e2c8f(0x2d4)] = void 0x0, _0x41dd32[_0x3e2c8f(0x2d4)] = function () {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'['replace'](/[xy]/g, function (_0x17f760) {
                  var _0x48e367 = a1_0x1adc,
                      _0x17a217 = 0x10 * Math[_0x48e367(0x358)]() | 0x0;

                  return ('x' === _0x17f760 ? _0x17a217 : 0x3 & _0x17a217 | 0x8)[_0x48e367(0x1c8)](0x10);
                })['replace'](/-/gi, '');
              };
            },
            0x1afa: function _(_0x542602) {
              var _0x2cdc98 = a1_0x1adc;

              function _0x118459() {}

              _0x542602[_0x2cdc98(0x10f)] = function (_0x22e655, _0x4dc586, _0x33d642) {
                var _0x46bcf2 = _0x2cdc98,
                    _0x4fcc2a = !0x1;

                return _0x33d642 = _0x33d642 || _0x118459, _0x281acf[_0x46bcf2(0x1d6)] = _0x22e655, 0x0 === _0x22e655 ? _0x4dc586() : _0x281acf;

                function _0x281acf(_0x92766c, _0x4dc2f1) {
                  var _0x2ce160 = _0x46bcf2;
                  if (_0x281acf[_0x2ce160(0x1d6)] <= 0x0) throw new Error('after\x20called\x20too\x20many\x20times');
                  --_0x281acf[_0x2ce160(0x1d6)], _0x92766c ? (_0x4fcc2a = !0x0, _0x4dc586(_0x92766c), _0x4dc586 = _0x33d642) : 0x0 !== _0x281acf['count'] || _0x4fcc2a || _0x4dc586(null, _0x4dc2f1);
                }
              };
            },
            0x25f6: function _(_0x1abaa1) {
              var _0x17c857 = a1_0x1adc;

              _0x1abaa1[_0x17c857(0x10f)] = function (_0x5b8ab1, _0x45cb1d, _0xb7a9dd) {
                var _0x1b30b3 = _0x17c857,
                    _0x530a90 = _0x5b8ab1[_0x1b30b3(0x3c9)];

                if (_0x45cb1d = _0x45cb1d || 0x0, _0xb7a9dd = _0xb7a9dd || _0x530a90, _0x5b8ab1['slice']) return _0x5b8ab1[_0x1b30b3(0x167)](_0x45cb1d, _0xb7a9dd);
                if (_0x45cb1d < 0x0 && (_0x45cb1d += _0x530a90), _0xb7a9dd < 0x0 && (_0xb7a9dd += _0x530a90), _0xb7a9dd > _0x530a90 && (_0xb7a9dd = _0x530a90), _0x45cb1d >= _0x530a90 || _0x45cb1d >= _0xb7a9dd || 0x0 === _0x530a90) return new ArrayBuffer(0x0);

                for (var _0x51cdd0 = new Uint8Array(_0x5b8ab1), _0x10e795 = new Uint8Array(_0xb7a9dd - _0x45cb1d), _0x5c9b9b = _0x45cb1d, _0x56ea99 = 0x0; _0x5c9b9b < _0xb7a9dd; _0x5c9b9b++, _0x56ea99++) _0x10e795[_0x56ea99] = _0x51cdd0[_0x5c9b9b];

                return _0x10e795['buffer'];
              };
            },
            0xbc2: function _(_0x5e9f2a) {
              var _0x189150 = a1_0x1adc;

              function _0x47975d(_0x31c222) {
                var _0x3a9a56 = a1_0x1adc;
                _0x31c222 = _0x31c222 || {}, this['ms'] = _0x31c222[_0x3a9a56(0x2d1)] || 0x64, this[_0x3a9a56(0x340)] = _0x31c222[_0x3a9a56(0x340)] || 0x2710, this['factor'] = _0x31c222[_0x3a9a56(0x1e9)] || 0x2, this[_0x3a9a56(0x460)] = _0x31c222[_0x3a9a56(0x460)] > 0x0 && _0x31c222['jitter'] <= 0x1 ? _0x31c222[_0x3a9a56(0x460)] : 0x0, this[_0x3a9a56(0x3a4)] = 0x0;
              }

              _0x5e9f2a[_0x189150(0x10f)] = _0x47975d, _0x47975d[_0x189150(0x267)][_0x189150(0x16e)] = function () {
                var _0x42a21a = _0x189150,
                    _0x4d84d4 = this['ms'] * Math[_0x42a21a(0x1ae)](this[_0x42a21a(0x1e9)], this[_0x42a21a(0x3a4)]++);

                if (this['jitter']) {
                  var _0x40423c = Math[_0x42a21a(0x358)](),
                      _0x1951c8 = Math[_0x42a21a(0x38b)](_0x40423c * this['jitter'] * _0x4d84d4);

                  _0x4d84d4 = 0x0 == (0x1 & Math[_0x42a21a(0x38b)](0xa * _0x40423c)) ? _0x4d84d4 - _0x1951c8 : _0x4d84d4 + _0x1951c8;
                }

                return 0x0 | Math['min'](_0x4d84d4, this['max']);
              }, _0x47975d[_0x189150(0x267)][_0x189150(0x3ea)] = function () {
                var _0x461f76 = _0x189150;
                this[_0x461f76(0x3a4)] = 0x0;
              }, _0x47975d['prototype'][_0x189150(0x404)] = function (_0x38838c) {
                this['ms'] = _0x38838c;
              }, _0x47975d[_0x189150(0x267)][_0x189150(0x365)] = function (_0x3c86bd) {
                var _0x238fa8 = _0x189150;
                this[_0x238fa8(0x340)] = _0x3c86bd;
              }, _0x47975d[_0x189150(0x267)][_0x189150(0x3b9)] = function (_0x2ea66b) {
                this['jitter'] = _0x2ea66b;
              };
            },
            0xe78: function _(_0x549752, _0x7a66b) {
              var _0x266264 = a1_0x1adc;
              !function (_0x27791d) {
                _0x7a66b['encode'] = function (_0x5c51dc) {
                  var _0x31cc7e = a1_0x1adc,
                      _0x43e240,
                      _0x34c446 = new Uint8Array(_0x5c51dc),
                      _0xadb5ca = _0x34c446['length'],
                      _0x4abf3d = '';

                  for (_0x43e240 = 0x0; _0x43e240 < _0xadb5ca; _0x43e240 += 0x3) _0x4abf3d += _0x27791d[_0x34c446[_0x43e240] >> 0x2], _0x4abf3d += _0x27791d[(0x3 & _0x34c446[_0x43e240]) << 0x4 | _0x34c446[_0x43e240 + 0x1] >> 0x4], _0x4abf3d += _0x27791d[(0xf & _0x34c446[_0x43e240 + 0x1]) << 0x2 | _0x34c446[_0x43e240 + 0x2] >> 0x6], _0x4abf3d += _0x27791d[0x3f & _0x34c446[_0x43e240 + 0x2]];

                  return _0xadb5ca % 0x3 == 0x2 ? _0x4abf3d = _0x4abf3d[_0x31cc7e(0x495)](0x0, _0x4abf3d[_0x31cc7e(0x109)] - 0x1) + '=' : _0xadb5ca % 0x3 == 0x1 && (_0x4abf3d = _0x4abf3d['substring'](0x0, _0x4abf3d[_0x31cc7e(0x109)] - 0x2) + '=='), _0x4abf3d;
                }, _0x7a66b['decode'] = function (_0xe04782) {
                  var _0x215f1c = a1_0x1adc,
                      _0x2f2e4d,
                      _0x1a26d2,
                      _0x2de6ab,
                      _0x45ff41,
                      _0x3148bc,
                      _0x4a61e1 = 0.75 * _0xe04782['length'],
                      _0x504a0c = _0xe04782[_0x215f1c(0x109)],
                      _0xa177e = 0x0;

                  '=' === _0xe04782[_0xe04782[_0x215f1c(0x109)] - 0x1] && (_0x4a61e1--, '=' === _0xe04782[_0xe04782[_0x215f1c(0x109)] - 0x2] && _0x4a61e1--);

                  var _0xaccf98 = new ArrayBuffer(_0x4a61e1),
                      _0x35e0a7 = new Uint8Array(_0xaccf98);

                  for (_0x2f2e4d = 0x0; _0x2f2e4d < _0x504a0c; _0x2f2e4d += 0x4) _0x1a26d2 = _0x27791d[_0x215f1c(0x458)](_0xe04782[_0x2f2e4d]), _0x2de6ab = _0x27791d[_0x215f1c(0x458)](_0xe04782[_0x2f2e4d + 0x1]), _0x45ff41 = _0x27791d['indexOf'](_0xe04782[_0x2f2e4d + 0x2]), _0x3148bc = _0x27791d[_0x215f1c(0x458)](_0xe04782[_0x2f2e4d + 0x3]), _0x35e0a7[_0xa177e++] = _0x1a26d2 << 0x2 | _0x2de6ab >> 0x4, _0x35e0a7[_0xa177e++] = (0xf & _0x2de6ab) << 0x4 | _0x45ff41 >> 0x2, _0x35e0a7[_0xa177e++] = (0x3 & _0x45ff41) << 0x6 | 0x3f & _0x3148bc;

                  return _0xaccf98;
                };
              }(_0x266264(0x40d));
            },
            0x15ac: function _(_0x9cf18) {
              var _0x333c12 = a1_0x1adc,
                  _0x16744c = void 0x0 !== _0x16744c ? _0x16744c : _0x333c12(0x121) != typeof WebKitBlobBuilder ? WebKitBlobBuilder : _0x333c12(0x121) != typeof MSBlobBuilder ? MSBlobBuilder : _0x333c12(0x121) != typeof MozBlobBuilder && MozBlobBuilder,
                  _0x26bfd8 = function () {
                var _0x4b7e24 = _0x333c12;

                try {
                  return 0x2 === new Blob(['hi'])[_0x4b7e24(0x33a)];
                } catch (_0x4ee616) {
                  return !0x1;
                }
              }(),
                  _0x214f90 = _0x26bfd8 && function () {
                var _0xda0317 = _0x333c12;

                try {
                  return 0x2 === new Blob([new Uint8Array([0x1, 0x2])])[_0xda0317(0x33a)];
                } catch (_0x2ebb0f) {
                  return !0x1;
                }
              }(),
                  _0x490a59 = _0x16744c && _0x16744c[_0x333c12(0x267)][_0x333c12(0x232)] && _0x16744c['prototype'][_0x333c12(0x421)];

              function _0x577867(_0x164cb3) {
                var _0x336108 = _0x333c12;
                return _0x164cb3[_0x336108(0x17f)](function (_0x32a809) {
                  var _0x5c8fdb = _0x336108;

                  if (_0x32a809[_0x5c8fdb(0x477)] instanceof ArrayBuffer) {
                    var _0x30064c = _0x32a809[_0x5c8fdb(0x477)];

                    if (_0x32a809['byteLength'] !== _0x30064c[_0x5c8fdb(0x3c9)]) {
                      var _0xb5c5d7 = new Uint8Array(_0x32a809[_0x5c8fdb(0x3c9)]);

                      _0xb5c5d7['set'](new Uint8Array(_0x30064c, _0x32a809[_0x5c8fdb(0x180)], _0x32a809[_0x5c8fdb(0x3c9)])), _0x30064c = _0xb5c5d7['buffer'];
                    }

                    return _0x30064c;
                  }

                  return _0x32a809;
                });
              }

              function _0xd4768d(_0x56c318, _0x1dabc5) {
                var _0x12e732 = _0x333c12;
                _0x1dabc5 = _0x1dabc5 || {};

                var _0x48b89e = new _0x16744c();

                return _0x577867(_0x56c318)[_0x12e732(0x37b)](function (_0x2cfbc7) {
                  var _0x5a768e = _0x12e732;

                  _0x48b89e[_0x5a768e(0x232)](_0x2cfbc7);
                }), _0x1dabc5[_0x12e732(0x1bd)] ? _0x48b89e[_0x12e732(0x421)](_0x1dabc5[_0x12e732(0x1bd)]) : _0x48b89e['getBlob']();
              }

              function _0x170f11(_0x363475, _0x2a43e0) {
                return new Blob(_0x577867(_0x363475), _0x2a43e0 || {});
              }

              _0x333c12(0x121) != typeof Blob && (_0xd4768d['prototype'] = Blob[_0x333c12(0x267)], _0x170f11[_0x333c12(0x267)] = Blob[_0x333c12(0x267)]), _0x9cf18[_0x333c12(0x10f)] = _0x26bfd8 ? _0x214f90 ? Blob : _0x170f11 : _0x490a59 ? _0xd4768d : void 0x0;
            },
            0x17bd: function _(_0x3ebcac) {
              var _0xdac19d = a1_0x1adc,
                  _0x433cda = [][_0xdac19d(0x167)];

              _0x3ebcac['exports'] = function (_0x1a6844, _0x4185a5) {
                var _0xbd1019 = _0xdac19d;
                if (_0xbd1019(0x2df) == typeof _0x4185a5 && (_0x4185a5 = _0x1a6844[_0x4185a5]), _0xbd1019(0x23a) != typeof _0x4185a5) throw new Error('bind()\x20requires\x20a\x20function');

                var _0x1b78b5 = _0x433cda[_0xbd1019(0x20b)](arguments, 0x2);

                return function () {
                  var _0x22b440 = _0xbd1019;
                  return _0x4185a5['apply'](_0x1a6844, _0x1b78b5[_0x22b440(0x46f)](_0x433cda[_0x22b440(0x20b)](arguments)));
                };
              };
            },
            0x223f: function _(_0x2262d5) {
              var _0x5c2495 = a1_0x1adc;

              function _0x331ed7(_0x433191) {
                if (_0x433191) return function (_0x3b8113) {
                  var _0x250a54 = a1_0x1adc;

                  for (var _0x12288d in _0x331ed7['prototype']) _0x3b8113[_0x12288d] = _0x331ed7[_0x250a54(0x267)][_0x12288d];

                  return _0x3b8113;
                }(_0x433191);
              }

              _0x2262d5[_0x5c2495(0x10f)] = _0x331ed7, _0x331ed7[_0x5c2495(0x267)]['on'] = _0x331ed7[_0x5c2495(0x267)][_0x5c2495(0x3d9)] = function (_0x261957, _0x170dff) {
                var _0x455632 = _0x5c2495;
                return this[_0x455632(0x27b)] = this[_0x455632(0x27b)] || {}, (this[_0x455632(0x27b)]['$' + _0x261957] = this[_0x455632(0x27b)]['$' + _0x261957] || [])[_0x455632(0x4c0)](_0x170dff), this;
              }, _0x331ed7[_0x5c2495(0x267)]['once'] = function (_0x5c5126, _0x359614) {
                function _0x52960f() {
                  var _0x22143a = a1_0x1adc;
                  this[_0x22143a(0x441)](_0x5c5126, _0x52960f), _0x359614[_0x22143a(0x148)](this, arguments);
                }

                return _0x52960f['fn'] = _0x359614, this['on'](_0x5c5126, _0x52960f), this;
              }, _0x331ed7['prototype']['off'] = _0x331ed7['prototype'][_0x5c2495(0x126)] = _0x331ed7[_0x5c2495(0x267)]['removeAllListeners'] = _0x331ed7[_0x5c2495(0x267)][_0x5c2495(0x434)] = function (_0x32465e, _0x4d0ae8) {
                var _0x252370 = _0x5c2495;
                if (this[_0x252370(0x27b)] = this['_callbacks'] || {}, 0x0 == arguments[_0x252370(0x109)]) return this[_0x252370(0x27b)] = {}, this;

                var _0x3ad526,
                    _0x39baf0 = this[_0x252370(0x27b)]['$' + _0x32465e];

                if (!_0x39baf0) return this;
                if (0x1 == arguments[_0x252370(0x109)]) return delete this[_0x252370(0x27b)]['$' + _0x32465e], this;

                for (var _0x34ccac = 0x0; _0x34ccac < _0x39baf0[_0x252370(0x109)]; _0x34ccac++) if ((_0x3ad526 = _0x39baf0[_0x34ccac]) === _0x4d0ae8 || _0x3ad526['fn'] === _0x4d0ae8) {
                  _0x39baf0[_0x252370(0x35b)](_0x34ccac, 0x1);

                  break;
                }

                return 0x0 === _0x39baf0['length'] && delete this[_0x252370(0x27b)]['$' + _0x32465e], this;
              }, _0x331ed7['prototype'][_0x5c2495(0x426)] = function (_0x59dbb1) {
                var _0x49b8e1 = _0x5c2495;
                this[_0x49b8e1(0x27b)] = this[_0x49b8e1(0x27b)] || {};

                for (var _0x4774dc = new Array(arguments[_0x49b8e1(0x109)] - 0x1), _0x4ede32 = this[_0x49b8e1(0x27b)]['$' + _0x59dbb1], _0x1087f8 = 0x1; _0x1087f8 < arguments[_0x49b8e1(0x109)]; _0x1087f8++) _0x4774dc[_0x1087f8 - 0x1] = arguments[_0x1087f8];

                if (_0x4ede32) {
                  _0x1087f8 = 0x0;

                  for (var _0x257719 = (_0x4ede32 = _0x4ede32[_0x49b8e1(0x167)](0x0))[_0x49b8e1(0x109)]; _0x1087f8 < _0x257719; ++_0x1087f8) _0x4ede32[_0x1087f8][_0x49b8e1(0x148)](this, _0x4774dc);
                }

                return this;
              }, _0x331ed7['prototype'][_0x5c2495(0x43f)] = function (_0x477b34) {
                var _0x372d3d = _0x5c2495;
                return this[_0x372d3d(0x27b)] = this[_0x372d3d(0x27b)] || {}, this[_0x372d3d(0x27b)]['$' + _0x477b34] || [];
              }, _0x331ed7[_0x5c2495(0x267)]['hasListeners'] = function (_0xbe5a0b) {
                var _0x4cf63c = _0x5c2495;
                return !!this[_0x4cf63c(0x43f)](_0xbe5a0b)['length'];
              };
            },
            0xf15: function _(_0x16bd13) {
              var _0x2d7bf6 = a1_0x1adc;

              _0x16bd13[_0x2d7bf6(0x10f)] = function (_0x13414c, _0x3d151f) {
                var _0x1ed124 = _0x2d7bf6,
                    _0x4aaeb2 = function _0x4aaeb2() {};

                _0x4aaeb2[_0x1ed124(0x267)] = _0x3d151f[_0x1ed124(0x267)], _0x13414c[_0x1ed124(0x267)] = new _0x4aaeb2(), _0x13414c[_0x1ed124(0x267)][_0x1ed124(0x389)] = _0x13414c;
              };
            },
            0x4cb: function _(_0x4bf5a3, _0x314fd5, _0x57d9a6) {
              var _0x1828ef = a1_0x1adc;

              function _0x47269b() {
                var _0x92e189 = a1_0x1adc,
                    _0x14af22;

                try {
                  _0x14af22 = _0x314fd5['storage'][_0x92e189(0x29a)];
                } catch (_0x229db7) {}

                return !_0x14af22 && 'undefined' != typeof process && _0x92e189(0x498) in process && (_0x14af22 = process['env'][_0x92e189(0x2af)]), _0x14af22;
              }

              (_0x314fd5 = _0x4bf5a3['exports'] = _0x57d9a6(0x67a))[_0x1828ef(0x4bf)] = function () {
                var _0x2f283c = _0x1828ef;
                return _0x2f283c(0x26e) == typeof console && console[_0x2f283c(0x4bf)] && Function['prototype'][_0x2f283c(0x148)][_0x2f283c(0x20b)](console[_0x2f283c(0x4bf)], console, arguments);
              }, _0x314fd5[_0x1828ef(0x2c2)] = function (_0x2444e5) {
                var _0x1dbfa3 = _0x1828ef,
                    _0x4a7c59 = this['useColors'];

                if (_0x2444e5[0x0] = (_0x4a7c59 ? '%c' : '') + this[_0x1dbfa3(0x367)] + (_0x4a7c59 ? _0x1dbfa3(0x217) : '\x20') + _0x2444e5[0x0] + (_0x4a7c59 ? _0x1dbfa3(0x4b3) : '\x20') + '+' + _0x314fd5['humanize'](this[_0x1dbfa3(0x4c9)]), _0x4a7c59) {
                  var _0x1aaa86 = _0x1dbfa3(0x396) + this[_0x1dbfa3(0x20e)];

                  _0x2444e5[_0x1dbfa3(0x35b)](0x1, 0x0, _0x1aaa86, _0x1dbfa3(0x22b));

                  var _0x19e90d = 0x0,
                      _0x176d53 = 0x0;
                  _0x2444e5[0x0][_0x1dbfa3(0x27c)](/%[a-zA-Z%]/g, function (_0x3ae4ff) {
                    '%%' !== _0x3ae4ff && (_0x19e90d++, '%c' === _0x3ae4ff && (_0x176d53 = _0x19e90d));
                  }), _0x2444e5[_0x1dbfa3(0x35b)](_0x176d53, 0x0, _0x1aaa86);
                }
              }, _0x314fd5[_0x1828ef(0x17d)] = function (_0x18e7bf) {
                var _0x413394 = _0x1828ef;

                try {
                  null == _0x18e7bf ? _0x314fd5[_0x413394(0x264)][_0x413394(0x1c1)](_0x413394(0x29a)) : _0x314fd5[_0x413394(0x264)]['debug'] = _0x18e7bf;
                } catch (_0x2d6321) {}
              }, _0x314fd5[_0x1828ef(0x3e6)] = _0x47269b, _0x314fd5[_0x1828ef(0x22f)] = function () {
                var _0x174c94 = _0x1828ef;
                return !(_0x174c94(0x121) == typeof window || !window['process'] || _0x174c94(0x2a5) !== window[_0x174c94(0x24b)][_0x174c94(0x1bd)]) || (_0x174c94(0x121) == typeof navigator || !navigator[_0x174c94(0x2a9)] || !navigator[_0x174c94(0x2a9)][_0x174c94(0x444)]()[_0x174c94(0x291)](/(edge|trident)\/(\d+)/)) && (_0x174c94(0x121) != typeof document && document[_0x174c94(0x428)] && document[_0x174c94(0x428)][_0x174c94(0x326)] && document[_0x174c94(0x428)]['style'][_0x174c94(0x2d6)] || _0x174c94(0x121) != typeof window && window['console'] && (window['console']['firebug'] || window[_0x174c94(0x456)][_0x174c94(0x317)] && window[_0x174c94(0x456)][_0x174c94(0x12a)]) || _0x174c94(0x121) != typeof navigator && navigator[_0x174c94(0x2a9)] && navigator[_0x174c94(0x2a9)][_0x174c94(0x444)]()[_0x174c94(0x291)](/firefox\/(\d+)/) && parseInt(RegExp['$1'], 0xa) >= 0x1f || _0x174c94(0x121) != typeof navigator && navigator[_0x174c94(0x2a9)] && navigator[_0x174c94(0x2a9)][_0x174c94(0x444)]()['match'](/applewebkit\/(\d+)/));
              }, _0x314fd5[_0x1828ef(0x264)] = _0x1828ef(0x121) != typeof chrome && void 0x0 !== chrome['storage'] ? chrome[_0x1828ef(0x264)][_0x1828ef(0x183)] : function () {
                var _0x17ea77 = _0x1828ef;

                try {
                  return window[_0x17ea77(0x252)];
                } catch (_0x382277) {}
              }(), _0x314fd5[_0x1828ef(0x3ec)] = [_0x1828ef(0x361), _0x1828ef(0x30f), _0x1828ef(0x4d1), _0x1828ef(0x18a), _0x1828ef(0x36c), _0x1828ef(0x472), _0x1828ef(0x1f7), _0x1828ef(0x212), '#00CC00', _0x1828ef(0x320), '#00CC66', _0x1828ef(0x2b3), _0x1828ef(0x316), _0x1828ef(0x2b0), _0x1828ef(0x379), _0x1828ef(0x221), '#3333CC', _0x1828ef(0x39e), _0x1828ef(0x10b), '#3366FF', _0x1828ef(0x11d), _0x1828ef(0x134), _0x1828ef(0x29b), _0x1828ef(0x411), _0x1828ef(0x18f), _0x1828ef(0x48c), _0x1828ef(0x4d4), '#33CCFF', '#6600CC', _0x1828ef(0x2cc), _0x1828ef(0x4aa), _0x1828ef(0x3ae), _0x1828ef(0x185), _0x1828ef(0x394), _0x1828ef(0x33f), '#9900FF', '#9933CC', _0x1828ef(0x26f), _0x1828ef(0x3e3), '#99CC33', _0x1828ef(0x386), _0x1828ef(0x1b6), _0x1828ef(0x47a), _0x1828ef(0x461), _0x1828ef(0x138), _0x1828ef(0x43d), _0x1828ef(0x3f4), _0x1828ef(0x3de), _0x1828ef(0x3d0), _0x1828ef(0x4c4), '#CC33CC', '#CC33FF', _0x1828ef(0x21b), _0x1828ef(0x36a), _0x1828ef(0x454), '#CC9933', _0x1828ef(0x203), _0x1828ef(0x314), _0x1828ef(0x178), _0x1828ef(0x160), _0x1828ef(0x33e), _0x1828ef(0x465), _0x1828ef(0x1e3), _0x1828ef(0x305), _0x1828ef(0x14e), _0x1828ef(0x485), _0x1828ef(0x462), _0x1828ef(0x27f), _0x1828ef(0x2bb), _0x1828ef(0x4a7), '#FF6600', _0x1828ef(0x453), _0x1828ef(0x328), '#FF9933', _0x1828ef(0x2f0), _0x1828ef(0x486)], _0x314fd5[_0x1828ef(0x2e8)]['j'] = function (_0x12069d) {
                var _0x370a0d = _0x1828ef;

                try {
                  return JSON[_0x370a0d(0x2eb)](_0x12069d);
                } catch (_0xe1a01d) {
                  return _0x370a0d(0x290) + _0xe1a01d[_0x370a0d(0x1cd)];
                }
              }, _0x314fd5[_0x1828ef(0x4b0)](_0x47269b());
            },
            0x67a: function _(_0xf78344, _0x57d5bb, _0x2d9bd3) {
              var _0x61e61b = a1_0x1adc;

              function _0x4e7b5c(_0x22272d) {
                var _0x10b483 = a1_0x1adc,
                    _0x468c62;

                function _0x1ce536() {
                  var _0x33f01a = a1_0x1adc;

                  if (_0x1ce536[_0x33f01a(0x36b)]) {
                    var _0x1c4ed6 = _0x1ce536,
                        _0x571c6b = +new Date(),
                        _0x12fa93 = _0x571c6b - (_0x468c62 || _0x571c6b);

                    _0x1c4ed6[_0x33f01a(0x4c9)] = _0x12fa93, _0x1c4ed6[_0x33f01a(0x484)] = _0x468c62, _0x1c4ed6[_0x33f01a(0x363)] = _0x571c6b, _0x468c62 = _0x571c6b;

                    for (var _0x8035bf = new Array(arguments[_0x33f01a(0x109)]), _0x55c14f = 0x0; _0x55c14f < _0x8035bf['length']; _0x55c14f++) _0x8035bf[_0x55c14f] = arguments[_0x55c14f];

                    _0x8035bf[0x0] = _0x57d5bb[_0x33f01a(0x2fd)](_0x8035bf[0x0]), _0x33f01a(0x2df) != typeof _0x8035bf[0x0] && _0x8035bf[_0x33f01a(0x2f6)]('%O');
                    var _0x2d57ea = 0x0;
                    _0x8035bf[0x0] = _0x8035bf[0x0][_0x33f01a(0x27c)](/%([a-zA-Z%])/g, function (_0x33b81b, _0x1e4a2e) {
                      var _0x2db353 = _0x33f01a;
                      if ('%%' === _0x33b81b) return _0x33b81b;
                      _0x2d57ea++;

                      var _0x4843e0 = _0x57d5bb[_0x2db353(0x2e8)][_0x1e4a2e];

                      if (_0x2db353(0x23a) == typeof _0x4843e0) {
                        var _0x37e0c1 = _0x8035bf[_0x2d57ea];
                        _0x33b81b = _0x4843e0[_0x2db353(0x20b)](_0x1c4ed6, _0x37e0c1), _0x8035bf[_0x2db353(0x35b)](_0x2d57ea, 0x1), _0x2d57ea--;
                      }

                      return _0x33b81b;
                    }), _0x57d5bb[_0x33f01a(0x2c2)]['call'](_0x1c4ed6, _0x8035bf);

                    var _0x3b76eb = _0x1ce536[_0x33f01a(0x4bf)] || _0x57d5bb[_0x33f01a(0x4bf)] || console['log'][_0x33f01a(0x42f)](console);

                    _0x3b76eb[_0x33f01a(0x148)](_0x1c4ed6, _0x8035bf);
                  }
                }

                return _0x1ce536[_0x10b483(0x367)] = _0x22272d, _0x1ce536[_0x10b483(0x36b)] = _0x57d5bb[_0x10b483(0x36b)](_0x22272d), _0x1ce536[_0x10b483(0x22f)] = _0x57d5bb['useColors'](), _0x1ce536[_0x10b483(0x20e)] = function (_0x5640ae) {
                  var _0x51f0d = _0x10b483,
                      _0xb2a45a,
                      _0x46cf68 = 0x0;

                  for (_0xb2a45a in _0x5640ae) _0x46cf68 = (_0x46cf68 << 0x5) - _0x46cf68 + _0x5640ae[_0x51f0d(0x3ca)](_0xb2a45a), _0x46cf68 |= 0x0;

                  return _0x57d5bb[_0x51f0d(0x3ec)][Math['abs'](_0x46cf68) % _0x57d5bb[_0x51f0d(0x3ec)]['length']];
                }(_0x22272d), _0x1ce536[_0x10b483(0x125)] = _0xece40c, _0x10b483(0x23a) == typeof _0x57d5bb[_0x10b483(0x15d)] && _0x57d5bb[_0x10b483(0x15d)](_0x1ce536), _0x57d5bb[_0x10b483(0x330)]['push'](_0x1ce536), _0x1ce536;
              }

              function _0xece40c() {
                var _0x4c687a = a1_0x1adc,
                    _0x364b04 = _0x57d5bb[_0x4c687a(0x330)][_0x4c687a(0x458)](this);

                return -0x1 !== _0x364b04 && (_0x57d5bb['instances']['splice'](_0x364b04, 0x1), !0x0);
              }

              (_0x57d5bb = _0xf78344[_0x61e61b(0x10f)] = _0x4e7b5c[_0x61e61b(0x29a)] = _0x4e7b5c[_0x61e61b(0x4b4)] = _0x4e7b5c)['coerce'] = function (_0x7448ed) {
                var _0x33d78c = _0x61e61b;
                return _0x7448ed instanceof Error ? _0x7448ed['stack'] || _0x7448ed[_0x33d78c(0x1cd)] : _0x7448ed;
              }, _0x57d5bb['disable'] = function () {
                _0x57d5bb['enable']('');
              }, _0x57d5bb[_0x61e61b(0x4b0)] = function (_0x3ecc1a) {
                var _0x36c624 = _0x61e61b,
                    _0x554f24;

                _0x57d5bb['save'](_0x3ecc1a), _0x57d5bb[_0x36c624(0x1ce)] = [], _0x57d5bb[_0x36c624(0x133)] = [];

                var _0x3658ae = ('string' == typeof _0x3ecc1a ? _0x3ecc1a : '')[_0x36c624(0x194)](/[\s,]+/),
                    _0x32d96a = _0x3658ae[_0x36c624(0x109)];

                for (_0x554f24 = 0x0; _0x554f24 < _0x32d96a; _0x554f24++) _0x3658ae[_0x554f24] && ('-' === (_0x3ecc1a = _0x3658ae[_0x554f24][_0x36c624(0x27c)](/\*/g, _0x36c624(0x34b)))[0x0] ? _0x57d5bb[_0x36c624(0x133)]['push'](new RegExp('^' + _0x3ecc1a[_0x36c624(0x1ba)](0x1) + '$')) : _0x57d5bb[_0x36c624(0x1ce)][_0x36c624(0x4c0)](new RegExp('^' + _0x3ecc1a + '$')));

                for (_0x554f24 = 0x0; _0x554f24 < _0x57d5bb[_0x36c624(0x330)][_0x36c624(0x109)]; _0x554f24++) {
                  var _0x29bad1 = _0x57d5bb[_0x36c624(0x330)][_0x554f24];

                  _0x29bad1[_0x36c624(0x36b)] = _0x57d5bb['enabled'](_0x29bad1['namespace']);
                }
              }, _0x57d5bb[_0x61e61b(0x36b)] = function (_0x6bf99d) {
                var _0x1c9e12 = _0x61e61b;
                if ('*' === _0x6bf99d[_0x6bf99d['length'] - 0x1]) return !0x0;

                var _0x2d1116, _0x59febd;

                for (_0x2d1116 = 0x0, _0x59febd = _0x57d5bb[_0x1c9e12(0x133)][_0x1c9e12(0x109)]; _0x2d1116 < _0x59febd; _0x2d1116++) if (_0x57d5bb[_0x1c9e12(0x133)][_0x2d1116][_0x1c9e12(0x4cc)](_0x6bf99d)) return !0x1;

                for (_0x2d1116 = 0x0, _0x59febd = _0x57d5bb[_0x1c9e12(0x1ce)][_0x1c9e12(0x109)]; _0x2d1116 < _0x59febd; _0x2d1116++) if (_0x57d5bb[_0x1c9e12(0x1ce)][_0x2d1116]['test'](_0x6bf99d)) return !0x0;

                return !0x1;
              }, _0x57d5bb['humanize'] = _0x2d9bd3(0x1e90), _0x57d5bb['instances'] = [], _0x57d5bb[_0x61e61b(0x1ce)] = [], _0x57d5bb[_0x61e61b(0x133)] = [], _0x57d5bb['formatters'] = {};
            },
            0xddd: function _(_0x1000c2) {
              var _0x15220b = a1_0x1adc;
              _0x1000c2[_0x15220b(0x10f)] = 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : Function('return\x20this')();
            },
            0x175f: function _(_0x3c624b, _0x227424, _0x23f03b) {
              var _0x594de4 = a1_0x1adc;
              _0x3c624b[_0x594de4(0x10f)] = _0x23f03b(0x890), _0x3c624b['exports'][_0x594de4(0x319)] = _0x23f03b(0x1167);
            },
            0x890: function _(_0x5cf5a0, _0x5d0f6b, _0x3ee0fa) {
              var _0x2e6b19 = a1_0x1adc,
                  _0x643d0d = _0x3ee0fa(0xd18),
                  _0x41defd = _0x3ee0fa(0x223f),
                  _0x3272cd = _0x3ee0fa(0x4cb)(_0x2e6b19(0x384)),
                  _0x3dee9e = _0x3ee0fa(0x1cbb),
                  _0x5a19eb = _0x3ee0fa(0x1167),
                  _0x2eef57 = _0x3ee0fa(0x105b),
                  _0x12fba4 = _0x3ee0fa(0x726);

              function _0x483093(_0x5cd049, _0x583037) {
                var _0x3e5990 = _0x2e6b19;
                if (!(this instanceof _0x483093)) return new _0x483093(_0x5cd049, _0x583037);
                _0x583037 = _0x583037 || {}, _0x5cd049 && _0x3e5990(0x26e) == typeof _0x5cd049 && (_0x583037 = _0x5cd049, _0x5cd049 = null), _0x5cd049 ? (_0x5cd049 = _0x2eef57(_0x5cd049), _0x583037['hostname'] = _0x5cd049['host'], _0x583037['secure'] = _0x3e5990(0x1b7) === _0x5cd049[_0x3e5990(0x280)] || _0x3e5990(0x4a6) === _0x5cd049['protocol'], _0x583037[_0x3e5990(0x226)] = _0x5cd049['port'], _0x5cd049[_0x3e5990(0x174)] && (_0x583037[_0x3e5990(0x174)] = _0x5cd049[_0x3e5990(0x174)])) : _0x583037[_0x3e5990(0x4a9)] && (_0x583037[_0x3e5990(0x21a)] = _0x2eef57(_0x583037[_0x3e5990(0x4a9)])[_0x3e5990(0x4a9)]), this[_0x3e5990(0x46e)] = null != _0x583037[_0x3e5990(0x46e)] ? _0x583037[_0x3e5990(0x46e)] : _0x3e5990(0x121) != typeof location && _0x3e5990(0x24e) === location['protocol'], _0x583037[_0x3e5990(0x21a)] && !_0x583037['port'] && (_0x583037[_0x3e5990(0x226)] = this[_0x3e5990(0x46e)] ? '443' : '80'), this[_0x3e5990(0x136)] = _0x583037[_0x3e5990(0x136)] || !0x1, this[_0x3e5990(0x21a)] = _0x583037[_0x3e5990(0x21a)] || (_0x3e5990(0x121) != typeof location ? location[_0x3e5990(0x21a)] : _0x3e5990(0x200)), this['port'] = _0x583037[_0x3e5990(0x226)] || (_0x3e5990(0x121) != typeof location && location[_0x3e5990(0x226)] ? location[_0x3e5990(0x226)] : this[_0x3e5990(0x46e)] ? 0x1bb : 0x50), this['query'] = _0x583037[_0x3e5990(0x174)] || {}, 'string' == typeof this[_0x3e5990(0x174)] && (this[_0x3e5990(0x174)] = _0x12fba4[_0x3e5990(0x2a8)](this[_0x3e5990(0x174)])), this[_0x3e5990(0x1ed)] = !0x1 !== _0x583037['upgrade'], this[_0x3e5990(0x1c3)] = (_0x583037['path'] || _0x3e5990(0x142))[_0x3e5990(0x27c)](/\/$/, '') + '/', this[_0x3e5990(0x23e)] = !!_0x583037[_0x3e5990(0x23e)], this[_0x3e5990(0x241)] = !0x1 !== _0x583037['jsonp'], this['forceBase64'] = !!_0x583037[_0x3e5990(0x259)], this[_0x3e5990(0x110)] = !!_0x583037[_0x3e5990(0x110)], this[_0x3e5990(0x383)] = !0x1 !== _0x583037[_0x3e5990(0x383)], this['timestampParam'] = _0x583037[_0x3e5990(0x390)] || 't', this[_0x3e5990(0x443)] = _0x583037[_0x3e5990(0x443)], this[_0x3e5990(0x3a3)] = _0x583037['transports'] || ['polling', _0x3e5990(0x254)], this[_0x3e5990(0x13a)] = _0x583037[_0x3e5990(0x13a)] || {}, this[_0x3e5990(0x3cd)] = '', this['writeBuffer'] = [], this['prevBufferLen'] = 0x0, this[_0x3e5990(0x1ad)] = _0x583037[_0x3e5990(0x1ad)] || 0x34b, this['rememberUpgrade'] = _0x583037[_0x3e5990(0x373)] || !0x1, this[_0x3e5990(0x2dc)] = null, this[_0x3e5990(0x46b)] = _0x583037[_0x3e5990(0x46b)], this[_0x3e5990(0x208)] = !0x1 !== _0x583037[_0x3e5990(0x208)] && (_0x583037[_0x3e5990(0x208)] || {}), !0x0 === this['perMessageDeflate'] && (this[_0x3e5990(0x208)] = {}), this[_0x3e5990(0x208)] && null == this['perMessageDeflate'][_0x3e5990(0x3bd)] && (this[_0x3e5990(0x208)]['threshold'] = 0x400), this[_0x3e5990(0x29d)] = _0x583037[_0x3e5990(0x29d)] || void 0x0, this[_0x3e5990(0x308)] = _0x583037['key'] || void 0x0, this[_0x3e5990(0x45f)] = _0x583037[_0x3e5990(0x45f)] || void 0x0, this[_0x3e5990(0x3f2)] = _0x583037[_0x3e5990(0x3f2)] || void 0x0, this['ca'] = _0x583037['ca'] || void 0x0, this['ciphers'] = _0x583037[_0x3e5990(0x166)] || void 0x0, this[_0x3e5990(0x2fa)] = void 0x0 === _0x583037['rejectUnauthorized'] || _0x583037[_0x3e5990(0x2fa)], this['forceNode'] = !!_0x583037[_0x3e5990(0x28d)], this[_0x3e5990(0x4af)] = _0x3e5990(0x121) != typeof navigator && _0x3e5990(0x2df) == typeof navigator['product'] && _0x3e5990(0x446) === navigator[_0x3e5990(0x18d)][_0x3e5990(0x444)](), ('undefined' == typeof self || this[_0x3e5990(0x4af)]) && (_0x583037[_0x3e5990(0x2e3)] && Object['keys'](_0x583037['extraHeaders'])['length'] > 0x0 && (this[_0x3e5990(0x2e3)] = _0x583037[_0x3e5990(0x2e3)]), _0x583037[_0x3e5990(0x271)] && (this[_0x3e5990(0x271)] = _0x583037['localAddress'])), this['id'] = null, this[_0x3e5990(0x3cf)] = null, this['pingInterval'] = null, this[_0x3e5990(0x261)] = null, this[_0x3e5990(0x420)] = null, this['pingTimeoutTimer'] = null, this[_0x3e5990(0x32e)]();
              }

              _0x5cf5a0[_0x2e6b19(0x10f)] = _0x483093, _0x483093['priorWebsocketSuccess'] = !0x1, _0x41defd(_0x483093[_0x2e6b19(0x267)]), _0x483093[_0x2e6b19(0x280)] = _0x5a19eb['protocol'], _0x483093[_0x2e6b19(0x468)] = _0x483093, _0x483093[_0x2e6b19(0x2b6)] = _0x3ee0fa(0x1960), _0x483093[_0x2e6b19(0x3a3)] = _0x3ee0fa(0xd18), _0x483093[_0x2e6b19(0x319)] = _0x3ee0fa(0x1167), _0x483093['prototype'][_0x2e6b19(0x3b1)] = function (_0x3d7b37) {
                var _0x440364 = _0x2e6b19;

                _0x3272cd(_0x440364(0x4b1), _0x3d7b37);

                var _0xf87c4b = function (_0x476e6a) {
                  var _0x4e7a3d = _0x440364,
                      _0x4bdf09 = {};

                  for (var _0x4a8921 in _0x476e6a) _0x476e6a[_0x4e7a3d(0x19c)](_0x4a8921) && (_0x4bdf09[_0x4a8921] = _0x476e6a[_0x4a8921]);

                  return _0x4bdf09;
                }(this[_0x440364(0x174)]);

                _0xf87c4b[_0x440364(0x3ac)] = _0x5a19eb[_0x440364(0x280)], _0xf87c4b[_0x440364(0x23d)] = _0x3d7b37;

                var _0x3dc0af = this[_0x440364(0x13a)][_0x3d7b37] || {};

                return this['id'] && (_0xf87c4b[_0x440364(0x3c7)] = this['id']), new _0x643d0d[_0x3d7b37]({
                  'query': _0xf87c4b,
                  'socket': this,
                  'agent': _0x3dc0af['agent'] || this[_0x440364(0x136)],
                  'hostname': _0x3dc0af['hostname'] || this['hostname'],
                  'port': _0x3dc0af[_0x440364(0x226)] || this[_0x440364(0x226)],
                  'secure': _0x3dc0af[_0x440364(0x46e)] || this['secure'],
                  'path': _0x3dc0af[_0x440364(0x1c3)] || this['path'],
                  'forceJSONP': _0x3dc0af[_0x440364(0x23e)] || this[_0x440364(0x23e)],
                  'jsonp': _0x3dc0af['jsonp'] || this[_0x440364(0x241)],
                  'forceBase64': _0x3dc0af['forceBase64'] || this[_0x440364(0x259)],
                  'enablesXDR': _0x3dc0af[_0x440364(0x110)] || this[_0x440364(0x110)],
                  'withCredentials': _0x3dc0af['withCredentials'] || this[_0x440364(0x383)],
                  'timestampRequests': _0x3dc0af[_0x440364(0x443)] || this[_0x440364(0x443)],
                  'timestampParam': _0x3dc0af[_0x440364(0x390)] || this[_0x440364(0x390)],
                  'policyPort': _0x3dc0af['policyPort'] || this['policyPort'],
                  'pfx': _0x3dc0af[_0x440364(0x29d)] || this['pfx'],
                  'key': _0x3dc0af[_0x440364(0x308)] || this[_0x440364(0x308)],
                  'passphrase': _0x3dc0af[_0x440364(0x45f)] || this['passphrase'],
                  'cert': _0x3dc0af['cert'] || this[_0x440364(0x3f2)],
                  'ca': _0x3dc0af['ca'] || this['ca'],
                  'ciphers': _0x3dc0af['ciphers'] || this[_0x440364(0x166)],
                  'rejectUnauthorized': _0x3dc0af[_0x440364(0x2fa)] || this['rejectUnauthorized'],
                  'perMessageDeflate': _0x3dc0af[_0x440364(0x208)] || this[_0x440364(0x208)],
                  'extraHeaders': _0x3dc0af[_0x440364(0x2e3)] || this[_0x440364(0x2e3)],
                  'forceNode': _0x3dc0af[_0x440364(0x28d)] || this[_0x440364(0x28d)],
                  'localAddress': _0x3dc0af[_0x440364(0x271)] || this['localAddress'],
                  'requestTimeout': _0x3dc0af[_0x440364(0x1cb)] || this[_0x440364(0x1cb)],
                  'protocols': _0x3dc0af[_0x440364(0x1bb)] || void 0x0,
                  'isReactNative': this['isReactNative']
                });
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x32e)] = function () {
                var _0x5048f7 = _0x2e6b19,
                    _0x239553;

                if (this[_0x5048f7(0x373)] && _0x483093[_0x5048f7(0x42e)] && -0x1 !== this[_0x5048f7(0x3a3)][_0x5048f7(0x458)]('websocket')) _0x239553 = 'websocket';else {
                  if (0x0 === this[_0x5048f7(0x3a3)][_0x5048f7(0x109)]) {
                    var _0x25a5cb = this;

                    return void setTimeout(function () {
                      var _0x554e74 = _0x5048f7;

                      _0x25a5cb['emit'](_0x554e74(0x47c), _0x554e74(0x31a));
                    }, 0x0);
                  }

                  _0x239553 = this[_0x5048f7(0x3a3)][0x0];
                }
                this['readyState'] = _0x5048f7(0x2d3);

                try {
                  _0x239553 = this[_0x5048f7(0x3b1)](_0x239553);
                } catch (_0x2c2cd9) {
                  return this['transports']['shift'](), void this[_0x5048f7(0x32e)]();
                }

                _0x239553[_0x5048f7(0x32e)](), this[_0x5048f7(0x15b)](_0x239553);
              }, _0x483093['prototype'][_0x2e6b19(0x15b)] = function (_0x100a02) {
                var _0xf769be = _0x2e6b19;

                _0x3272cd(_0xf769be(0x141), _0x100a02['name']);

                var _0x36c47f = this;

                this[_0xf769be(0x23d)] && (_0x3272cd('clearing\x20existing\x20transport\x20%s', this[_0xf769be(0x23d)]['name']), this[_0xf769be(0x23d)]['removeAllListeners']()), this[_0xf769be(0x23d)] = _0x100a02, _0x100a02['on'](_0xf769be(0x3fb), function () {
                  var _0x50c128 = _0xf769be;

                  _0x36c47f[_0x50c128(0x3bc)]();
                })['on'](_0xf769be(0x43e), function (_0x49be4c) {
                  var _0x31705f = _0xf769be;

                  _0x36c47f[_0x31705f(0x332)](_0x49be4c);
                })['on'](_0xf769be(0x47c), function (_0x4e0a81) {
                  var _0x243629 = _0xf769be;

                  _0x36c47f[_0x243629(0x16a)](_0x4e0a81);
                })['on'](_0xf769be(0x1b9), function () {
                  var _0xb697e1 = _0xf769be;

                  _0x36c47f[_0xb697e1(0x44c)]('transport\x20close');
                });
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x417)] = function (_0x509944) {
                var _0x209bd5 = _0x2e6b19;

                _0x3272cd(_0x209bd5(0x436), _0x509944);

                var _0x8cdb84 = this[_0x209bd5(0x3b1)](_0x509944, {
                  'probe': 0x1
                }),
                    _0x468efb = !0x1,
                    _0x150c3f = this;

                function _0x345a88() {
                  var _0x3971f1 = _0x209bd5;

                  if (_0x150c3f['onlyBinaryUpgrades']) {
                    var _0x4ed15f = !this[_0x3971f1(0x1e0)] && _0x150c3f[_0x3971f1(0x23d)]['supportsBinary'];

                    _0x468efb = _0x468efb || _0x4ed15f;
                  }

                  _0x468efb || (_0x3272cd(_0x3971f1(0x303), _0x509944), _0x8cdb84[_0x3971f1(0x362)]([{
                    'type': _0x3971f1(0x3e5),
                    'data': 'probe'
                  }]), _0x8cdb84['once'](_0x3971f1(0x43e), function (_0xffadde) {
                    var _0x5172c1 = _0x3971f1;

                    if (!_0x468efb) {
                      if ('pong' === _0xffadde[_0x5172c1(0x1bd)] && _0x5172c1(0x417) === _0xffadde[_0x5172c1(0x28e)]) {
                        if (_0x3272cd(_0x5172c1(0x2e0), _0x509944), _0x150c3f['upgrading'] = !0x0, _0x150c3f['emit'](_0x5172c1(0x46a), _0x8cdb84), !_0x8cdb84) return;
                        _0x483093[_0x5172c1(0x42e)] = _0x5172c1(0x254) === _0x8cdb84['name'], _0x3272cd('pausing\x20current\x20transport\x20\x22%s\x22', _0x150c3f[_0x5172c1(0x23d)][_0x5172c1(0x1fb)]), _0x150c3f[_0x5172c1(0x23d)][_0x5172c1(0x3b3)](function () {
                          var _0x4ac695 = _0x5172c1;
                          _0x468efb || _0x4ac695(0x189) !== _0x150c3f[_0x4ac695(0x3cd)] && (_0x3272cd(_0x4ac695(0x45a)), _0x1b0b5f(), _0x150c3f[_0x4ac695(0x15b)](_0x8cdb84), _0x8cdb84['send']([{
                            'type': _0x4ac695(0x1ed)
                          }]), _0x150c3f[_0x4ac695(0x426)]('upgrade', _0x8cdb84), _0x8cdb84 = null, _0x150c3f[_0x4ac695(0x46a)] = !0x1, _0x150c3f[_0x4ac695(0x402)]());
                        });
                      } else {
                        _0x3272cd(_0x5172c1(0x206), _0x509944);

                        var _0xed0cbd = new Error(_0x5172c1(0x1dc));

                        _0xed0cbd[_0x5172c1(0x23d)] = _0x8cdb84[_0x5172c1(0x1fb)], _0x150c3f[_0x5172c1(0x426)](_0x5172c1(0x1d3), _0xed0cbd);
                      }
                    }
                  }));
                }

                function _0xe4021f() {
                  var _0x351cba = _0x209bd5;
                  _0x468efb || (_0x468efb = !0x0, _0x1b0b5f(), _0x8cdb84[_0x351cba(0x1b9)](), _0x8cdb84 = null);
                }

                function _0x2000eb(_0x2d0dc3) {
                  var _0x5a42d0 = _0x209bd5,
                      _0x2f329e = new Error(_0x5a42d0(0x463) + _0x2d0dc3);

                  _0x2f329e[_0x5a42d0(0x23d)] = _0x8cdb84[_0x5a42d0(0x1fb)], _0xe4021f(), _0x3272cd(_0x5a42d0(0x157), _0x509944, _0x2d0dc3), _0x150c3f[_0x5a42d0(0x426)](_0x5a42d0(0x1d3), _0x2f329e);
                }

                function _0x5c5c47() {
                  var _0x100c26 = _0x209bd5;

                  _0x2000eb(_0x100c26(0x279));
                }

                function _0x1b8f58() {
                  var _0x10f9b6 = _0x209bd5;

                  _0x2000eb(_0x10f9b6(0x3e9));
                }

                function _0x47b5f3(_0x5f7b94) {
                  var _0x36faff = _0x209bd5;
                  _0x8cdb84 && _0x5f7b94['name'] !== _0x8cdb84[_0x36faff(0x1fb)] && (_0x3272cd(_0x36faff(0x375), _0x5f7b94['name'], _0x8cdb84['name']), _0xe4021f());
                }

                function _0x1b0b5f() {
                  var _0xc32dce = _0x209bd5;
                  _0x8cdb84[_0xc32dce(0x126)]('open', _0x345a88), _0x8cdb84['removeListener'](_0xc32dce(0x47c), _0x2000eb), _0x8cdb84[_0xc32dce(0x126)](_0xc32dce(0x1b9), _0x5c5c47), _0x150c3f[_0xc32dce(0x126)](_0xc32dce(0x1b9), _0x1b8f58), _0x150c3f[_0xc32dce(0x126)](_0xc32dce(0x46a), _0x47b5f3);
                }

                _0x483093[_0x209bd5(0x42e)] = !0x1, _0x8cdb84['once']('open', _0x345a88), _0x8cdb84['once'](_0x209bd5(0x47c), _0x2000eb), _0x8cdb84[_0x209bd5(0x466)](_0x209bd5(0x1b9), _0x5c5c47), this[_0x209bd5(0x466)](_0x209bd5(0x1b9), _0x1b8f58), this[_0x209bd5(0x466)](_0x209bd5(0x46a), _0x47b5f3), _0x8cdb84[_0x209bd5(0x32e)]();
              }, _0x483093[_0x2e6b19(0x267)]['onOpen'] = function () {
                var _0x4c9199 = _0x2e6b19;

                if (_0x3272cd(_0x4c9199(0x488)), this[_0x4c9199(0x3cd)] = _0x4c9199(0x32e), _0x483093[_0x4c9199(0x42e)] = 'websocket' === this[_0x4c9199(0x23d)]['name'], this['emit'](_0x4c9199(0x32e)), this[_0x4c9199(0x402)](), _0x4c9199(0x32e) === this['readyState'] && this[_0x4c9199(0x1ed)] && this[_0x4c9199(0x23d)][_0x4c9199(0x3b3)]) {
                  _0x3272cd(_0x4c9199(0x1b2));

                  for (var _0x1e9cf6 = 0x0, _0xecf32f = this[_0x4c9199(0x3cf)][_0x4c9199(0x109)]; _0x1e9cf6 < _0xecf32f; _0x1e9cf6++) this[_0x4c9199(0x417)](this[_0x4c9199(0x3cf)][_0x1e9cf6]);
                }
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x332)] = function (_0x1f618b) {
                var _0x28b59b = _0x2e6b19;
                if (_0x28b59b(0x2d3) === this[_0x28b59b(0x3cd)] || 'open' === this[_0x28b59b(0x3cd)] || _0x28b59b(0x3fa) === this[_0x28b59b(0x3cd)]) switch (_0x3272cd(_0x28b59b(0x188), _0x1f618b['type'], _0x1f618b[_0x28b59b(0x28e)]), this[_0x28b59b(0x426)](_0x28b59b(0x43e), _0x1f618b), this[_0x28b59b(0x426)](_0x28b59b(0x251)), _0x1f618b[_0x28b59b(0x1bd)]) {
                  case _0x28b59b(0x32e):
                    this[_0x28b59b(0x2ae)](JSON['parse'](_0x1f618b[_0x28b59b(0x28e)]));

                    break;

                  case 'pong':
                    this[_0x28b59b(0x143)](), this['emit'](_0x28b59b(0x3ed));
                    break;

                  case _0x28b59b(0x47c):
                    var _0xa4739 = new Error(_0x28b59b(0x149));

                    _0xa4739[_0x28b59b(0x22a)] = _0x1f618b[_0x28b59b(0x28e)], this['onError'](_0xa4739);
                    break;

                  case _0x28b59b(0x1cd):
                    this[_0x28b59b(0x426)](_0x28b59b(0x28e), _0x1f618b['data']), this[_0x28b59b(0x426)]('message', _0x1f618b['data']);
                } else _0x3272cd(_0x28b59b(0x4a0), this[_0x28b59b(0x3cd)]);
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x2ae)] = function (_0x2f5b1f) {
                var _0x45561f = _0x2e6b19;
                this[_0x45561f(0x426)]('handshake', _0x2f5b1f), this['id'] = _0x2f5b1f[_0x45561f(0x3c7)], this['transport'][_0x45561f(0x174)][_0x45561f(0x3c7)] = _0x2f5b1f['sid'], this['upgrades'] = this[_0x45561f(0x470)](_0x2f5b1f[_0x45561f(0x3cf)]), this['pingInterval'] = _0x2f5b1f[_0x45561f(0x140)], this['pingTimeout'] = _0x2f5b1f[_0x45561f(0x261)], this[_0x45561f(0x18e)](), 'closed' !== this[_0x45561f(0x3cd)] && (this[_0x45561f(0x143)](), this['removeListener'](_0x45561f(0x251), this[_0x45561f(0x40c)]), this['on'](_0x45561f(0x251), this[_0x45561f(0x40c)]));
              }, _0x483093['prototype']['onHeartbeat'] = function (_0x59200f) {
                var _0x4eef65 = _0x2e6b19;
                clearTimeout(this[_0x4eef65(0x38e)]);

                var _0x226ae6 = this;

                _0x226ae6[_0x4eef65(0x38e)] = setTimeout(function () {
                  var _0x1636de = _0x4eef65;
                  _0x1636de(0x189) !== _0x226ae6[_0x1636de(0x3cd)] && _0x226ae6[_0x1636de(0x44c)](_0x1636de(0x22e));
                }, _0x59200f || _0x226ae6['pingInterval'] + _0x226ae6[_0x4eef65(0x261)]);
              }, _0x483093[_0x2e6b19(0x267)]['setPing'] = function () {
                var _0x1a5cac = this;

                clearTimeout(_0x1a5cac['pingIntervalTimer']), _0x1a5cac['pingIntervalTimer'] = setTimeout(function () {
                  var _0x314504 = a1_0x1adc;
                  _0x3272cd('writing\x20ping\x20packet\x20-\x20expecting\x20pong\x20within\x20%sms', _0x1a5cac[_0x314504(0x261)]), _0x1a5cac[_0x314504(0x3e5)](), _0x1a5cac[_0x314504(0x40c)](_0x1a5cac['pingTimeout']);
                }, _0x1a5cac['pingInterval']);
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x3e5)] = function () {
                var _0x147c85 = _0x2e6b19,
                    _0x4ca7bf = this;

                this['sendPacket'](_0x147c85(0x3e5), function () {
                  var _0xf55e09 = _0x147c85;

                  _0x4ca7bf[_0xf55e09(0x426)](_0xf55e09(0x3e5));
                });
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x3bc)] = function () {
                var _0x505778 = _0x2e6b19;
                this[_0x505778(0x2bc)][_0x505778(0x35b)](0x0, this[_0x505778(0x17a)]), this['prevBufferLen'] = 0x0, 0x0 === this[_0x505778(0x2bc)][_0x505778(0x109)] ? this[_0x505778(0x426)](_0x505778(0x3fb)) : this[_0x505778(0x402)]();
              }, _0x483093['prototype'][_0x2e6b19(0x402)] = function () {
                var _0x46abc8 = _0x2e6b19;
                _0x46abc8(0x189) !== this[_0x46abc8(0x3cd)] && this[_0x46abc8(0x23d)][_0x46abc8(0x494)] && !this['upgrading'] && this[_0x46abc8(0x2bc)][_0x46abc8(0x109)] && (_0x3272cd('flushing\x20%d\x20packets\x20in\x20socket', this[_0x46abc8(0x2bc)][_0x46abc8(0x109)]), this[_0x46abc8(0x23d)]['send'](this[_0x46abc8(0x2bc)]), this[_0x46abc8(0x17a)] = this['writeBuffer']['length'], this[_0x46abc8(0x426)]('flush'));
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x467)] = _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x362)] = function (_0x12b795, _0x137300, _0x82f52a) {
                var _0x15a592 = _0x2e6b19;
                return this[_0x15a592(0x48d)](_0x15a592(0x1cd), _0x12b795, _0x137300, _0x82f52a), this;
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x48d)] = function (_0x150904, _0x5b34aa, _0x3f250f, _0x3a5894) {
                var _0x5c91dd = _0x2e6b19;

                if ('function' == typeof _0x5b34aa && (_0x3a5894 = _0x5b34aa, _0x5b34aa = void 0x0), _0x5c91dd(0x23a) == typeof _0x3f250f && (_0x3a5894 = _0x3f250f, _0x3f250f = null), _0x5c91dd(0x3fa) !== this[_0x5c91dd(0x3cd)] && _0x5c91dd(0x189) !== this[_0x5c91dd(0x3cd)]) {
                  (_0x3f250f = _0x3f250f || {})['compress'] = !0x1 !== _0x3f250f[_0x5c91dd(0x3d2)];
                  var _0x3709a1 = {
                    'type': _0x150904,
                    'data': _0x5b34aa,
                    'options': _0x3f250f
                  };
                  this['emit'](_0x5c91dd(0x39c), _0x3709a1), this[_0x5c91dd(0x2bc)][_0x5c91dd(0x4c0)](_0x3709a1), _0x3a5894 && this[_0x5c91dd(0x466)](_0x5c91dd(0x402), _0x3a5894), this['flush']();
                }
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x1b9)] = function () {
                var _0x5f0dea = _0x2e6b19;

                if (_0x5f0dea(0x2d3) === this[_0x5f0dea(0x3cd)] || _0x5f0dea(0x32e) === this['readyState']) {
                  this[_0x5f0dea(0x3cd)] = _0x5f0dea(0x3fa);

                  var _0x305b3b = this;

                  this['writeBuffer']['length'] ? this[_0x5f0dea(0x466)](_0x5f0dea(0x3fb), function () {
                    var _0xbc3138 = _0x5f0dea;
                    this[_0xbc3138(0x46a)] ? _0x4547db() : _0x55a892();
                  }) : this['upgrading'] ? _0x4547db() : _0x55a892();
                }

                function _0x55a892() {
                  var _0x20a491 = _0x5f0dea;
                  _0x305b3b[_0x20a491(0x44c)](_0x20a491(0x1ab)), _0x3272cd(_0x20a491(0x130)), _0x305b3b[_0x20a491(0x23d)]['close']();
                }

                function _0x42d5e1() {
                  var _0x195caa = _0x5f0dea;
                  _0x305b3b[_0x195caa(0x126)](_0x195caa(0x1ed), _0x42d5e1), _0x305b3b[_0x195caa(0x126)](_0x195caa(0x1d3), _0x42d5e1), _0x55a892();
                }

                function _0x4547db() {
                  var _0x443cf7 = _0x5f0dea;
                  _0x305b3b[_0x443cf7(0x466)](_0x443cf7(0x1ed), _0x42d5e1), _0x305b3b[_0x443cf7(0x466)](_0x443cf7(0x1d3), _0x42d5e1);
                }

                return this;
              }, _0x483093['prototype']['onError'] = function (_0x25249b) {
                var _0x651450 = _0x2e6b19;
                _0x3272cd(_0x651450(0x4c5), _0x25249b), _0x483093['priorWebsocketSuccess'] = !0x1, this[_0x651450(0x426)](_0x651450(0x47c), _0x25249b), this[_0x651450(0x44c)](_0x651450(0x181), _0x25249b);
              }, _0x483093[_0x2e6b19(0x267)][_0x2e6b19(0x44c)] = function (_0x45a7fd, _0x53188f) {
                var _0x464a1e = _0x2e6b19;
                _0x464a1e(0x2d3) !== this[_0x464a1e(0x3cd)] && 'open' !== this['readyState'] && _0x464a1e(0x3fa) !== this['readyState'] || (_0x3272cd(_0x464a1e(0x1ea), _0x45a7fd), clearTimeout(this[_0x464a1e(0x420)]), clearTimeout(this[_0x464a1e(0x38e)]), this[_0x464a1e(0x23d)][_0x464a1e(0x1b5)]('close'), this[_0x464a1e(0x23d)][_0x464a1e(0x1b9)](), this['transport'][_0x464a1e(0x1b5)](), this[_0x464a1e(0x3cd)] = 'closed', this['id'] = null, this[_0x464a1e(0x426)]('close', _0x45a7fd, _0x53188f), this['writeBuffer'] = [], this[_0x464a1e(0x17a)] = 0x0);
              }, _0x483093['prototype']['filterUpgrades'] = function (_0x19617b) {
                var _0x2e76dc = _0x2e6b19;

                for (var _0x2cd35c = [], _0x187e92 = 0x0, _0x509c4e = _0x19617b['length']; _0x187e92 < _0x509c4e; _0x187e92++) ~_0x3dee9e(this[_0x2e76dc(0x3a3)], _0x19617b[_0x187e92]) && _0x2cd35c[_0x2e76dc(0x4c0)](_0x19617b[_0x187e92]);

                return _0x2cd35c;
              };
            },
            0x1960: function _(_0x40f7dc, _0x3fb620, _0x3cd48a) {
              var _0x2fec74 = a1_0x1adc,
                  _0x498deb = _0x3cd48a(0x1167),
                  _0x475314 = _0x3cd48a(0x223f);

              function _0x4dd469(_0x3122ac) {
                var _0x22aae7 = a1_0x1adc;
                this['path'] = _0x3122ac['path'], this[_0x22aae7(0x21a)] = _0x3122ac[_0x22aae7(0x21a)], this[_0x22aae7(0x226)] = _0x3122ac[_0x22aae7(0x226)], this[_0x22aae7(0x46e)] = _0x3122ac['secure'], this[_0x22aae7(0x174)] = _0x3122ac[_0x22aae7(0x174)], this['timestampParam'] = _0x3122ac['timestampParam'], this[_0x22aae7(0x443)] = _0x3122ac[_0x22aae7(0x443)], this[_0x22aae7(0x3cd)] = '', this[_0x22aae7(0x136)] = _0x3122ac[_0x22aae7(0x136)] || !0x1, this[_0x22aae7(0x154)] = _0x3122ac['socket'], this[_0x22aae7(0x110)] = _0x3122ac[_0x22aae7(0x110)], this[_0x22aae7(0x383)] = _0x3122ac['withCredentials'], this[_0x22aae7(0x29d)] = _0x3122ac[_0x22aae7(0x29d)], this[_0x22aae7(0x308)] = _0x3122ac['key'], this['passphrase'] = _0x3122ac['passphrase'], this[_0x22aae7(0x3f2)] = _0x3122ac[_0x22aae7(0x3f2)], this['ca'] = _0x3122ac['ca'], this['ciphers'] = _0x3122ac[_0x22aae7(0x166)], this[_0x22aae7(0x2fa)] = _0x3122ac[_0x22aae7(0x2fa)], this['forceNode'] = _0x3122ac[_0x22aae7(0x28d)], this[_0x22aae7(0x4af)] = _0x3122ac[_0x22aae7(0x4af)], this['extraHeaders'] = _0x3122ac[_0x22aae7(0x2e3)], this[_0x22aae7(0x271)] = _0x3122ac[_0x22aae7(0x271)];
              }

              _0x40f7dc[_0x2fec74(0x10f)] = _0x4dd469, _0x475314(_0x4dd469[_0x2fec74(0x267)]), _0x4dd469[_0x2fec74(0x267)]['onError'] = function (_0x20a571, _0x14a471) {
                var _0xd83d97 = _0x2fec74,
                    _0xd1a7d2 = new Error(_0x20a571);

                return _0xd1a7d2['type'] = _0xd83d97(0x20d), _0xd1a7d2[_0xd83d97(0x210)] = _0x14a471, this[_0xd83d97(0x426)](_0xd83d97(0x47c), _0xd1a7d2), this;
              }, _0x4dd469[_0x2fec74(0x267)][_0x2fec74(0x32e)] = function () {
                var _0x549bfc = _0x2fec74;
                return _0x549bfc(0x189) !== this[_0x549bfc(0x3cd)] && '' !== this[_0x549bfc(0x3cd)] || (this['readyState'] = _0x549bfc(0x2d3), this['doOpen']()), this;
              }, _0x4dd469[_0x2fec74(0x267)][_0x2fec74(0x1b9)] = function () {
                var _0x103939 = _0x2fec74;
                return 'opening' !== this[_0x103939(0x3cd)] && _0x103939(0x32e) !== this[_0x103939(0x3cd)] || (this[_0x103939(0x405)](), this[_0x103939(0x44c)]()), this;
              }, _0x4dd469[_0x2fec74(0x267)][_0x2fec74(0x362)] = function (_0x238d39) {
                var _0x59d9fc = _0x2fec74;
                if (_0x59d9fc(0x32e) !== this['readyState']) throw new Error(_0x59d9fc(0x204));

                this[_0x59d9fc(0x467)](_0x238d39);
              }, _0x4dd469[_0x2fec74(0x267)][_0x2fec74(0x18e)] = function () {
                var _0x3f42a4 = _0x2fec74;
                this['readyState'] = _0x3f42a4(0x32e), this[_0x3f42a4(0x494)] = !0x0, this['emit'](_0x3f42a4(0x32e));
              }, _0x4dd469[_0x2fec74(0x267)]['onData'] = function (_0x555ace) {
                var _0x5b5347 = _0x2fec74,
                    _0x43f9e7 = _0x498deb[_0x5b5347(0x15e)](_0x555ace, this[_0x5b5347(0x154)]['binaryType']);

                this['onPacket'](_0x43f9e7);
              }, _0x4dd469['prototype']['onPacket'] = function (_0x4db593) {
                var _0x18aab6 = _0x2fec74;

                this[_0x18aab6(0x426)](_0x18aab6(0x43e), _0x4db593);
              }, _0x4dd469['prototype'][_0x2fec74(0x44c)] = function () {
                var _0x4ef049 = _0x2fec74;
                this['readyState'] = 'closed', this[_0x4ef049(0x426)](_0x4ef049(0x1b9));
              };
            },
            0xd18: function _(_0x5e55d0, _0x15da8b, _0x1f03b2) {
              var _0x34ad52 = a1_0x1adc,
                  _0x12a9ce = _0x1f03b2(0xad9),
                  _0x7da51e = _0x1f03b2(0xd58),
                  _0x150901 = _0x1f03b2(0x2639),
                  _0x5d700c = _0x1f03b2(0x115a);

              _0x15da8b[_0x34ad52(0x401)] = function (_0x5bbe66) {
                var _0x302377 = _0x34ad52,
                    _0x4b4642 = !0x1,
                    _0x1a2ebc = !0x1,
                    _0x416def = !0x1 !== _0x5bbe66['jsonp'];

                if ('undefined' != typeof location) {
                  var _0xc47d90 = _0x302377(0x24e) === location[_0x302377(0x280)],
                      _0x4d5513 = location[_0x302377(0x226)];

                  _0x4d5513 || (_0x4d5513 = _0xc47d90 ? 0x1bb : 0x50), _0x4b4642 = _0x5bbe66[_0x302377(0x21a)] !== location['hostname'] || _0x4d5513 !== _0x5bbe66[_0x302377(0x226)], _0x1a2ebc = _0x5bbe66[_0x302377(0x46e)] !== _0xc47d90;
                }

                if (_0x5bbe66[_0x302377(0x2a1)] = _0x4b4642, _0x5bbe66['xscheme'] = _0x1a2ebc, 'open' in new _0x12a9ce(_0x5bbe66) && !_0x5bbe66['forceJSONP']) return new _0x7da51e(_0x5bbe66);
                if (!_0x416def) throw new Error(_0x302377(0x4ad));
                return new _0x150901(_0x5bbe66);
              }, _0x15da8b[_0x34ad52(0x254)] = _0x5d700c;
            },
            0x2639: function _(_0x5da6e3, _0x8c775a, _0x15fbc9) {
              var _0x23035d = a1_0x1adc,
                  _0x30fdaf = _0x15fbc9(0x2337),
                  _0x3d0ff4 = _0x15fbc9(0xf15),
                  _0x4d16d4 = _0x15fbc9(0xddd);

              _0x5da6e3[_0x23035d(0x10f)] = _0x2286cf;

              var _0x321f6b,
                  _0x17e67a = /\n/g,
                  _0x36bdc0 = /\\n/g;

              function _0xa4e6f5() {}

              function _0x2286cf(_0x5f0eea) {
                var _0x4e79b5 = _0x23035d;
                _0x30fdaf[_0x4e79b5(0x20b)](this, _0x5f0eea), this['query'] = this['query'] || {}, _0x321f6b || (_0x321f6b = _0x4d16d4[_0x4e79b5(0x295)] = _0x4d16d4[_0x4e79b5(0x295)] || []), this['index'] = _0x321f6b['length'];

                var _0x339944 = this;

                _0x321f6b[_0x4e79b5(0x4c0)](function (_0x222aa0) {
                  var _0x176447 = _0x4e79b5;

                  _0x339944[_0x176447(0x1ef)](_0x222aa0);
                }), this[_0x4e79b5(0x174)]['j'] = this[_0x4e79b5(0x1b3)], _0x4e79b5(0x23a) == typeof addEventListener && addEventListener(_0x4e79b5(0x3e8), function () {
                  var _0x596c35 = _0x4e79b5;
                  _0x339944[_0x596c35(0x41f)] && (_0x339944[_0x596c35(0x41f)][_0x596c35(0x474)] = _0xa4e6f5);
                }, !0x1);
              }

              _0x3d0ff4(_0x2286cf, _0x30fdaf), _0x2286cf[_0x23035d(0x267)][_0x23035d(0x1e0)] = !0x1, _0x2286cf[_0x23035d(0x267)][_0x23035d(0x405)] = function () {
                var _0x1750a0 = _0x23035d;
                this[_0x1750a0(0x41f)] && (this[_0x1750a0(0x41f)][_0x1750a0(0x4ba)][_0x1750a0(0x2e9)](this[_0x1750a0(0x41f)]), this[_0x1750a0(0x41f)] = null), this['form'] && (this[_0x1750a0(0x3cb)][_0x1750a0(0x4ba)][_0x1750a0(0x2e9)](this[_0x1750a0(0x3cb)]), this['form'] = null, this[_0x1750a0(0x315)] = null), _0x30fdaf[_0x1750a0(0x267)]['doClose'][_0x1750a0(0x20b)](this);
              }, _0x2286cf[_0x23035d(0x267)]['doPoll'] = function () {
                var _0x13aa56 = _0x23035d,
                    _0x3d4cfe = this,
                    _0x3ace45 = document[_0x13aa56(0x3db)]('script');

                this['script'] && (this['script']['parentNode'][_0x13aa56(0x2e9)](this[_0x13aa56(0x41f)]), this[_0x13aa56(0x41f)] = null), _0x3ace45[_0x13aa56(0x1f9)] = !0x0, _0x3ace45['src'] = this[_0x13aa56(0x3d1)](), _0x3ace45[_0x13aa56(0x474)] = function (_0xff5b47) {
                  var _0x3f8b99 = _0x13aa56;

                  _0x3d4cfe[_0x3f8b99(0x16a)](_0x3f8b99(0x476), _0xff5b47);
                };

                var _0x3ea523 = document[_0x13aa56(0x1fc)]('script')[0x0];

                _0x3ea523 ? _0x3ea523['parentNode'][_0x13aa56(0x4cb)](_0x3ace45, _0x3ea523) : (document['head'] || document[_0x13aa56(0x469)])[_0x13aa56(0x337)](_0x3ace45), this['script'] = _0x3ace45, _0x13aa56(0x121) != typeof navigator && /gecko/i['test'](navigator[_0x13aa56(0x2a9)]) && setTimeout(function () {
                  var _0x1541a2 = _0x13aa56,
                      _0x2e8cf3 = document[_0x1541a2(0x3db)](_0x1541a2(0x315));

                  document[_0x1541a2(0x469)][_0x1541a2(0x337)](_0x2e8cf3), document[_0x1541a2(0x469)][_0x1541a2(0x2e9)](_0x2e8cf3);
                }, 0x64);
              }, _0x2286cf[_0x23035d(0x267)][_0x23035d(0x422)] = function (_0x55d4b3, _0x3af5e9) {
                var _0x57fe61 = _0x23035d,
                    _0x3336de = this;

                if (!this[_0x57fe61(0x3cb)]) {
                  var _0x3ef818,
                      _0x42d0e3 = document[_0x57fe61(0x3db)](_0x57fe61(0x3cb)),
                      _0xd5cfba = document[_0x57fe61(0x3db)](_0x57fe61(0x118)),
                      _0x55395a = this['iframeId'] = _0x57fe61(0x4a4) + this[_0x57fe61(0x1b3)];

                  _0x42d0e3['className'] = _0x57fe61(0x496), _0x42d0e3[_0x57fe61(0x326)]['position'] = _0x57fe61(0x1cf), _0x42d0e3[_0x57fe61(0x326)][_0x57fe61(0x45b)] = _0x57fe61(0x292), _0x42d0e3[_0x57fe61(0x326)][_0x57fe61(0x313)] = _0x57fe61(0x292), _0x42d0e3['target'] = _0x55395a, _0x42d0e3[_0x57fe61(0x329)] = _0x57fe61(0x14d), _0x42d0e3[_0x57fe61(0x49d)](_0x57fe61(0x287), 'utf-8'), _0xd5cfba[_0x57fe61(0x1fb)] = 'd', _0x42d0e3[_0x57fe61(0x337)](_0xd5cfba), document[_0x57fe61(0x469)]['appendChild'](_0x42d0e3), this[_0x57fe61(0x3cb)] = _0x42d0e3, this[_0x57fe61(0x2f7)] = _0xd5cfba;
                }

                function _0x416ac7() {
                  _0x271a5c(), _0x3af5e9();
                }

                function _0x271a5c() {
                  var _0x2c9b78 = _0x57fe61;
                  if (_0x3336de[_0x2c9b78(0x315)]) try {
                    _0x3336de['form'][_0x2c9b78(0x2e9)](_0x3336de[_0x2c9b78(0x315)]);
                  } catch (_0x2b58c4) {
                    _0x3336de[_0x2c9b78(0x16a)](_0x2c9b78(0x27e), _0x2b58c4);
                  }

                  try {
                    var _0x345e5b = '<iframe\x20src=\x22javascript:0\x22\x20name=\x22' + _0x3336de[_0x2c9b78(0x156)] + '\x22>';

                    _0x3ef818 = document['createElement'](_0x345e5b);
                  } catch (_0x2b418d) {
                    (_0x3ef818 = document[_0x2c9b78(0x3db)]('iframe'))['name'] = _0x3336de['iframeId'], _0x3ef818[_0x2c9b78(0x19d)] = _0x2c9b78(0x131);
                  }

                  _0x3ef818['id'] = _0x3336de[_0x2c9b78(0x156)], _0x3336de['form'][_0x2c9b78(0x337)](_0x3ef818), _0x3336de['iframe'] = _0x3ef818;
                }

                this[_0x57fe61(0x3cb)]['action'] = this[_0x57fe61(0x3d1)](), _0x271a5c(), _0x55d4b3 = _0x55d4b3[_0x57fe61(0x27c)](_0x36bdc0, '\x5c\x0a'), this[_0x57fe61(0x2f7)]['value'] = _0x55d4b3[_0x57fe61(0x27c)](_0x17e67a, '\x5cn');

                try {
                  this['form']['submit']();
                } catch (_0x254bd1) {}

                this[_0x57fe61(0x315)][_0x57fe61(0x347)] ? this[_0x57fe61(0x315)]['onreadystatechange'] = function () {
                  var _0x5c387b = _0x57fe61;
                  _0x5c387b(0x435) === _0x3336de[_0x5c387b(0x315)][_0x5c387b(0x3cd)] && _0x416ac7();
                } : this[_0x57fe61(0x315)][_0x57fe61(0x2ff)] = _0x416ac7;
              };
            },
            0xd58: function _(_0x4b25be, _0x553fab, _0x3e1d6c) {
              var _0x3155e8 = a1_0x1adc,
                  _0x19f67a = _0x3e1d6c(0xad9),
                  _0x40d8f1 = _0x3e1d6c(0x2337),
                  _0xa2a73a = _0x3e1d6c(0x223f),
                  _0x28d256 = _0x3e1d6c(0xf15),
                  _0x189e45 = _0x3e1d6c(0x4cb)('engine.io-client:polling-xhr'),
                  _0x2c6b9e = _0x3e1d6c(0xddd);

              function _0x496da4() {}

              function _0x172593(_0x392a62) {
                var _0x43582a = a1_0x1adc;

                if (_0x40d8f1['call'](this, _0x392a62), this[_0x43582a(0x1cb)] = _0x392a62[_0x43582a(0x1cb)], this['extraHeaders'] = _0x392a62[_0x43582a(0x2e3)], _0x43582a(0x121) != typeof location) {
                  var _0x2d13b2 = _0x43582a(0x24e) === location[_0x43582a(0x280)],
                      _0x2c004a = location[_0x43582a(0x226)];

                  _0x2c004a || (_0x2c004a = _0x2d13b2 ? 0x1bb : 0x50), this['xd'] = 'undefined' != typeof location && _0x392a62[_0x43582a(0x21a)] !== location[_0x43582a(0x21a)] || _0x2c004a !== _0x392a62[_0x43582a(0x226)], this['xs'] = _0x392a62[_0x43582a(0x46e)] !== _0x2d13b2;
                }
              }

              function _0x5e53b9(_0xb50b16) {
                var _0x33f651 = a1_0x1adc;
                this[_0x33f651(0x329)] = _0xb50b16[_0x33f651(0x329)] || _0x33f651(0x30d), this[_0x33f651(0x3d1)] = _0xb50b16[_0x33f651(0x3d1)], this['xd'] = !!_0xb50b16['xd'], this['xs'] = !!_0xb50b16['xs'], this[_0x33f651(0x1f9)] = !0x1 !== _0xb50b16[_0x33f651(0x1f9)], this[_0x33f651(0x28e)] = void 0x0 !== _0xb50b16['data'] ? _0xb50b16[_0x33f651(0x28e)] : null, this[_0x33f651(0x136)] = _0xb50b16[_0x33f651(0x136)], this[_0x33f651(0x327)] = _0xb50b16[_0x33f651(0x327)], this['supportsBinary'] = _0xb50b16[_0x33f651(0x1e0)], this[_0x33f651(0x110)] = _0xb50b16[_0x33f651(0x110)], this[_0x33f651(0x383)] = _0xb50b16[_0x33f651(0x383)], this['requestTimeout'] = _0xb50b16[_0x33f651(0x1cb)], this[_0x33f651(0x29d)] = _0xb50b16[_0x33f651(0x29d)], this[_0x33f651(0x308)] = _0xb50b16[_0x33f651(0x308)], this['passphrase'] = _0xb50b16[_0x33f651(0x45f)], this[_0x33f651(0x3f2)] = _0xb50b16[_0x33f651(0x3f2)], this['ca'] = _0xb50b16['ca'], this['ciphers'] = _0xb50b16[_0x33f651(0x166)], this['rejectUnauthorized'] = _0xb50b16[_0x33f651(0x2fa)], this['extraHeaders'] = _0xb50b16[_0x33f651(0x2e3)], this[_0x33f651(0x14b)]();
              }

              function _0x3223ef() {
                var _0x1b5fbd = a1_0x1adc;

                for (var _0x3dbc63 in _0x5e53b9[_0x1b5fbd(0x236)]) _0x5e53b9['requests']['hasOwnProperty'](_0x3dbc63) && _0x5e53b9[_0x1b5fbd(0x236)][_0x3dbc63]['abort']();
              }

              _0x4b25be[_0x3155e8(0x10f)] = _0x172593, _0x4b25be['exports'][_0x3155e8(0x4c7)] = _0x5e53b9, _0x28d256(_0x172593, _0x40d8f1), _0x172593[_0x3155e8(0x267)]['supportsBinary'] = !0x0, _0x172593['prototype']['request'] = function (_0x3d0951) {
                var _0x39ddbd = _0x3155e8;
                return (_0x3d0951 = _0x3d0951 || {})[_0x39ddbd(0x3d1)] = this[_0x39ddbd(0x3d1)](), _0x3d0951['xd'] = this['xd'], _0x3d0951['xs'] = this['xs'], _0x3d0951['agent'] = this['agent'] || !0x1, _0x3d0951[_0x39ddbd(0x1e0)] = this['supportsBinary'], _0x3d0951[_0x39ddbd(0x110)] = this[_0x39ddbd(0x110)], _0x3d0951[_0x39ddbd(0x383)] = this['withCredentials'], _0x3d0951[_0x39ddbd(0x29d)] = this[_0x39ddbd(0x29d)], _0x3d0951[_0x39ddbd(0x308)] = this[_0x39ddbd(0x308)], _0x3d0951[_0x39ddbd(0x45f)] = this[_0x39ddbd(0x45f)], _0x3d0951['cert'] = this[_0x39ddbd(0x3f2)], _0x3d0951['ca'] = this['ca'], _0x3d0951[_0x39ddbd(0x166)] = this[_0x39ddbd(0x166)], _0x3d0951['rejectUnauthorized'] = this[_0x39ddbd(0x2fa)], _0x3d0951['requestTimeout'] = this['requestTimeout'], _0x3d0951[_0x39ddbd(0x2e3)] = this[_0x39ddbd(0x2e3)], new _0x5e53b9(_0x3d0951);
              }, _0x172593[_0x3155e8(0x267)][_0x3155e8(0x422)] = function (_0xce8d8e, _0x4d456f) {
                var _0x82a48b = _0x3155e8,
                    _0x53c9ca = _0x82a48b(0x2df) != typeof _0xce8d8e && void 0x0 !== _0xce8d8e,
                    _0x2eff12 = this['request']({
                  'method': _0x82a48b(0x14d),
                  'data': _0xce8d8e,
                  'isBinary': _0x53c9ca
                }),
                    _0x3ddd3f = this;

                _0x2eff12['on'](_0x82a48b(0x3fc), _0x4d456f), _0x2eff12['on']('error', function (_0x285e60) {
                  var _0x4196b5 = _0x82a48b;

                  _0x3ddd3f[_0x4196b5(0x16a)](_0x4196b5(0x25a), _0x285e60);
                }), this[_0x82a48b(0x2ca)] = _0x2eff12;
              }, _0x172593[_0x3155e8(0x267)][_0x3155e8(0x489)] = function () {
                var _0x4e7cab = _0x3155e8;

                _0x189e45(_0x4e7cab(0x41a));

                var _0x5b7b82 = this['request'](),
                    _0x5ff8ba = this;

                _0x5b7b82['on'](_0x4e7cab(0x28e), function (_0x54acf4) {
                  var _0x2648f3 = _0x4e7cab;

                  _0x5ff8ba[_0x2648f3(0x1ef)](_0x54acf4);
                }), _0x5b7b82['on'](_0x4e7cab(0x47c), function (_0x6bf095) {
                  var _0x23c228 = _0x4e7cab;

                  _0x5ff8ba[_0x23c228(0x16a)](_0x23c228(0x158), _0x6bf095);
                }), this[_0x4e7cab(0x11c)] = _0x5b7b82;
              }, _0xa2a73a(_0x5e53b9[_0x3155e8(0x267)]), _0x5e53b9[_0x3155e8(0x267)]['create'] = function () {
                var _0x46feac = _0x3155e8,
                    _0x4e61cd = {
                  'agent': this[_0x46feac(0x136)],
                  'xdomain': this['xd'],
                  'xscheme': this['xs'],
                  'enablesXDR': this[_0x46feac(0x110)]
                };
                _0x4e61cd[_0x46feac(0x29d)] = this[_0x46feac(0x29d)], _0x4e61cd[_0x46feac(0x308)] = this[_0x46feac(0x308)], _0x4e61cd[_0x46feac(0x45f)] = this['passphrase'], _0x4e61cd['cert'] = this[_0x46feac(0x3f2)], _0x4e61cd['ca'] = this['ca'], _0x4e61cd[_0x46feac(0x166)] = this[_0x46feac(0x166)], _0x4e61cd[_0x46feac(0x2fa)] = this[_0x46feac(0x2fa)];

                var _0x1199a5 = this['xhr'] = new _0x19f67a(_0x4e61cd),
                    _0x2ac5c1 = this;

                try {
                  _0x189e45(_0x46feac(0x19e), this[_0x46feac(0x329)], this[_0x46feac(0x3d1)]), _0x1199a5[_0x46feac(0x32e)](this[_0x46feac(0x329)], this[_0x46feac(0x3d1)], this['async']);

                  try {
                    if (this[_0x46feac(0x2e3)]) {
                      for (var _0x1f1d81 in _0x1199a5['setDisableHeaderCheck'] && _0x1199a5[_0x46feac(0x41b)](!0x0), this[_0x46feac(0x2e3)]) this[_0x46feac(0x2e3)][_0x46feac(0x19c)](_0x1f1d81) && _0x1199a5['setRequestHeader'](_0x1f1d81, this['extraHeaders'][_0x1f1d81]);
                    }
                  } catch (_0x488241) {}

                  if (_0x46feac(0x14d) === this['method']) try {
                    this['isBinary'] ? _0x1199a5[_0x46feac(0x3c8)]('Content-type', _0x46feac(0x3dc)) : _0x1199a5[_0x46feac(0x3c8)]('Content-type', _0x46feac(0x450));
                  } catch (_0x5a916e) {}

                  try {
                    _0x1199a5['setRequestHeader'](_0x46feac(0x3c2), _0x46feac(0x1f6));
                  } catch (_0x5babcc) {}

                  _0x46feac(0x383) in _0x1199a5 && (_0x1199a5[_0x46feac(0x383)] = this[_0x46feac(0x383)]), this[_0x46feac(0x1cb)] && (_0x1199a5['timeout'] = this[_0x46feac(0x1cb)]), this[_0x46feac(0x2e4)]() ? (_0x1199a5[_0x46feac(0x2ff)] = function () {
                    var _0x1d7039 = _0x46feac;

                    _0x2ac5c1[_0x1d7039(0x2ec)]();
                  }, _0x1199a5['onerror'] = function () {
                    var _0xbfe7ba = _0x46feac;

                    _0x2ac5c1[_0xbfe7ba(0x16a)](_0x1199a5[_0xbfe7ba(0x30a)]);
                  }) : _0x1199a5[_0x46feac(0x437)] = function () {
                    var _0x32a928 = _0x46feac;
                    if (0x2 === _0x1199a5[_0x32a928(0x3cd)]) try {
                      var _0x2ceb5c = _0x1199a5['getResponseHeader'](_0x32a928(0x12d));

                      (_0x2ac5c1[_0x32a928(0x1e0)] && _0x32a928(0x3dc) === _0x2ceb5c || 'application/octet-stream;\x20charset=UTF-8' === _0x2ceb5c) && (_0x1199a5[_0x32a928(0x2c8)] = _0x32a928(0x3d7));
                    } catch (_0x5f2edb) {}
                    0x4 === _0x1199a5['readyState'] && (0xc8 === _0x1199a5[_0x32a928(0x1d4)] || 0x4c7 === _0x1199a5[_0x32a928(0x1d4)] ? _0x2ac5c1['onLoad']() : setTimeout(function () {
                      var _0x51e8dc = _0x32a928;

                      _0x2ac5c1[_0x51e8dc(0x16a)](_0x51e8dc(0x35d) == typeof _0x1199a5[_0x51e8dc(0x1d4)] ? _0x1199a5[_0x51e8dc(0x1d4)] : 0x0);
                    }, 0x0));
                  }, _0x189e45(_0x46feac(0x2b8), this[_0x46feac(0x28e)]), _0x1199a5['send'](this['data']);
                } catch (_0x8ea2f8) {
                  return void setTimeout(function () {
                    _0x2ac5c1['onError'](_0x8ea2f8);
                  }, 0x0);
                }

                _0x46feac(0x121) != typeof document && (this[_0x46feac(0x1b3)] = _0x5e53b9[_0x46feac(0x3aa)]++, _0x5e53b9[_0x46feac(0x236)][this[_0x46feac(0x1b3)]] = this);
              }, _0x5e53b9['prototype'][_0x3155e8(0x324)] = function () {
                var _0x422b25 = _0x3155e8;
                this['emit'](_0x422b25(0x3fc)), this[_0x422b25(0x137)]();
              }, _0x5e53b9['prototype'][_0x3155e8(0x1ef)] = function (_0x305cd1) {
                var _0x27f117 = _0x3155e8;
                this['emit'](_0x27f117(0x28e), _0x305cd1), this[_0x27f117(0x324)]();
              }, _0x5e53b9[_0x3155e8(0x267)][_0x3155e8(0x16a)] = function (_0x246f97) {
                var _0x5965ea = _0x3155e8;
                this['emit'](_0x5965ea(0x47c), _0x246f97), this['cleanup'](!0x0);
              }, _0x5e53b9['prototype']['cleanup'] = function (_0x5dd4ad) {
                var _0x40f3c3 = _0x3155e8;

                if (void 0x0 !== this[_0x40f3c3(0x457)] && null !== this[_0x40f3c3(0x457)]) {
                  if (this[_0x40f3c3(0x2e4)]() ? this[_0x40f3c3(0x457)]['onload'] = this[_0x40f3c3(0x457)][_0x40f3c3(0x474)] = _0x496da4 : this[_0x40f3c3(0x457)][_0x40f3c3(0x437)] = _0x496da4, _0x5dd4ad) try {
                    this[_0x40f3c3(0x457)][_0x40f3c3(0x414)]();
                  } catch (_0x14d631) {}
                  _0x40f3c3(0x121) != typeof document && delete _0x5e53b9[_0x40f3c3(0x236)][this[_0x40f3c3(0x1b3)]], this['xhr'] = null;
                }
              }, _0x5e53b9[_0x3155e8(0x267)][_0x3155e8(0x2ec)] = function () {
                var _0x28c22c = _0x3155e8,
                    _0x86f40c;

                try {
                  var _0x2c49a4;

                  try {
                    _0x2c49a4 = this['xhr']['getResponseHeader'](_0x28c22c(0x12d));
                  } catch (_0x3775c2) {}

                  _0x86f40c = (_0x28c22c(0x3dc) === _0x2c49a4 || _0x28c22c(0x4d6) === _0x2c49a4) && this[_0x28c22c(0x457)][_0x28c22c(0x15a)] || this['xhr']['responseText'];
                } catch (_0x5b069f) {
                  this[_0x28c22c(0x16a)](_0x5b069f);
                }

                null != _0x86f40c && this['onData'](_0x86f40c);
              }, _0x5e53b9[_0x3155e8(0x267)]['hasXDR'] = function () {
                var _0x297664 = _0x3155e8;
                return _0x297664(0x121) != typeof XDomainRequest && !this['xs'] && this['enablesXDR'];
              }, _0x5e53b9[_0x3155e8(0x267)][_0x3155e8(0x414)] = function () {
                var _0x3ad1b7 = _0x3155e8;

                this[_0x3ad1b7(0x137)]();
              }, _0x5e53b9[_0x3155e8(0x3aa)] = 0x0, _0x5e53b9[_0x3155e8(0x236)] = {}, _0x3155e8(0x121) != typeof document && ('function' == typeof attachEvent ? attachEvent(_0x3155e8(0x22d), _0x3223ef) : _0x3155e8(0x23a) == typeof addEventListener && addEventListener(_0x3155e8(0x318) in _0x2c6b9e ? _0x3155e8(0x3eb) : _0x3155e8(0x1db), _0x3223ef, !0x1));
            },
            0x2337: function _(_0x577b9e, _0x481f15, _0x1df316) {
              var _0x3084cc = a1_0x1adc,
                  _0x5343fc = _0x1df316(0x1960),
                  _0x499c99 = _0x1df316(0x726),
                  _0x17867a = _0x1df316(0x1167),
                  _0x4e660d = _0x1df316(0xf15),
                  _0x485e05 = _0x1df316(0x8e9),
                  _0x1395f8 = _0x1df316(0x4cb)(_0x3084cc(0x359));

              _0x577b9e[_0x3084cc(0x10f)] = _0x1eac3f;

              var _0x5b99fd = null != new (_0x1df316(0xad9))({
                'xdomain': !0x1
              })['responseType'];

              function _0x1eac3f(_0x4dc49c) {
                var _0x28afe8 = _0x3084cc,
                    _0xba930b = _0x4dc49c && _0x4dc49c[_0x28afe8(0x259)];

                _0x5b99fd && !_0xba930b || (this[_0x28afe8(0x1e0)] = !0x1), _0x5343fc['call'](this, _0x4dc49c);
              }

              _0x4e660d(_0x1eac3f, _0x5343fc), _0x1eac3f[_0x3084cc(0x267)]['name'] = _0x3084cc(0x401), _0x1eac3f[_0x3084cc(0x267)]['doOpen'] = function () {
                var _0x3b3234 = _0x3084cc;

                this[_0x3b3234(0x192)]();
              }, _0x1eac3f[_0x3084cc(0x267)][_0x3084cc(0x3b3)] = function (_0x529cf9) {
                var _0x3d058a = _0x3084cc,
                    _0x52248b = this;

                function _0x3c4e45() {
                  var _0xe65135 = a1_0x1adc;
                  _0x1395f8('paused'), _0x52248b['readyState'] = _0xe65135(0x44a), _0x529cf9();
                }

                if (this[_0x3d058a(0x3cd)] = _0x3d058a(0x1aa), this['polling'] || !this[_0x3d058a(0x494)]) {
                  var _0x2b3caf = 0x0;
                  this[_0x3d058a(0x401)] && (_0x1395f8(_0x3d058a(0x2ba)), _0x2b3caf++, this[_0x3d058a(0x466)](_0x3d058a(0x119), function () {
                    var _0x16095a = _0x3d058a;
                    _0x1395f8(_0x16095a(0x227)), --_0x2b3caf || _0x3c4e45();
                  })), this[_0x3d058a(0x494)] || (_0x1395f8(_0x3d058a(0x343)), _0x2b3caf++, this[_0x3d058a(0x466)](_0x3d058a(0x3fb), function () {
                    var _0x281c3d = _0x3d058a;
                    _0x1395f8(_0x281c3d(0x3df)), --_0x2b3caf || _0x3c4e45();
                  }));
                } else _0x3c4e45();
              }, _0x1eac3f[_0x3084cc(0x267)][_0x3084cc(0x192)] = function () {
                var _0x199b80 = _0x3084cc;
                _0x1395f8(_0x199b80(0x401)), this['polling'] = !0x0, this[_0x199b80(0x489)](), this[_0x199b80(0x426)]('poll');
              }, _0x1eac3f[_0x3084cc(0x267)][_0x3084cc(0x1ef)] = function (_0x3340ad) {
                var _0x51440f = _0x3084cc,
                    _0x52a815 = this;

                _0x1395f8(_0x51440f(0x3f6), _0x3340ad), _0x17867a['decodePayload'](_0x3340ad, this[_0x51440f(0x154)][_0x51440f(0x2dc)], function (_0x415ffd, _0x5c8ca8, _0x2c9a5b) {
                  var _0x44769e = _0x51440f;
                  if ('opening' === _0x52a815[_0x44769e(0x3cd)] && _0x44769e(0x32e) === _0x415ffd[_0x44769e(0x1bd)] && _0x52a815[_0x44769e(0x18e)](), _0x44769e(0x1b9) === _0x415ffd[_0x44769e(0x1bd)]) return _0x52a815[_0x44769e(0x44c)](), !0x1;

                  _0x52a815['onPacket'](_0x415ffd);
                }), _0x51440f(0x189) !== this[_0x51440f(0x3cd)] && (this['polling'] = !0x1, this[_0x51440f(0x426)](_0x51440f(0x119)), _0x51440f(0x32e) === this[_0x51440f(0x3cd)] ? this[_0x51440f(0x192)]() : _0x1395f8('ignoring\x20poll\x20-\x20transport\x20state\x20\x22%s\x22', this[_0x51440f(0x3cd)]));
              }, _0x1eac3f[_0x3084cc(0x267)][_0x3084cc(0x405)] = function () {
                var _0x4934f0 = _0x3084cc,
                    _0x14cf3c = this;

                function _0x38c0b0() {
                  var _0x1dcaff = a1_0x1adc;
                  _0x1395f8('writing\x20close\x20packet'), _0x14cf3c['write']([{
                    'type': _0x1dcaff(0x1b9)
                  }]);
                }

                _0x4934f0(0x32e) === this[_0x4934f0(0x3cd)] ? (_0x1395f8(_0x4934f0(0x24f)), _0x38c0b0()) : (_0x1395f8('transport\x20not\x20open\x20-\x20deferring\x20close'), this[_0x4934f0(0x466)](_0x4934f0(0x32e), _0x38c0b0));
              }, _0x1eac3f[_0x3084cc(0x267)][_0x3084cc(0x467)] = function (_0x49bc41) {
                var _0x2ca744 = _0x3084cc,
                    _0x4b643b = this;

                this[_0x2ca744(0x494)] = !0x1;

                var _0x3f4f9d = function _0x3f4f9d() {
                  var _0x1104e0 = _0x2ca744;
                  _0x4b643b[_0x1104e0(0x494)] = !0x0, _0x4b643b['emit'](_0x1104e0(0x3fb));
                };

                _0x17867a[_0x2ca744(0x398)](_0x49bc41, this[_0x2ca744(0x1e0)], function (_0x52b30a) {
                  var _0x2b10b4 = _0x2ca744;

                  _0x4b643b[_0x2b10b4(0x422)](_0x52b30a, _0x3f4f9d);
                });
              }, _0x1eac3f[_0x3084cc(0x267)][_0x3084cc(0x3d1)] = function () {
                var _0x2d763e = _0x3084cc,
                    _0x10b8da = this['query'] || {},
                    _0x29db5e = this[_0x2d763e(0x46e)] ? 'https' : _0x2d763e(0x285),
                    _0x54a780 = '';

                return !0x1 !== this[_0x2d763e(0x443)] && (_0x10b8da[this[_0x2d763e(0x390)]] = _0x485e05()), this[_0x2d763e(0x1e0)] || _0x10b8da[_0x2d763e(0x3c7)] || (_0x10b8da['b64'] = 0x1), _0x10b8da = _0x499c99[_0x2d763e(0x2bf)](_0x10b8da), this[_0x2d763e(0x226)] && (_0x2d763e(0x1b7) === _0x29db5e && 0x1bb !== Number(this['port']) || _0x2d763e(0x285) === _0x29db5e && 0x50 !== Number(this['port'])) && (_0x54a780 = ':' + this[_0x2d763e(0x226)]), _0x10b8da[_0x2d763e(0x109)] && (_0x10b8da = '?' + _0x10b8da), _0x29db5e + _0x2d763e(0x34e) + (-0x1 !== this[_0x2d763e(0x21a)][_0x2d763e(0x458)](':') ? '[' + this['hostname'] + ']' : this[_0x2d763e(0x21a)]) + _0x54a780 + this[_0x2d763e(0x1c3)] + _0x10b8da;
              };
            },
            0x115a: function _(_0x1e0d59, _0x6bcff4, _0x193754) {
              var _0x3e7415 = a1_0x1adc,
                  _0x5d7a0e,
                  _0x3974a3,
                  _0x2037e8 = _0x193754(0x1960),
                  _0x3f7dad = _0x193754(0x1167),
                  _0x15268f = _0x193754(0x726),
                  _0x4d5f24 = _0x193754(0xf15),
                  _0x2490db = _0x193754(0x8e9),
                  _0x9458b3 = _0x193754(0x4cb)(_0x3e7415(0x35f));

              if (_0x3e7415(0x121) != typeof WebSocket ? _0x5d7a0e = WebSocket : _0x3e7415(0x121) != typeof self && (_0x5d7a0e = self[_0x3e7415(0x1c9)] || self[_0x3e7415(0x2aa)]), _0x3e7415(0x121) == typeof window) try {
                _0x3974a3 = _0x193754(0x1b6c);
              } catch (_0x391066) {}

              var _0x35df81 = _0x5d7a0e || _0x3974a3;

              function _0x2f1db0(_0x148372) {
                var _0x880826 = _0x3e7415;
                _0x148372 && _0x148372[_0x880826(0x259)] && (this[_0x880826(0x1e0)] = !0x1), this[_0x880826(0x208)] = _0x148372[_0x880826(0x208)], this['usingBrowserWebSocket'] = _0x5d7a0e && !_0x148372[_0x880826(0x28d)], this[_0x880826(0x1bb)] = _0x148372[_0x880826(0x1bb)], this[_0x880826(0x452)] || (_0x35df81 = _0x3974a3), _0x2037e8[_0x880826(0x20b)](this, _0x148372);
              }

              _0x1e0d59[_0x3e7415(0x10f)] = _0x2f1db0, _0x4d5f24(_0x2f1db0, _0x2037e8), _0x2f1db0[_0x3e7415(0x267)][_0x3e7415(0x1fb)] = _0x3e7415(0x254), _0x2f1db0['prototype'][_0x3e7415(0x1e0)] = !0x0, _0x2f1db0['prototype'][_0x3e7415(0x2cf)] = function () {
                var _0x3bc39c = _0x3e7415;

                if (this[_0x3bc39c(0x298)]()) {
                  var _0x4fc117 = this[_0x3bc39c(0x3d1)](),
                      _0xf95dbb = this[_0x3bc39c(0x1bb)],
                      _0x4d42d7 = {};

                  this[_0x3bc39c(0x4af)] || (_0x4d42d7[_0x3bc39c(0x136)] = this[_0x3bc39c(0x136)], _0x4d42d7[_0x3bc39c(0x208)] = this[_0x3bc39c(0x208)], _0x4d42d7['pfx'] = this[_0x3bc39c(0x29d)], _0x4d42d7[_0x3bc39c(0x308)] = this['key'], _0x4d42d7[_0x3bc39c(0x45f)] = this[_0x3bc39c(0x45f)], _0x4d42d7[_0x3bc39c(0x3f2)] = this[_0x3bc39c(0x3f2)], _0x4d42d7['ca'] = this['ca'], _0x4d42d7[_0x3bc39c(0x166)] = this[_0x3bc39c(0x166)], _0x4d42d7[_0x3bc39c(0x2fa)] = this[_0x3bc39c(0x2fa)]), this[_0x3bc39c(0x2e3)] && (_0x4d42d7['headers'] = this[_0x3bc39c(0x2e3)]), this[_0x3bc39c(0x271)] && (_0x4d42d7[_0x3bc39c(0x271)] = this[_0x3bc39c(0x271)]);

                  try {
                    this['ws'] = this[_0x3bc39c(0x452)] && !this['isReactNative'] ? _0xf95dbb ? new _0x35df81(_0x4fc117, _0xf95dbb) : new _0x35df81(_0x4fc117) : new _0x35df81(_0x4fc117, _0xf95dbb, _0x4d42d7);
                  } catch (_0x40082e) {
                    return this[_0x3bc39c(0x426)](_0x3bc39c(0x47c), _0x40082e);
                  }

                  void 0x0 === this['ws'][_0x3bc39c(0x2dc)] && (this['supportsBinary'] = !0x1), this['ws'][_0x3bc39c(0x3da)] && this['ws'][_0x3bc39c(0x3da)]['binary'] ? (this[_0x3bc39c(0x1e0)] = !0x0, this['ws'][_0x3bc39c(0x2dc)] = 'nodebuffer') : this['ws']['binaryType'] = _0x3bc39c(0x3d7), this['addEventListeners']();
                }
              }, _0x2f1db0['prototype'][_0x3e7415(0x293)] = function () {
                var _0x2067d5 = _0x3e7415,
                    _0x50426a = this;

                this['ws'][_0x2067d5(0x3c3)] = function () {
                  var _0x42ce41 = _0x2067d5;

                  _0x50426a[_0x42ce41(0x18e)]();
                }, this['ws']['onclose'] = function () {
                  var _0x3a5c4f = _0x2067d5;

                  _0x50426a[_0x3a5c4f(0x44c)]();
                }, this['ws'][_0x2067d5(0x491)] = function (_0x4f474c) {
                  var _0x53627a = _0x2067d5;

                  _0x50426a[_0x53627a(0x1ef)](_0x4f474c[_0x53627a(0x28e)]);
                }, this['ws'][_0x2067d5(0x474)] = function (_0x483b2e) {
                  var _0x1d6753 = _0x2067d5;

                  _0x50426a[_0x1d6753(0x16a)](_0x1d6753(0x4be), _0x483b2e);
                };
              }, _0x2f1db0[_0x3e7415(0x267)][_0x3e7415(0x467)] = function (_0x217d48) {
                var _0x2f4174 = _0x3e7415,
                    _0x566262 = this;

                this[_0x2f4174(0x494)] = !0x1;

                for (var _0x12a57e = _0x217d48[_0x2f4174(0x109)], _0x4a53be = 0x0, _0x5bf7e1 = _0x12a57e; _0x4a53be < _0x5bf7e1; _0x4a53be++) !function (_0x4ae46e) {
                  var _0x2adbad = _0x2f4174;

                  _0x3f7dad[_0x2adbad(0x25e)](_0x4ae46e, _0x566262[_0x2adbad(0x1e0)], function (_0x2b5dfa) {
                    var _0x5ca25d = _0x2adbad;

                    if (!_0x566262[_0x5ca25d(0x452)]) {
                      var _0x498622 = {};
                      _0x4ae46e['options'] && (_0x498622[_0x5ca25d(0x3d2)] = _0x4ae46e[_0x5ca25d(0x342)]['compress']), _0x566262[_0x5ca25d(0x208)] && (_0x5ca25d(0x2df) == typeof _0x2b5dfa ? Buffer[_0x5ca25d(0x3c9)](_0x2b5dfa) : _0x2b5dfa[_0x5ca25d(0x109)]) < _0x566262['perMessageDeflate'][_0x5ca25d(0x3bd)] && (_0x498622[_0x5ca25d(0x3d2)] = !0x1);
                    }

                    try {
                      _0x566262[_0x5ca25d(0x452)] ? _0x566262['ws']['send'](_0x2b5dfa) : _0x566262['ws']['send'](_0x2b5dfa, _0x498622);
                    } catch (_0x590801) {
                      _0x9458b3(_0x5ca25d(0x366));
                    }

                    --_0x12a57e || (_0x566262[_0x5ca25d(0x426)]('flush'), setTimeout(function () {
                      var _0x21abcd = _0x5ca25d;
                      _0x566262[_0x21abcd(0x494)] = !0x0, _0x566262['emit'](_0x21abcd(0x3fb));
                    }, 0x0));
                  });
                }(_0x217d48[_0x4a53be]);
              }, _0x2f1db0[_0x3e7415(0x267)][_0x3e7415(0x44c)] = function () {
                var _0x3490d = _0x3e7415;

                _0x2037e8[_0x3490d(0x267)][_0x3490d(0x44c)][_0x3490d(0x20b)](this);
              }, _0x2f1db0[_0x3e7415(0x267)][_0x3e7415(0x405)] = function () {
                void 0x0 !== this['ws'] && this['ws']['close']();
              }, _0x2f1db0[_0x3e7415(0x267)][_0x3e7415(0x3d1)] = function () {
                var _0x52e577 = _0x3e7415,
                    _0x37116b = this['query'] || {},
                    _0x15bff5 = this[_0x52e577(0x46e)] ? _0x52e577(0x4a6) : 'ws',
                    _0x4edf08 = '';

                return this['port'] && (_0x52e577(0x4a6) === _0x15bff5 && 0x1bb !== Number(this['port']) || 'ws' === _0x15bff5 && 0x50 !== Number(this[_0x52e577(0x226)])) && (_0x4edf08 = ':' + this[_0x52e577(0x226)]), this[_0x52e577(0x443)] && (_0x37116b[this['timestampParam']] = _0x2490db()), this[_0x52e577(0x1e0)] || (_0x37116b[_0x52e577(0x2da)] = 0x1), (_0x37116b = _0x15268f[_0x52e577(0x2bf)](_0x37116b))[_0x52e577(0x109)] && (_0x37116b = '?' + _0x37116b), _0x15bff5 + '://' + (-0x1 !== this['hostname'][_0x52e577(0x458)](':') ? '[' + this['hostname'] + ']' : this[_0x52e577(0x21a)]) + _0x4edf08 + this[_0x52e577(0x1c3)] + _0x37116b;
              }, _0x2f1db0['prototype']['check'] = function () {
                var _0x1fce55 = _0x3e7415;
                return !(!_0x35df81 || _0x1fce55(0x4b8) in _0x35df81 && this[_0x1fce55(0x1fb)] === _0x2f1db0[_0x1fce55(0x267)][_0x1fce55(0x1fb)]);
              };
            },
            0xad9: function _(_0x529e93, _0x4210c4, _0x1d407a) {
              var _0x211924 = a1_0x1adc,
                  _0x31961f = _0x1d407a(0x1f7a),
                  _0x33402e = _0x1d407a(0xddd);

              _0x529e93[_0x211924(0x10f)] = function (_0x71671b) {
                var _0x1fe22e = _0x211924,
                    _0x9ba2f3 = _0x71671b['xdomain'],
                    _0x2f31d3 = _0x71671b[_0x1fe22e(0x3e0)],
                    _0x2ec9c2 = _0x71671b[_0x1fe22e(0x110)];

                try {
                  if (_0x1fe22e(0x121) != typeof XMLHttpRequest && (!_0x9ba2f3 || _0x31961f)) return new XMLHttpRequest();
                } catch (_0xddd31d) {}

                try {
                  if (_0x1fe22e(0x121) != typeof XDomainRequest && !_0x2f31d3 && _0x2ec9c2) return new XDomainRequest();
                } catch (_0x8c7e95) {}

                if (!_0x9ba2f3) try {
                  return new _0x33402e[['Active']['concat'](_0x1fe22e(0x425))[_0x1fe22e(0x49b)]('X')](_0x1fe22e(0x146));
                } catch (_0x39f5ed) {}
              };
            },
            0x1167: function _(_0x416380, _0x2a5e01, _0x14a016) {
              var _0x3bf96a = a1_0x1adc,
                  _0x4e2aeb,
                  _0x4c0439 = _0x14a016(0x1f36),
                  _0x29f0b9 = _0x14a016(0xd8a),
                  _0x4aac30 = _0x14a016(0x25f6),
                  _0x17882d = _0x14a016(0x1afa),
                  _0x2b0f6d = _0x14a016(0xd56);

              _0x3bf96a(0x121) != typeof ArrayBuffer && (_0x4e2aeb = _0x14a016(0xe78));

              var _0x53678d = 'undefined' != typeof navigator && /Android/i[_0x3bf96a(0x4cc)](navigator[_0x3bf96a(0x2a9)]),
                  _0x3ed906 = _0x3bf96a(0x121) != typeof navigator && /PhantomJS/i[_0x3bf96a(0x4cc)](navigator['userAgent']),
                  _0x4e6ff5 = _0x53678d || _0x3ed906;

              _0x2a5e01[_0x3bf96a(0x280)] = 0x3;

              var _0x44fc07 = _0x2a5e01[_0x3bf96a(0x2e2)] = {
                'open': 0x0,
                'close': 0x1,
                'ping': 0x2,
                'pong': 0x3,
                'message': 0x4,
                'upgrade': 0x5,
                'noop': 0x6
              },
                  _0x31a5f2 = _0x4c0439(_0x44fc07),
                  _0x54f06b = {
                'type': 'error',
                'data': _0x3bf96a(0x2c1)
              },
                  _0x29cb2e = _0x14a016(0x15ac);

              function _0x50378d(_0x8f8ce8, _0x35d3b0, _0x5f1ebd) {
                var _0x1d6ad2 = _0x3bf96a;

                for (var _0x236adf = new Array(_0x8f8ce8[_0x1d6ad2(0x109)]), _0x235df6 = _0x17882d(_0x8f8ce8[_0x1d6ad2(0x109)], _0x5f1ebd), _0x444286 = function _0x444286(_0x99c47e, _0x57596d, _0x6968ef) {
                  _0x35d3b0(_0x57596d, function (_0x34dbe7, _0x51b7d4) {
                    _0x236adf[_0x99c47e] = _0x51b7d4, _0x6968ef(_0x34dbe7, _0x236adf);
                  });
                }, _0x125292 = 0x0; _0x125292 < _0x8f8ce8[_0x1d6ad2(0x109)]; _0x125292++) _0x444286(_0x125292, _0x8f8ce8[_0x125292], _0x235df6);
              }

              _0x2a5e01[_0x3bf96a(0x25e)] = function (_0x5c166d, _0x21fe3e, _0x324f06, _0x5dafec) {
                var _0x376da3 = _0x3bf96a;
                _0x376da3(0x23a) == typeof _0x21fe3e && (_0x5dafec = _0x21fe3e, _0x21fe3e = !0x1), _0x376da3(0x23a) == typeof _0x324f06 && (_0x5dafec = _0x324f06, _0x324f06 = null);

                var _0x4ec7ba = void 0x0 === _0x5c166d[_0x376da3(0x28e)] ? void 0x0 : _0x5c166d['data'][_0x376da3(0x477)] || _0x5c166d[_0x376da3(0x28e)];

                if (_0x376da3(0x121) != typeof ArrayBuffer && _0x4ec7ba instanceof ArrayBuffer) return function (_0x284ba4, _0x4e781f, _0x10035a) {
                  var _0x6dcaa3 = _0x376da3;
                  if (!_0x4e781f) return _0x2a5e01[_0x6dcaa3(0x14a)](_0x284ba4, _0x10035a);

                  var _0x56622f = _0x284ba4[_0x6dcaa3(0x28e)],
                      _0x36a359 = new Uint8Array(_0x56622f),
                      _0x32ce5d = new Uint8Array(0x1 + _0x56622f[_0x6dcaa3(0x3c9)]);

                  _0x32ce5d[0x0] = _0x44fc07[_0x284ba4['type']];

                  for (var _0x321752 = 0x0; _0x321752 < _0x36a359[_0x6dcaa3(0x109)]; _0x321752++) _0x32ce5d[_0x321752 + 0x1] = _0x36a359[_0x321752];

                  return _0x10035a(_0x32ce5d[_0x6dcaa3(0x477)]);
                }(_0x5c166d, _0x21fe3e, _0x5dafec);
                if (void 0x0 !== _0x29cb2e && _0x4ec7ba instanceof _0x29cb2e) return function (_0x14db36, _0x1933af, _0x503160) {
                  var _0xcbc7b = _0x376da3;
                  if (!_0x1933af) return _0x2a5e01[_0xcbc7b(0x14a)](_0x14db36, _0x503160);
                  if (_0x4e6ff5) return function (_0x5ada3d, _0xf82c18, _0x5c62f7) {
                    var _0x55a055 = _0xcbc7b;
                    if (!_0xf82c18) return _0x2a5e01[_0x55a055(0x14a)](_0x5ada3d, _0x5c62f7);

                    var _0x48ec42 = new FileReader();

                    return _0x48ec42['onload'] = function () {
                      var _0x48e95b = _0x55a055;

                      _0x2a5e01[_0x48e95b(0x25e)]({
                        'type': _0x5ada3d[_0x48e95b(0x1bd)],
                        'data': _0x48ec42[_0x48e95b(0x249)]
                      }, _0xf82c18, !0x0, _0x5c62f7);
                    }, _0x48ec42[_0x55a055(0x31e)](_0x5ada3d[_0x55a055(0x28e)]);
                  }(_0x14db36, _0x1933af, _0x503160);

                  var _0x338908 = new Uint8Array(0x1);

                  return _0x338908[0x0] = _0x44fc07[_0x14db36[_0xcbc7b(0x1bd)]], _0x503160(new _0x29cb2e([_0x338908[_0xcbc7b(0x477)], _0x14db36['data']]));
                }(_0x5c166d, _0x21fe3e, _0x5dafec);
                if (_0x4ec7ba && _0x4ec7ba[_0x376da3(0x49c)]) return function (_0x233d42, _0x370300) {
                  var _0x3d5b2d = _0x376da3;
                  return _0x370300('b' + _0x2a5e01[_0x3d5b2d(0x2e2)][_0x233d42[_0x3d5b2d(0x1bd)]] + _0x233d42[_0x3d5b2d(0x28e)]['data']);
                }(_0x5c166d, _0x5dafec);
                var _0x33ef9f = _0x44fc07[_0x5c166d['type']];
                return void 0x0 !== _0x5c166d[_0x376da3(0x28e)] && (_0x33ef9f += _0x324f06 ? _0x2b0f6d['encode'](String(_0x5c166d[_0x376da3(0x28e)]), {
                  'strict': !0x1
                }) : String(_0x5c166d[_0x376da3(0x28e)])), _0x5dafec('' + _0x33ef9f);
              }, _0x2a5e01[_0x3bf96a(0x14a)] = function (_0x5a6424, _0x3fab0b) {
                var _0x1e396a = _0x3bf96a,
                    _0x24ee7b,
                    _0x4fe5a5 = 'b' + _0x2a5e01[_0x1e396a(0x2e2)][_0x5a6424[_0x1e396a(0x1bd)]];

                if (void 0x0 !== _0x29cb2e && _0x5a6424['data'] instanceof _0x29cb2e) {
                  var _0x10fd78 = new FileReader();

                  return _0x10fd78[_0x1e396a(0x2ff)] = function () {
                    var _0x208536 = _0x1e396a,
                        _0x45781f = _0x10fd78[_0x208536(0x249)]['split'](',')[0x1];

                    _0x3fab0b(_0x4fe5a5 + _0x45781f);
                  }, _0x10fd78[_0x1e396a(0x41e)](_0x5a6424['data']);
                }

                try {
                  _0x24ee7b = String[_0x1e396a(0x3a8)][_0x1e396a(0x148)](null, new Uint8Array(_0x5a6424[_0x1e396a(0x28e)]));
                } catch (_0x2c3222) {
                  for (var _0x1d3e5b = new Uint8Array(_0x5a6424[_0x1e396a(0x28e)]), _0x2beeee = new Array(_0x1d3e5b[_0x1e396a(0x109)]), _0x4e8b1d = 0x0; _0x4e8b1d < _0x1d3e5b[_0x1e396a(0x109)]; _0x4e8b1d++) _0x2beeee[_0x4e8b1d] = _0x1d3e5b[_0x4e8b1d];

                  _0x24ee7b = String[_0x1e396a(0x3a8)][_0x1e396a(0x148)](null, _0x2beeee);
                }

                return _0x4fe5a5 += btoa(_0x24ee7b), _0x3fab0b(_0x4fe5a5);
              }, _0x2a5e01[_0x3bf96a(0x15e)] = function (_0x2479c6, _0x5669dc, _0x4aa4c8) {
                var _0x22c3dd = _0x3bf96a;
                if (void 0x0 === _0x2479c6) return _0x54f06b;

                if (_0x22c3dd(0x2df) == typeof _0x2479c6) {
                  if ('b' === _0x2479c6[_0x22c3dd(0x382)](0x0)) return _0x2a5e01[_0x22c3dd(0x262)](_0x2479c6[_0x22c3dd(0x1ba)](0x1), _0x5669dc);
                  if (_0x4aa4c8 && !0x1 === (_0x2479c6 = function (_0x36ae10) {
                    var _0x221d47 = _0x22c3dd;

                    try {
                      _0x36ae10 = _0x2b0f6d[_0x221d47(0x2a8)](_0x36ae10, {
                        'strict': !0x1
                      });
                    } catch (_0x37c2fe) {
                      return !0x1;
                    }

                    return _0x36ae10;
                  }(_0x2479c6))) return _0x54f06b;

                  var _0x3ed72d = _0x2479c6[_0x22c3dd(0x382)](0x0);

                  return Number(_0x3ed72d) == _0x3ed72d && _0x31a5f2[_0x3ed72d] ? _0x2479c6[_0x22c3dd(0x109)] > 0x1 ? {
                    'type': _0x31a5f2[_0x3ed72d],
                    'data': _0x2479c6[_0x22c3dd(0x495)](0x1)
                  } : {
                    'type': _0x31a5f2[_0x3ed72d]
                  } : _0x54f06b;
                }

                _0x3ed72d = new Uint8Array(_0x2479c6)[0x0];

                var _0x31a45b = _0x4aac30(_0x2479c6, 0x1);

                return _0x29cb2e && _0x22c3dd(0x43a) === _0x5669dc && (_0x31a45b = new _0x29cb2e([_0x31a45b])), {
                  'type': _0x31a5f2[_0x3ed72d],
                  'data': _0x31a45b
                };
              }, _0x2a5e01['decodeBase64Packet'] = function (_0x110a57, _0x407d7f) {
                var _0x5209e9 = _0x3bf96a,
                    _0x13c165 = _0x31a5f2[_0x110a57['charAt'](0x0)];

                if (!_0x4e2aeb) return {
                  'type': _0x13c165,
                  'data': {
                    'base64': !0x0,
                    'data': _0x110a57[_0x5209e9(0x1ba)](0x1)
                  }
                };

                var _0x31ff46 = _0x4e2aeb[_0x5209e9(0x2a8)](_0x110a57[_0x5209e9(0x1ba)](0x1));

                return _0x5209e9(0x43a) === _0x407d7f && _0x29cb2e && (_0x31ff46 = new _0x29cb2e([_0x31ff46])), {
                  'type': _0x13c165,
                  'data': _0x31ff46
                };
              }, _0x2a5e01[_0x3bf96a(0x398)] = function (_0x5952fb, _0x3ae102, _0x425c5f) {
                var _0x30b57e = _0x3bf96a;
                _0x30b57e(0x23a) == typeof _0x3ae102 && (_0x425c5f = _0x3ae102, _0x3ae102 = null);

                var _0x468d76 = _0x29f0b9(_0x5952fb);

                return _0x3ae102 && _0x468d76 ? _0x29cb2e && !_0x4e6ff5 ? _0x2a5e01[_0x30b57e(0x2f5)](_0x5952fb, _0x425c5f) : _0x2a5e01['encodePayloadAsArrayBuffer'](_0x5952fb, _0x425c5f) : _0x5952fb[_0x30b57e(0x109)] ? void _0x50378d(_0x5952fb, function (_0x42423f, _0x5b768f) {
                  var _0x2a4b37 = _0x30b57e;

                  _0x2a5e01[_0x2a4b37(0x25e)](_0x42423f, !!_0x468d76 && _0x3ae102, !0x1, function (_0x8f1e8b) {
                    _0x5b768f(null, function (_0x2c135e) {
                      return _0x2c135e['length'] + ':' + _0x2c135e;
                    }(_0x8f1e8b));
                  });
                }, function (_0x21fc6f, _0x47d30b) {
                  return _0x425c5f(_0x47d30b['join'](''));
                }) : _0x425c5f('0:');
              }, _0x2a5e01[_0x3bf96a(0x41d)] = function (_0x3e3737, _0x4bd63e, _0x50aa0b) {
                var _0x93a3b5 = _0x3bf96a;
                if (_0x93a3b5(0x2df) != typeof _0x3e3737) return _0x2a5e01[_0x93a3b5(0x179)](_0x3e3737, _0x4bd63e, _0x50aa0b);

                var _0x22da1b;

                if (_0x93a3b5(0x23a) == typeof _0x4bd63e && (_0x50aa0b = _0x4bd63e, _0x4bd63e = null), '' === _0x3e3737) return _0x50aa0b(_0x54f06b, 0x0, 0x1);

                for (var _0x42329d, _0x1b4a07, _0xadb493 = '', _0x398a69 = 0x0, _0xe807b8 = _0x3e3737[_0x93a3b5(0x109)]; _0x398a69 < _0xe807b8; _0x398a69++) {
                  var _0x8909d0 = _0x3e3737[_0x93a3b5(0x382)](_0x398a69);

                  if (':' === _0x8909d0) {
                    if ('' === _0xadb493 || _0xadb493 != (_0x42329d = Number(_0xadb493))) return _0x50aa0b(_0x54f06b, 0x0, 0x1);
                    if (_0xadb493 != (_0x1b4a07 = _0x3e3737[_0x93a3b5(0x1ba)](_0x398a69 + 0x1, _0x42329d))[_0x93a3b5(0x109)]) return _0x50aa0b(_0x54f06b, 0x0, 0x1);

                    if (_0x1b4a07[_0x93a3b5(0x109)]) {
                      if (_0x22da1b = _0x2a5e01[_0x93a3b5(0x15e)](_0x1b4a07, _0x4bd63e, !0x1), _0x54f06b[_0x93a3b5(0x1bd)] === _0x22da1b['type'] && _0x54f06b[_0x93a3b5(0x28e)] === _0x22da1b[_0x93a3b5(0x28e)]) return _0x50aa0b(_0x54f06b, 0x0, 0x1);
                      if (!0x1 === _0x50aa0b(_0x22da1b, _0x398a69 + _0x42329d, _0xe807b8)) return;
                    }

                    _0x398a69 += _0x42329d, _0xadb493 = '';
                  } else _0xadb493 += _0x8909d0;
                }

                return '' !== _0xadb493 ? _0x50aa0b(_0x54f06b, 0x0, 0x1) : void 0x0;
              }, _0x2a5e01[_0x3bf96a(0x378)] = function (_0x21ca31, _0x3701a0) {
                var _0x918794 = _0x3bf96a;
                if (!_0x21ca31[_0x918794(0x109)]) return _0x3701a0(new ArrayBuffer(0x0));

                _0x50378d(_0x21ca31, function (_0x134b6b, _0x3b64ce) {
                  _0x2a5e01['encodePacket'](_0x134b6b, !0x0, !0x0, function (_0xffde18) {
                    return _0x3b64ce(null, _0xffde18);
                  });
                }, function (_0x9d7c4, _0x5dd6b3) {
                  var _0x2c89fa = _0x918794,
                      _0x506da1 = _0x5dd6b3[_0x2c89fa(0x1cc)](function (_0x53542b, _0x5cf1a0) {
                    var _0x29bbaa = _0x2c89fa,
                        _0x184d53;

                    return _0x53542b + (_0x184d53 = _0x29bbaa(0x2df) == typeof _0x5cf1a0 ? _0x5cf1a0[_0x29bbaa(0x109)] : _0x5cf1a0[_0x29bbaa(0x3c9)])[_0x29bbaa(0x1c8)]()[_0x29bbaa(0x109)] + _0x184d53 + 0x2;
                  }, 0x0),
                      _0x4f5064 = new Uint8Array(_0x506da1),
                      _0x5d5609 = 0x0;

                  return _0x5dd6b3[_0x2c89fa(0x37b)](function (_0x53b29e) {
                    var _0xc49bdf = _0x2c89fa,
                        _0x20446d = _0xc49bdf(0x2df) == typeof _0x53b29e,
                        _0x30f6bb = _0x53b29e;

                    if (_0x20446d) {
                      for (var _0x408dab = new Uint8Array(_0x53b29e[_0xc49bdf(0x109)]), _0x373ebd = 0x0; _0x373ebd < _0x53b29e[_0xc49bdf(0x109)]; _0x373ebd++) _0x408dab[_0x373ebd] = _0x53b29e[_0xc49bdf(0x3ca)](_0x373ebd);

                      _0x30f6bb = _0x408dab[_0xc49bdf(0x477)];
                    }

                    _0x4f5064[_0x5d5609++] = _0x20446d ? 0x0 : 0x1;

                    var _0x498acd = _0x30f6bb[_0xc49bdf(0x3c9)][_0xc49bdf(0x1c8)]();

                    for (_0x373ebd = 0x0; _0x373ebd < _0x498acd[_0xc49bdf(0x109)]; _0x373ebd++) _0x4f5064[_0x5d5609++] = parseInt(_0x498acd[_0x373ebd]);

                    for (_0x4f5064[_0x5d5609++] = 0xff, _0x408dab = new Uint8Array(_0x30f6bb), _0x373ebd = 0x0; _0x373ebd < _0x408dab[_0xc49bdf(0x109)]; _0x373ebd++) _0x4f5064[_0x5d5609++] = _0x408dab[_0x373ebd];
                  }), _0x3701a0(_0x4f5064['buffer']);
                });
              }, _0x2a5e01['encodePayloadAsBlob'] = function (_0x5c6123, _0x2fd7dd) {
                _0x50378d(_0x5c6123, function (_0x1e3def, _0x15993b) {
                  var _0x2c2530 = a1_0x1adc;

                  _0x2a5e01[_0x2c2530(0x25e)](_0x1e3def, !0x0, !0x0, function (_0x46e102) {
                    var _0x25f43e = _0x2c2530,
                        _0x291f81 = new Uint8Array(0x1);

                    if (_0x291f81[0x0] = 0x1, _0x25f43e(0x2df) == typeof _0x46e102) {
                      for (var _0x1a925b = new Uint8Array(_0x46e102[_0x25f43e(0x109)]), _0x11855f = 0x0; _0x11855f < _0x46e102[_0x25f43e(0x109)]; _0x11855f++) _0x1a925b[_0x11855f] = _0x46e102[_0x25f43e(0x3ca)](_0x11855f);

                      _0x46e102 = _0x1a925b[_0x25f43e(0x477)], _0x291f81[0x0] = 0x0;
                    }

                    var _0x575a6a = (_0x46e102 instanceof ArrayBuffer ? _0x46e102[_0x25f43e(0x3c9)] : _0x46e102[_0x25f43e(0x33a)])['toString'](),
                        _0x2423c1 = new Uint8Array(_0x575a6a['length'] + 0x1);

                    for (_0x11855f = 0x0; _0x11855f < _0x575a6a[_0x25f43e(0x109)]; _0x11855f++) _0x2423c1[_0x11855f] = parseInt(_0x575a6a[_0x11855f]);

                    if (_0x2423c1[_0x575a6a[_0x25f43e(0x109)]] = 0xff, _0x29cb2e) {
                      var _0x5a5203 = new _0x29cb2e([_0x291f81[_0x25f43e(0x477)], _0x2423c1[_0x25f43e(0x477)], _0x46e102]);

                      _0x15993b(null, _0x5a5203);
                    }
                  });
                }, function (_0x1d1e9f, _0x3841f5) {
                  return _0x2fd7dd(new _0x29cb2e(_0x3841f5));
                });
              }, _0x2a5e01[_0x3bf96a(0x179)] = function (_0x24e3d9, _0x5be655, _0x31e05c) {
                var _0x27fbc5 = _0x3bf96a;
                _0x27fbc5(0x23a) == typeof _0x5be655 && (_0x31e05c = _0x5be655, _0x5be655 = null);

                for (var _0x26e16b = _0x24e3d9, _0xda1cf = []; _0x26e16b[_0x27fbc5(0x3c9)] > 0x0;) {
                  for (var _0x21fb2e = new Uint8Array(_0x26e16b), _0x366722 = 0x0 === _0x21fb2e[0x0], _0x33a261 = '', _0x545090 = 0x1; 0xff !== _0x21fb2e[_0x545090]; _0x545090++) {
                    if (_0x33a261[_0x27fbc5(0x109)] > 0x136) return _0x31e05c(_0x54f06b, 0x0, 0x1);
                    _0x33a261 += _0x21fb2e[_0x545090];
                  }

                  _0x26e16b = _0x4aac30(_0x26e16b, 0x2 + _0x33a261[_0x27fbc5(0x109)]), _0x33a261 = parseInt(_0x33a261);

                  var _0x458faa = _0x4aac30(_0x26e16b, 0x0, _0x33a261);

                  if (_0x366722) try {
                    _0x458faa = String['fromCharCode']['apply'](null, new Uint8Array(_0x458faa));
                  } catch (_0x175cf1) {
                    var _0x832243 = new Uint8Array(_0x458faa);

                    for (_0x458faa = '', _0x545090 = 0x0; _0x545090 < _0x832243[_0x27fbc5(0x109)]; _0x545090++) _0x458faa += String[_0x27fbc5(0x3a8)](_0x832243[_0x545090]);
                  }
                  _0xda1cf[_0x27fbc5(0x4c0)](_0x458faa), _0x26e16b = _0x4aac30(_0x26e16b, _0x33a261);
                }

                var _0x2dbae6 = _0xda1cf[_0x27fbc5(0x109)];

                _0xda1cf[_0x27fbc5(0x37b)](function (_0xfeda9b, _0x274524) {
                  var _0x2e9ee9 = _0x27fbc5;

                  _0x31e05c(_0x2a5e01[_0x2e9ee9(0x15e)](_0xfeda9b, _0x5be655, !0x0), _0x274524, _0x2dbae6);
                });
              };
            },
            0x1f36: function _(_0x482080) {
              var _0x3d075a = a1_0x1adc;

              _0x482080[_0x3d075a(0x10f)] = Object['keys'] || function (_0x5dfd58) {
                var _0x155965 = _0x3d075a,
                    _0x50d27e = [],
                    _0x322e4e = Object[_0x155965(0x267)]['hasOwnProperty'];

                for (var _0x5da3dc in _0x5dfd58) _0x322e4e[_0x155965(0x20b)](_0x5dfd58, _0x5da3dc) && _0x50d27e[_0x155965(0x4c0)](_0x5da3dc);

                return _0x50d27e;
              };
            },
            0xd56: function _(_0x14b478) {
              var _0x3d633d = a1_0x1adc,
                  _0x551c8b,
                  _0x13dd16,
                  _0x138a76,
                  _0x4a1a5d = String[_0x3d633d(0x3a8)];

              function _0x5cb6c4(_0x3c3721) {
                var _0x509189 = _0x3d633d;

                for (var _0x2ba599, _0x220ee1, _0x11bbcd = [], _0x3a88c2 = 0x0, _0x59e60a = _0x3c3721['length']; _0x3a88c2 < _0x59e60a;) (_0x2ba599 = _0x3c3721['charCodeAt'](_0x3a88c2++)) >= 0xd800 && _0x2ba599 <= 0xdbff && _0x3a88c2 < _0x59e60a ? 0xdc00 == (0xfc00 & (_0x220ee1 = _0x3c3721[_0x509189(0x3ca)](_0x3a88c2++))) ? _0x11bbcd[_0x509189(0x4c0)](((0x3ff & _0x2ba599) << 0xa) + (0x3ff & _0x220ee1) + 0x10000) : (_0x11bbcd[_0x509189(0x4c0)](_0x2ba599), _0x3a88c2--) : _0x11bbcd[_0x509189(0x4c0)](_0x2ba599);

                return _0x11bbcd;
              }

              function _0x4a47a7(_0x57fe25, _0x3b9eac) {
                var _0x4bbb00 = _0x3d633d;

                if (_0x57fe25 >= 0xd800 && _0x57fe25 <= 0xdfff) {
                  if (_0x3b9eac) throw Error(_0x4bbb00(0x49e) + _0x57fe25[_0x4bbb00(0x1c8)](0x10)[_0x4bbb00(0x440)]() + '\x20is\x20not\x20a\x20scalar\x20value');
                  return !0x1;
                }

                return !0x0;
              }

              function _0x27b21f(_0x29df7a, _0x39e361) {
                return _0x4a1a5d(_0x29df7a >> _0x39e361 & 0x3f | 0x80);
              }

              function _0x36148d(_0x35fb12, _0x252bba) {
                if (0x0 == (0xffffff80 & _0x35fb12)) return _0x4a1a5d(_0x35fb12);
                var _0x38bc01 = '';
                return 0x0 == (0xfffff800 & _0x35fb12) ? _0x38bc01 = _0x4a1a5d(_0x35fb12 >> 0x6 & 0x1f | 0xc0) : 0x0 == (0xffff0000 & _0x35fb12) ? (_0x4a47a7(_0x35fb12, _0x252bba) || (_0x35fb12 = 0xfffd), _0x38bc01 = _0x4a1a5d(_0x35fb12 >> 0xc & 0xf | 0xe0), _0x38bc01 += _0x27b21f(_0x35fb12, 0x6)) : 0x0 == (0xffe00000 & _0x35fb12) && (_0x38bc01 = _0x4a1a5d(_0x35fb12 >> 0x12 & 0x7 | 0xf0), _0x38bc01 += _0x27b21f(_0x35fb12, 0xc), _0x38bc01 += _0x27b21f(_0x35fb12, 0x6)), _0x38bc01 + _0x4a1a5d(0x3f & _0x35fb12 | 0x80);
              }

              function _0x354104() {
                var _0x4f156b = _0x3d633d;
                if (_0x138a76 >= _0x13dd16) throw Error(_0x4f156b(0x116));

                var _0x2f31e1 = 0xff & _0x551c8b[_0x138a76];

                if (_0x138a76++, 0x80 == (0xc0 & _0x2f31e1)) return 0x3f & _0x2f31e1;
                throw Error(_0x4f156b(0x44f));
              }

              function _0x58075a(_0x587587) {
                var _0x5c4088 = _0x3d633d,
                    _0x4028ce,
                    _0x32171b;

                if (_0x138a76 > _0x13dd16) throw Error(_0x5c4088(0x116));
                if (_0x138a76 == _0x13dd16) return !0x1;
                if (_0x4028ce = 0xff & _0x551c8b[_0x138a76], _0x138a76++, 0x0 == (0x80 & _0x4028ce)) return _0x4028ce;

                if (0xc0 == (0xe0 & _0x4028ce)) {
                  if ((_0x32171b = (0x1f & _0x4028ce) << 0x6 | _0x354104()) >= 0x80) return _0x32171b;
                  throw Error(_0x5c4088(0x44f));
                }

                if (0xe0 == (0xf0 & _0x4028ce)) {
                  if ((_0x32171b = (0xf & _0x4028ce) << 0xc | _0x354104() << 0x6 | _0x354104()) >= 0x800) return _0x4a47a7(_0x32171b, _0x587587) ? _0x32171b : 0xfffd;
                  throw Error(_0x5c4088(0x44f));
                }

                if (0xf0 == (0xf8 & _0x4028ce) && (_0x32171b = (0x7 & _0x4028ce) << 0x12 | _0x354104() << 0xc | _0x354104() << 0x6 | _0x354104()) >= 0x10000 && _0x32171b <= 0x10ffff) return _0x32171b;
                throw Error(_0x5c4088(0x1a7));
              }

              _0x14b478['exports'] = {
                'version': _0x3d633d(0x331),
                'encode': function encode(_0x71df3b, _0x5b1c6d) {
                  for (var _0x343c54 = !0x1 !== (_0x5b1c6d = _0x5b1c6d || {})['strict'], _0x13e44a = _0x5cb6c4(_0x71df3b), _0x247cf2 = _0x13e44a['length'], _0x2690f0 = -0x1, _0x46c0ef = ''; ++_0x2690f0 < _0x247cf2;) _0x46c0ef += _0x36148d(_0x13e44a[_0x2690f0], _0x343c54);

                  return _0x46c0ef;
                },
                'decode': function decode(_0x22708f, _0x28ad90) {
                  var _0x5c6b05 = _0x3d633d,
                      _0x326d6d = !0x1 !== (_0x28ad90 = _0x28ad90 || {})[_0x5c6b05(0x19a)];

                  _0x551c8b = _0x5cb6c4(_0x22708f), _0x13dd16 = _0x551c8b[_0x5c6b05(0x109)], _0x138a76 = 0x0;

                  for (var _0x4ba8a2, _0x167c14 = []; !0x1 !== (_0x4ba8a2 = _0x58075a(_0x326d6d));) _0x167c14[_0x5c6b05(0x4c0)](_0x4ba8a2);

                  return function (_0x1860ea) {
                    var _0x12b352 = _0x5c6b05;

                    for (var _0x2dc9e9, _0x3645a3 = _0x1860ea[_0x12b352(0x109)], _0x1d2298 = -0x1, _0x437e1b = ''; ++_0x1d2298 < _0x3645a3;) (_0x2dc9e9 = _0x1860ea[_0x1d2298]) > 0xffff && (_0x437e1b += _0x4a1a5d((_0x2dc9e9 -= 0x10000) >>> 0xa & 0x3ff | 0xd800), _0x2dc9e9 = 0xdc00 | 0x3ff & _0x2dc9e9), _0x437e1b += _0x4a1a5d(_0x2dc9e9);

                    return _0x437e1b;
                  }(_0x167c14);
                }
              };
            },
            0x1c13: function _(_0x1db7f9) {
              var _0x35c1b0 = a1_0x1adc;

              var _0x58bbed,
                  _0x2118f1 = _0x35c1b0(0x26e) == typeof Reflect ? Reflect : null,
                  _0x43c4c7 = _0x2118f1 && _0x35c1b0(0x23a) == typeof _0x2118f1[_0x35c1b0(0x148)] ? _0x2118f1[_0x35c1b0(0x148)] : function (_0x1fe253, _0x2f03a2, _0x32b40e) {
                var _0x2b9fc6 = _0x35c1b0;
                return Function['prototype'][_0x2b9fc6(0x148)][_0x2b9fc6(0x20b)](_0x1fe253, _0x2f03a2, _0x32b40e);
              };

              _0x58bbed = _0x2118f1 && 'function' == typeof _0x2118f1[_0x35c1b0(0x23f)] ? _0x2118f1[_0x35c1b0(0x23f)] : Object[_0x35c1b0(0x10c)] ? function (_0x2fae0f) {
                var _0x1b089e = _0x35c1b0;
                return Object[_0x1b089e(0x34d)](_0x2fae0f)[_0x1b089e(0x46f)](Object['getOwnPropertySymbols'](_0x2fae0f));
              } : function (_0x3dce24) {
                var _0x468b81 = _0x35c1b0;
                return Object[_0x468b81(0x34d)](_0x3dce24);
              };

              var _0x1fb83f = Number[_0x35c1b0(0x3a6)] || function (_0x33ca17) {
                return _0x33ca17 != _0x33ca17;
              };

              function _0x580373() {
                _0x580373['init']['call'](this);
              }

              _0x1db7f9[_0x35c1b0(0x10f)] = _0x580373, _0x1db7f9[_0x35c1b0(0x10f)][_0x35c1b0(0x466)] = function (_0x94962, _0x1e9eba) {
                return new Promise(function (_0x1cb381, _0xcdcbc) {
                  function _0x16a29d(_0xb60cfa) {
                    var _0xb33662 = a1_0x1adc;
                    _0x94962[_0xb33662(0x126)](_0x1e9eba, _0xe680a2), _0xcdcbc(_0xb60cfa);
                  }

                  function _0xe680a2() {
                    var _0xd67595 = a1_0x1adc;
                    _0xd67595(0x23a) == typeof _0x94962['removeListener'] && _0x94962['removeListener']('error', _0x16a29d), _0x1cb381([][_0xd67595(0x167)][_0xd67595(0x20b)](arguments));
                  }

                  _0x195cda(_0x94962, _0x1e9eba, _0xe680a2, {
                    'once': !0x0
                  }), 'error' !== _0x1e9eba && function (_0x4f83f7, _0x4e1b17, _0x46c5f6) {
                    var _0x59228d = a1_0x1adc;
                    _0x59228d(0x23a) == typeof _0x4f83f7['on'] && _0x195cda(_0x4f83f7, 'error', _0x4e1b17, {
                      'once': !0x0
                    });
                  }(_0x94962, _0x16a29d);
                });
              }, _0x580373[_0x35c1b0(0x492)] = _0x580373, _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x392)] = void 0x0, _0x580373[_0x35c1b0(0x267)]['_eventsCount'] = 0x0, _0x580373[_0x35c1b0(0x267)]['_maxListeners'] = void 0x0;
              var _0x412d0a = 0xa;

              function _0x1eb3e6(_0x3e41bc) {
                if ('function' != typeof _0x3e41bc) throw new TypeError('The\x20\x22listener\x22\x20argument\x20must\x20be\x20of\x20type\x20Function.\x20Received\x20type\x20' + typeof _0x3e41bc);
              }

              function _0x475f4a(_0x1a0ec2) {
                var _0x4af607 = _0x35c1b0;
                return void 0x0 === _0x1a0ec2[_0x4af607(0x228)] ? _0x580373[_0x4af607(0x302)] : _0x1a0ec2[_0x4af607(0x228)];
              }

              function _0x12f062(_0x1cbd1d, _0x2d7a33, _0x229c49, _0x594135) {
                var _0x4d6e98 = _0x35c1b0,
                    _0x132f08,
                    _0x2d230b,
                    _0x45a682,
                    _0x52c6e9;

                if (_0x1eb3e6(_0x229c49), void 0x0 === (_0x2d230b = _0x1cbd1d[_0x4d6e98(0x392)]) ? (_0x2d230b = _0x1cbd1d[_0x4d6e98(0x392)] = Object[_0x4d6e98(0x14b)](null), _0x1cbd1d[_0x4d6e98(0x13b)] = 0x0) : (void 0x0 !== _0x2d230b[_0x4d6e98(0x129)] && (_0x1cbd1d[_0x4d6e98(0x426)](_0x4d6e98(0x129), _0x2d7a33, _0x229c49[_0x4d6e98(0x1e4)] ? _0x229c49[_0x4d6e98(0x1e4)] : _0x229c49), _0x2d230b = _0x1cbd1d[_0x4d6e98(0x392)]), _0x45a682 = _0x2d230b[_0x2d7a33]), void 0x0 === _0x45a682) _0x45a682 = _0x2d230b[_0x2d7a33] = _0x229c49, ++_0x1cbd1d[_0x4d6e98(0x13b)];else {
                  if (_0x4d6e98(0x23a) == typeof _0x45a682 ? _0x45a682 = _0x2d230b[_0x2d7a33] = _0x594135 ? [_0x229c49, _0x45a682] : [_0x45a682, _0x229c49] : _0x594135 ? _0x45a682[_0x4d6e98(0x2f6)](_0x229c49) : _0x45a682[_0x4d6e98(0x4c0)](_0x229c49), (_0x132f08 = _0x475f4a(_0x1cbd1d)) > 0x0 && _0x45a682[_0x4d6e98(0x109)] > _0x132f08 && !_0x45a682['warned']) {
                    _0x45a682[_0x4d6e98(0x2d8)] = !0x0;

                    var _0x370e4b = new Error('Possible\x20EventEmitter\x20memory\x20leak\x20detected.\x20' + _0x45a682[_0x4d6e98(0x109)] + '\x20' + String(_0x2d7a33) + _0x4d6e98(0x3c4));

                    _0x370e4b[_0x4d6e98(0x1fb)] = _0x4d6e98(0x21f), _0x370e4b['emitter'] = _0x1cbd1d, _0x370e4b[_0x4d6e98(0x1bd)] = _0x2d7a33, _0x370e4b['count'] = _0x45a682[_0x4d6e98(0x109)], _0x52c6e9 = _0x370e4b, console && console[_0x4d6e98(0x282)] && console[_0x4d6e98(0x282)](_0x52c6e9);
                  }
                }
                return _0x1cbd1d;
              }

              function _0x453b21() {
                var _0x593a1c = _0x35c1b0;
                if (!this[_0x593a1c(0x144)]) return this[_0x593a1c(0x1a3)][_0x593a1c(0x126)](this[_0x593a1c(0x1bd)], this[_0x593a1c(0x3f3)]), this[_0x593a1c(0x144)] = !0x0, 0x0 === arguments[_0x593a1c(0x109)] ? this[_0x593a1c(0x1e4)]['call'](this[_0x593a1c(0x1a3)]) : this['listener'][_0x593a1c(0x148)](this['target'], arguments);
              }

              function _0xbb6c6c(_0x2be20a, _0x323ff0, _0x10e557) {
                var _0x2ca590 = _0x35c1b0,
                    _0x529dd9 = {
                  'fired': !0x1,
                  'wrapFn': void 0x0,
                  'target': _0x2be20a,
                  'type': _0x323ff0,
                  'listener': _0x10e557
                },
                    _0x441989 = _0x453b21[_0x2ca590(0x42f)](_0x529dd9);

                return _0x441989[_0x2ca590(0x1e4)] = _0x10e557, _0x529dd9['wrapFn'] = _0x441989, _0x441989;
              }

              function _0x3c1b2a(_0x23b8b4, _0x1def78, _0xd7dad9) {
                var _0x4959b8 = _0x35c1b0,
                    _0x5efb9f = _0x23b8b4[_0x4959b8(0x392)];

                if (void 0x0 === _0x5efb9f) return [];
                var _0x4165c9 = _0x5efb9f[_0x1def78];
                return void 0x0 === _0x4165c9 ? [] : _0x4959b8(0x23a) == typeof _0x4165c9 ? _0xd7dad9 ? [_0x4165c9[_0x4959b8(0x1e4)] || _0x4165c9] : [_0x4165c9] : _0xd7dad9 ? function (_0x507061) {
                  var _0x3e16ab = _0x4959b8;

                  for (var _0x24f5ed = new Array(_0x507061['length']), _0x2a0578 = 0x0; _0x2a0578 < _0x24f5ed[_0x3e16ab(0x109)]; ++_0x2a0578) _0x24f5ed[_0x2a0578] = _0x507061[_0x2a0578][_0x3e16ab(0x1e4)] || _0x507061[_0x2a0578];

                  return _0x24f5ed;
                }(_0x4165c9) : _0x197c08(_0x4165c9, _0x4165c9[_0x4959b8(0x109)]);
              }

              function _0x1866d1(_0x474b43) {
                var _0x1336b9 = _0x35c1b0,
                    _0x480a82 = this[_0x1336b9(0x392)];

                if (void 0x0 !== _0x480a82) {
                  var _0x18aadc = _0x480a82[_0x474b43];
                  if (_0x1336b9(0x23a) == typeof _0x18aadc) return 0x1;
                  if (void 0x0 !== _0x18aadc) return _0x18aadc[_0x1336b9(0x109)];
                }

                return 0x0;
              }

              function _0x197c08(_0x5c63ce, _0x2fe47f) {
                for (var _0xb45e62 = new Array(_0x2fe47f), _0x5a6eab = 0x0; _0x5a6eab < _0x2fe47f; ++_0x5a6eab) _0xb45e62[_0x5a6eab] = _0x5c63ce[_0x5a6eab];

                return _0xb45e62;
              }

              function _0x195cda(_0x1b8f00, _0x46ad67, _0x2bf280, _0x33c19b) {
                var _0x58893d = _0x35c1b0;
                if (_0x58893d(0x23a) == typeof _0x1b8f00['on']) _0x33c19b[_0x58893d(0x466)] ? _0x1b8f00['once'](_0x46ad67, _0x2bf280) : _0x1b8f00['on'](_0x46ad67, _0x2bf280);else {
                  if (_0x58893d(0x23a) != typeof _0x1b8f00[_0x58893d(0x3d9)]) throw new TypeError('The\x20\x22emitter\x22\x20argument\x20must\x20be\x20of\x20type\x20EventEmitter.\x20Received\x20type\x20' + typeof _0x1b8f00);

                  _0x1b8f00['addEventListener'](_0x46ad67, function _0x5a015d(_0xe4f0c6) {
                    var _0x872fa0 = _0x58893d;
                    _0x33c19b['once'] && _0x1b8f00[_0x872fa0(0x434)](_0x46ad67, _0x5a015d), _0x2bf280(_0xe4f0c6);
                  });
                }
              }

              Object['defineProperty'](_0x580373, _0x35c1b0(0x302), {
                'enumerable': !0x0,
                'get': function get() {
                  return _0x412d0a;
                },
                'set': function set(_0xc9753a) {
                  var _0x1b4a85 = _0x35c1b0;
                  if (_0x1b4a85(0x35d) != typeof _0xc9753a || _0xc9753a < 0x0 || _0x1fb83f(_0xc9753a)) throw new RangeError(_0x1b4a85(0x4c6) + _0xc9753a + '.');
                  _0x412d0a = _0xc9753a;
                }
              }), _0x580373['init'] = function () {
                var _0x5ef514 = _0x35c1b0;
                void 0x0 !== this[_0x5ef514(0x392)] && this['_events'] !== Object[_0x5ef514(0x4ab)](this)[_0x5ef514(0x392)] || (this[_0x5ef514(0x392)] = Object[_0x5ef514(0x14b)](null), this['_eventsCount'] = 0x0), this[_0x5ef514(0x228)] = this[_0x5ef514(0x228)] || void 0x0;
              }, _0x580373[_0x35c1b0(0x267)]['setMaxListeners'] = function (_0x3250fa) {
                var _0xa526ed = _0x35c1b0;
                if (_0xa526ed(0x35d) != typeof _0x3250fa || _0x3250fa < 0x0 || _0x1fb83f(_0x3250fa)) throw new RangeError(_0xa526ed(0x30c) + _0x3250fa + '.');
                return this[_0xa526ed(0x228)] = _0x3250fa, this;
              }, _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x410)] = function () {
                return _0x475f4a(this);
              }, _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x426)] = function (_0x59355f) {
                var _0x4c4acf = _0x35c1b0;

                for (var _0x5202c8 = [], _0x34a3d0 = 0x1; _0x34a3d0 < arguments[_0x4c4acf(0x109)]; _0x34a3d0++) _0x5202c8[_0x4c4acf(0x4c0)](arguments[_0x34a3d0]);

                var _0x2faeea = _0x4c4acf(0x47c) === _0x59355f,
                    _0x348762 = this[_0x4c4acf(0x392)];

                if (void 0x0 !== _0x348762) _0x2faeea = _0x2faeea && void 0x0 === _0x348762['error'];else {
                  if (!_0x2faeea) return !0x1;
                }

                if (_0x2faeea) {
                  var _0x4d3271;

                  if (_0x5202c8[_0x4c4acf(0x109)] > 0x0 && (_0x4d3271 = _0x5202c8[0x0]), _0x4d3271 instanceof Error) throw _0x4d3271;

                  var _0xd6dd57 = new Error(_0x4c4acf(0x1d9) + (_0x4d3271 ? '\x20(' + _0x4d3271[_0x4c4acf(0x1cd)] + ')' : ''));

                  throw _0xd6dd57[_0x4c4acf(0x169)] = _0x4d3271, _0xd6dd57;
                }

                var _0x26b714 = _0x348762[_0x59355f];
                if (void 0x0 === _0x26b714) return !0x1;
                if (_0x4c4acf(0x23a) == typeof _0x26b714) _0x43c4c7(_0x26b714, this, _0x5202c8);else {
                  var _0x2e93fd = _0x26b714[_0x4c4acf(0x109)],
                      _0x33ea21 = _0x197c08(_0x26b714, _0x2e93fd);

                  for (_0x34a3d0 = 0x0; _0x34a3d0 < _0x2e93fd; ++_0x34a3d0) _0x43c4c7(_0x33ea21[_0x34a3d0], this, _0x5202c8);
                }
                return !0x0;
              }, _0x580373['prototype'][_0x35c1b0(0x360)] = function (_0x24d58a, _0x4ec750) {
                return _0x12f062(this, _0x24d58a, _0x4ec750, !0x1);
              }, _0x580373['prototype']['on'] = _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x360)], _0x580373['prototype']['prependListener'] = function (_0x3062c4, _0x2d1dfc) {
                return _0x12f062(this, _0x3062c4, _0x2d1dfc, !0x0);
              }, _0x580373['prototype'][_0x35c1b0(0x466)] = function (_0x1c02f6, _0x7b3923) {
                return _0x1eb3e6(_0x7b3923), this['on'](_0x1c02f6, _0xbb6c6c(this, _0x1c02f6, _0x7b3923)), this;
              }, _0x580373['prototype'][_0x35c1b0(0x442)] = function (_0x293318, _0x2e4245) {
                var _0x39508d = _0x35c1b0;
                return _0x1eb3e6(_0x2e4245), this[_0x39508d(0x205)](_0x293318, _0xbb6c6c(this, _0x293318, _0x2e4245)), this;
              }, _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x126)] = function (_0x2444f0, _0x1e4806) {
                var _0x6b79a2 = _0x35c1b0,
                    _0x8dad7a,
                    _0x41af7b,
                    _0x2353f4,
                    _0x4c76e0,
                    _0x18b901;

                if (_0x1eb3e6(_0x1e4806), void 0x0 === (_0x41af7b = this[_0x6b79a2(0x392)])) return this;
                if (void 0x0 === (_0x8dad7a = _0x41af7b[_0x2444f0])) return this;
                if (_0x8dad7a === _0x1e4806 || _0x8dad7a[_0x6b79a2(0x1e4)] === _0x1e4806) 0x0 == --this['_eventsCount'] ? this[_0x6b79a2(0x392)] = Object['create'](null) : (delete _0x41af7b[_0x2444f0], _0x41af7b[_0x6b79a2(0x126)] && this[_0x6b79a2(0x426)](_0x6b79a2(0x126), _0x2444f0, _0x8dad7a[_0x6b79a2(0x1e4)] || _0x1e4806));else {
                  if ('function' != typeof _0x8dad7a) {
                    for (_0x2353f4 = -0x1, _0x4c76e0 = _0x8dad7a[_0x6b79a2(0x109)] - 0x1; _0x4c76e0 >= 0x0; _0x4c76e0--) if (_0x8dad7a[_0x4c76e0] === _0x1e4806 || _0x8dad7a[_0x4c76e0][_0x6b79a2(0x1e4)] === _0x1e4806) {
                      _0x18b901 = _0x8dad7a[_0x4c76e0]['listener'], _0x2353f4 = _0x4c76e0;
                      break;
                    }

                    if (_0x2353f4 < 0x0) return this;
                    0x0 === _0x2353f4 ? _0x8dad7a[_0x6b79a2(0x44e)]() : function (_0x111605, _0x355324) {
                      var _0x53d919 = _0x6b79a2;

                      for (; _0x355324 + 0x1 < _0x111605[_0x53d919(0x109)]; _0x355324++) _0x111605[_0x355324] = _0x111605[_0x355324 + 0x1];

                      _0x111605[_0x53d919(0x40a)]();
                    }(_0x8dad7a, _0x2353f4), 0x1 === _0x8dad7a[_0x6b79a2(0x109)] && (_0x41af7b[_0x2444f0] = _0x8dad7a[0x0]), void 0x0 !== _0x41af7b[_0x6b79a2(0x126)] && this['emit'](_0x6b79a2(0x126), _0x2444f0, _0x18b901 || _0x1e4806);
                  }
                }
                return this;
              }, _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x441)] = _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x126)], _0x580373[_0x35c1b0(0x267)][_0x35c1b0(0x1b5)] = function (_0x5858a2) {
                var _0x44c625 = _0x35c1b0,
                    _0x2d7d54,
                    _0x5b2922,
                    _0x364957;

                if (void 0x0 === (_0x5b2922 = this[_0x44c625(0x392)])) return this;
                if (void 0x0 === _0x5b2922[_0x44c625(0x126)]) return 0x0 === arguments[_0x44c625(0x109)] ? (this[_0x44c625(0x392)] = Object[_0x44c625(0x14b)](null), this[_0x44c625(0x13b)] = 0x0) : void 0x0 !== _0x5b2922[_0x5858a2] && (0x0 == --this['_eventsCount'] ? this[_0x44c625(0x392)] = Object[_0x44c625(0x14b)](null) : delete _0x5b2922[_0x5858a2]), this;

                if (0x0 === arguments[_0x44c625(0x109)]) {
                  var _0x125b95,
                      _0x35c26e = Object[_0x44c625(0x3ef)](_0x5b2922);

                  for (_0x364957 = 0x0; _0x364957 < _0x35c26e[_0x44c625(0x109)]; ++_0x364957) 'removeListener' !== (_0x125b95 = _0x35c26e[_0x364957]) && this['removeAllListeners'](_0x125b95);

                  return this[_0x44c625(0x1b5)](_0x44c625(0x126)), this[_0x44c625(0x392)] = Object[_0x44c625(0x14b)](null), this[_0x44c625(0x13b)] = 0x0, this;
                }

                if (_0x44c625(0x23a) == typeof (_0x2d7d54 = _0x5b2922[_0x5858a2])) this[_0x44c625(0x126)](_0x5858a2, _0x2d7d54);else {
                  if (void 0x0 !== _0x2d7d54) {
                    for (_0x364957 = _0x2d7d54[_0x44c625(0x109)] - 0x1; _0x364957 >= 0x0; _0x364957--) this['removeListener'](_0x5858a2, _0x2d7d54[_0x364957]);
                  }
                }
                return this;
              }, _0x580373[_0x35c1b0(0x267)]['listeners'] = function (_0x290f0f) {
                return _0x3c1b2a(this, _0x290f0f, !0x0);
              }, _0x580373['prototype'][_0x35c1b0(0x403)] = function (_0x16d5e6) {
                return _0x3c1b2a(this, _0x16d5e6, !0x1);
              }, _0x580373[_0x35c1b0(0x26b)] = function (_0x1def3b, _0x39f2d5) {
                var _0x3ce40f = _0x35c1b0;
                return _0x3ce40f(0x23a) == typeof _0x1def3b[_0x3ce40f(0x26b)] ? _0x1def3b[_0x3ce40f(0x26b)](_0x39f2d5) : _0x1866d1[_0x3ce40f(0x20b)](_0x1def3b, _0x39f2d5);
              }, _0x580373[_0x35c1b0(0x267)]['listenerCount'] = _0x1866d1, _0x580373['prototype'][_0x35c1b0(0x412)] = function () {
                var _0x13789d = _0x35c1b0;
                return this['_eventsCount'] > 0x0 ? _0x58bbed(this[_0x13789d(0x392)]) : [];
              };
            },
            0xd8a: function _(_0x64c1fc, _0x216c33, _0x966c46) {
              var _0x3b3765 = a1_0x1adc,
                  _0x407d23 = _0x966c46(0x16c2),
                  _0x57cdea = Object['prototype'][_0x3b3765(0x1c8)],
                  _0x699c8a = _0x3b3765(0x23a) == typeof Blob || _0x3b3765(0x121) != typeof Blob && '[object\x20BlobConstructor]' === _0x57cdea[_0x3b3765(0x20b)](Blob),
                  _0x3c538b = _0x3b3765(0x23a) == typeof File || 'undefined' != typeof File && _0x3b3765(0x195) === _0x57cdea[_0x3b3765(0x20b)](File);

              _0x64c1fc[_0x3b3765(0x10f)] = function _0x1bc6a6(_0x5e4d21) {
                var _0x27db9b = _0x3b3765;
                if (!_0x5e4d21 || 'object' != typeof _0x5e4d21) return !0x1;

                if (_0x407d23(_0x5e4d21)) {
                  for (var _0x2bf440 = 0x0, _0xec0d53 = _0x5e4d21[_0x27db9b(0x109)]; _0x2bf440 < _0xec0d53; _0x2bf440++) if (_0x1bc6a6(_0x5e4d21[_0x2bf440])) return !0x0;

                  return !0x1;
                }

                if ('function' == typeof Buffer && Buffer[_0x27db9b(0x161)] && Buffer['isBuffer'](_0x5e4d21) || 'function' == typeof ArrayBuffer && _0x5e4d21 instanceof ArrayBuffer || _0x699c8a && _0x5e4d21 instanceof Blob || _0x3c538b && _0x5e4d21 instanceof File) return !0x0;
                if (_0x5e4d21[_0x27db9b(0x1a6)] && _0x27db9b(0x23a) == typeof _0x5e4d21[_0x27db9b(0x1a6)] && 0x1 === arguments[_0x27db9b(0x109)]) return _0x1bc6a6(_0x5e4d21[_0x27db9b(0x1a6)](), !0x0);

                for (var _0x49e597 in _0x5e4d21) if (Object[_0x27db9b(0x267)][_0x27db9b(0x19c)][_0x27db9b(0x20b)](_0x5e4d21, _0x49e597) && _0x1bc6a6(_0x5e4d21[_0x49e597])) return !0x0;

                return !0x1;
              };
            },
            0x1f7a: function _(_0x1a181d) {
              var _0x11db9c = a1_0x1adc;

              try {
                _0x1a181d['exports'] = _0x11db9c(0x121) != typeof XMLHttpRequest && _0x11db9c(0x383) in new XMLHttpRequest();
              } catch (_0x22f796) {
                _0x1a181d['exports'] = !0x1;
              }
            },
            0x28a: function _(_0x1b18bc, _0x4a96ef) {
              var _0x40d10a = a1_0x1adc,
                  _0x1b237c,
                  _0x111cf0;

              _0x1b237c = function _0x1b237c() {
                var _0x55bf49 = a1_0x1adc;

                function _0x184555(_0x18d3dd) {
                  var _0x395f4f = a1_0x1adc;

                  switch (this[_0x395f4f(0x2f8)](), arguments[_0x395f4f(0x109)]) {
                    case 0x0:
                      break;

                    case 0x1:
                      _0x395f4f(0x109) in _0x18d3dd ? _0x472e5b(this, Array[_0x395f4f(0x267)][_0x395f4f(0x46f)]['apply']([], _0x18d3dd)) : this[_0x395f4f(0x1af)](_0x18d3dd);
                      break;

                    default:
                      _0x472e5b(this, arguments);

                  }
                }

                var _0x3b0798 = _0x184555[_0x55bf49(0x267)] = {
                  'constructor': _0x184555,
                  'get': function get(_0x26a914) {
                    var _0x1a64f2 = _0x55bf49,
                        _0x2a5164 = this[_0x1a64f2(0x2dd)][this[_0x1a64f2(0x349)](_0x26a914)];

                    return _0x2a5164 && _0x2a5164[0x1];
                  },
                  'set': function set(_0x4e5bd8, _0x29fcd2) {
                    var _0x5c7747 = _0x55bf49,
                        _0x2c1d3 = this[_0x5c7747(0x349)](_0x4e5bd8);

                    _0x2c1d3 in this[_0x5c7747(0x2dd)] || this['size']++, this[_0x5c7747(0x2dd)][_0x2c1d3] = [_0x4e5bd8, _0x29fcd2];
                  },
                  'multi': function multi() {
                    _0x472e5b(this, arguments);
                  },
                  'copy': function copy(_0x5a7005) {
                    var _0x351a5e = _0x55bf49;

                    for (var _0x5a1c9d in _0x5a7005[_0x351a5e(0x2dd)]) _0x5a1c9d in this[_0x351a5e(0x2dd)] || this['size']++, this[_0x351a5e(0x2dd)][_0x5a1c9d] = _0x5a7005['_data'][_0x5a1c9d];
                  },
                  'has': function has(_0x2e5909) {
                    var _0x3b153e = _0x55bf49;
                    return this[_0x3b153e(0x349)](_0x2e5909) in this[_0x3b153e(0x2dd)];
                  },
                  'search': function search(_0x40a02c) {
                    var _0x4f9395 = _0x55bf49;

                    for (var _0x1a0d97 in this[_0x4f9395(0x2dd)]) if (this['_data'][_0x1a0d97][0x1] === _0x40a02c) return this[_0x4f9395(0x2dd)][_0x1a0d97][0x0];

                    return null;
                  },
                  'delete': function _delete(_0x558f3d) {
                    var _0x28933a = _0x55bf49,
                        _0x25141d = this[_0x28933a(0x349)](_0x558f3d);

                    _0x25141d in this[_0x28933a(0x2dd)] && (this['size']--, delete this[_0x28933a(0x2dd)][_0x25141d]);
                  },
                  'type': function type(_0x49ec2e) {
                    var _0x1f663e = _0x55bf49,
                        _0x2425ed = Object[_0x1f663e(0x267)]['toString']['call'](_0x49ec2e)['slice'](0x8, -0x1)[_0x1f663e(0x444)]();

                    return _0x49ec2e || 'domwindow' !== _0x2425ed && _0x1f663e(0x4ca) !== _0x2425ed ? _0x2425ed : _0x49ec2e + '';
                  },
                  'keys': function keys() {
                    var _0x27401f = [];
                    return this['forEach'](function (_0x5a7856, _0x4d5091) {
                      var _0x498b4a = a1_0x1adc;

                      _0x27401f[_0x498b4a(0x4c0)](_0x4d5091);
                    }), _0x27401f;
                  },
                  'values': function values() {
                    var _0x2eed72 = _0x55bf49,
                        _0x2c77f9 = [];
                    return this[_0x2eed72(0x37b)](function (_0x1a283d) {
                      var _0xb4f7d8 = _0x2eed72;

                      _0x2c77f9[_0xb4f7d8(0x4c0)](_0x1a283d);
                    }), _0x2c77f9;
                  },
                  'entries': function entries() {
                    var _0x143915 = _0x55bf49,
                        _0x45df43 = [];
                    return this[_0x143915(0x37b)](function (_0x3c1e04, _0xcb1172) {
                      var _0x4e82db = _0x143915;

                      _0x45df43[_0x4e82db(0x4c0)]([_0xcb1172, _0x3c1e04]);
                    }), _0x45df43;
                  },
                  'count': function count() {
                    return this['size'];
                  },
                  'clear': function clear() {
                    var _0x3796a8 = _0x55bf49;
                    this[_0x3796a8(0x2dd)] = {}, this[_0x3796a8(0x33a)] = 0x0;
                  },
                  'clone': function clone() {
                    return new _0x184555(this);
                  },
                  'hash': function hash(_0x24fdad) {
                    var _0x124e1f = _0x55bf49;

                    switch (this[_0x124e1f(0x1bd)](_0x24fdad)) {
                      case 'undefined':
                      case 'null':
                      case _0x124e1f(0x268):
                      case _0x124e1f(0x35d):
                      case 'regexp':
                        return _0x24fdad + '';

                      case _0x124e1f(0x27a):
                        return '♣' + _0x24fdad[_0x124e1f(0x348)]();

                      case _0x124e1f(0x2df):
                        return '♠' + _0x24fdad;

                      case _0x124e1f(0x3d8):
                        for (var _0x492191 = [], _0x704b32 = 0x0; _0x704b32 < _0x24fdad['length']; _0x704b32++) _0x492191[_0x704b32] = this[_0x124e1f(0x349)](_0x24fdad[_0x704b32]);

                        return '♥' + _0x492191[_0x124e1f(0x49b)]('⁞');

                      default:
                        return _0x24fdad['hasOwnProperty'](_0x124e1f(0x1f2)) || (_0x24fdad[_0x124e1f(0x1f2)] = ++_0x184555['uid'], _0x1c61db = _0x24fdad, _0x50774a = _0x124e1f(0x1f2), Object[_0x124e1f(0x42b)] && Object[_0x124e1f(0x42b)](_0x1c61db, _0x50774a, {
                          'enumerable': !0x1
                        })), '♦' + _0x24fdad[_0x124e1f(0x1f2)];
                    }

                    var _0x1c61db, _0x50774a;
                  },
                  'forEach': function forEach(_0x11f4d2, _0x538474) {
                    var _0x93f8f0 = _0x55bf49;

                    for (var _0x57d360 in this['_data']) {
                      var _0x3d793f = this['_data'][_0x57d360];

                      _0x11f4d2[_0x93f8f0(0x20b)](_0x538474 || this, _0x3d793f[0x1], _0x3d793f[0x0]);
                    }
                  }
                };

                function _0x472e5b(_0x109ffd, _0x591a2d) {
                  var _0x3f257d = _0x55bf49;

                  for (var _0x35e1e0 = 0x0; _0x35e1e0 < _0x591a2d[_0x3f257d(0x109)]; _0x35e1e0 += 0x2) _0x109ffd[_0x3f257d(0x176)](_0x591a2d[_0x35e1e0], _0x591a2d[_0x35e1e0 + 0x1]);
                }

                return _0x184555[_0x55bf49(0x175)] = 0x0, _0x55bf49(0x121) != typeof Symbol && void 0x0 !== Symbol[_0x55bf49(0x399)] && (_0x3b0798[Symbol[_0x55bf49(0x399)]] = function () {
                  var _0x5877ab = _0x55bf49,
                      _0x2b839d = this[_0x5877ab(0x1ec)](),
                      _0x3872ef = 0x0;

                  return {
                    'next': function next() {
                      var _0xa9394 = _0x5877ab;
                      if (_0x3872ef === _0x2b839d[_0xa9394(0x109)]) return {
                        'done': !0x0
                      };
                      var _0x520972 = _0x2b839d[_0x3872ef++];
                      return {
                        'value': {
                          'key': _0x520972[0x0],
                          'value': _0x520972[0x1]
                        },
                        'done': !0x1
                      };
                    }
                  };
                }), [_0x55bf49(0x176), _0x55bf49(0x3f0), _0x55bf49(0x1af), 'delete', _0x55bf49(0x2f8), _0x55bf49(0x37b)][_0x55bf49(0x37b)](function (_0x56a668) {
                  var _0x1c865f = _0x3b0798[_0x56a668];

                  _0x3b0798[_0x56a668] = function () {
                    var _0x129f2c = a1_0x1adc;
                    return _0x1c865f[_0x129f2c(0x148)](this, arguments), this;
                  };
                }), _0x184555[_0x55bf49(0x267)]['remove'] = _0x184555[_0x55bf49(0x267)]['delete'], _0x184555;
              }, void 0x0 === (_0x111cf0 = _0x1b237c[_0x40d10a(0x148)](_0x4a96ef, [])) || (_0x1b18bc[_0x40d10a(0x10f)] = _0x111cf0);
            },
            0x1cbb: function _(_0x59bd6f) {
              var _0x4aa7b5 = a1_0x1adc,
                  _0x36ccde = [][_0x4aa7b5(0x458)];

              _0x59bd6f[_0x4aa7b5(0x10f)] = function (_0x5c4eda, _0x124824) {
                var _0x1db5f1 = _0x4aa7b5;
                if (_0x36ccde) return _0x5c4eda[_0x1db5f1(0x458)](_0x124824);

                for (var _0x4ddc21 = 0x0; _0x4ddc21 < _0x5c4eda[_0x1db5f1(0x109)]; ++_0x4ddc21) if (_0x5c4eda[_0x4ddc21] === _0x124824) return _0x4ddc21;

                return -0x1;
              };
            },
            0x16c2: function _(_0x2d2cc7) {
              var _0x1db7aa = a1_0x1adc,
                  _0x3ba7d8 = {}['toString'];

              _0x2d2cc7['exports'] = Array[_0x1db7aa(0x3cc)] || function (_0x19776e) {
                var _0x54bdf0 = _0x1db7aa;
                return _0x54bdf0(0x30b) == _0x3ba7d8[_0x54bdf0(0x20b)](_0x19776e);
              };
            },
            0x1e90: function _(_0x1e2c8c) {
              var _0x32dcf3 = 0x3e8,
                  _0x523713 = 0x3c * _0x32dcf3,
                  _0xc7337 = 0x3c * _0x523713,
                  _0x4c1788 = 0x18 * _0xc7337;

              function _0x4ffab7(_0x5ab3a4, _0x14eb6f, _0xc7274f) {
                var _0x7f2e13 = a1_0x1adc;
                if (!(_0x5ab3a4 < _0x14eb6f)) return _0x5ab3a4 < 1.5 * _0x14eb6f ? Math[_0x7f2e13(0x38b)](_0x5ab3a4 / _0x14eb6f) + '\x20' + _0xc7274f : Math[_0x7f2e13(0x447)](_0x5ab3a4 / _0x14eb6f) + '\x20' + _0xc7274f + 's';
              }

              _0x1e2c8c['exports'] = function (_0x5eab37, _0x2798b2) {
                var _0x56e19d = a1_0x1adc;
                _0x2798b2 = _0x2798b2 || {};

                var _0x22ab43,
                    _0x2f9bae = typeof _0x5eab37;

                if (_0x56e19d(0x2df) === _0x2f9bae && _0x5eab37['length'] > 0x0) return function (_0x227c8d) {
                  var _0x4f4501 = _0x56e19d;

                  if (!((_0x227c8d = String(_0x227c8d))[_0x4f4501(0x109)] > 0x64)) {
                    var _0x9c6804 = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i[_0x4f4501(0x199)](_0x227c8d);

                    if (_0x9c6804) {
                      var _0x259ec3 = parseFloat(_0x9c6804[0x1]);

                      switch ((_0x9c6804[0x2] || 'ms')[_0x4f4501(0x444)]()) {
                        case _0x4f4501(0x31d):
                        case _0x4f4501(0x3b4):
                        case _0x4f4501(0x309):
                        case 'yr':
                        case 'y':
                          return 0x758fac300 * _0x259ec3;

                        case _0x4f4501(0x351):
                        case 'day':
                        case 'd':
                          return _0x259ec3 * _0x4c1788;

                        case 'hours':
                        case _0x4f4501(0x2c4):
                        case _0x4f4501(0x416):
                        case 'hr':
                        case 'h':
                          return _0x259ec3 * _0xc7337;

                        case 'minutes':
                        case _0x4f4501(0x4d5):
                        case _0x4f4501(0x288):
                        case _0x4f4501(0x2d1):
                        case 'm':
                          return _0x259ec3 * _0x523713;

                        case 'seconds':
                        case _0x4f4501(0x37d):
                        case _0x4f4501(0x1bc):
                        case _0x4f4501(0x17c):
                        case 's':
                          return _0x259ec3 * _0x32dcf3;

                        case _0x4f4501(0x139):
                        case _0x4f4501(0x388):
                        case _0x4f4501(0x34c):
                        case _0x4f4501(0x1d5):
                        case 'ms':
                          return _0x259ec3;

                        default:
                          return;
                      }
                    }
                  }
                }(_0x5eab37);
                if (_0x56e19d(0x35d) === _0x2f9bae && !0x1 === isNaN(_0x5eab37)) return _0x2798b2['long'] ? _0x4ffab7(_0x22ab43 = _0x5eab37, _0x4c1788, 'day') || _0x4ffab7(_0x22ab43, _0xc7337, _0x56e19d(0x2c4)) || _0x4ffab7(_0x22ab43, _0x523713, _0x56e19d(0x4d5)) || _0x4ffab7(_0x22ab43, _0x32dcf3, 'second') || _0x22ab43 + _0x56e19d(0x2f2) : function (_0x3127aa) {
                  var _0x3d7c71 = _0x56e19d;
                  return _0x3127aa >= _0x4c1788 ? Math['round'](_0x3127aa / _0x4c1788) + 'd' : _0x3127aa >= _0xc7337 ? Math[_0x3d7c71(0x253)](_0x3127aa / _0xc7337) + 'h' : _0x3127aa >= _0x523713 ? Math[_0x3d7c71(0x253)](_0x3127aa / _0x523713) + 'm' : _0x3127aa >= _0x32dcf3 ? Math[_0x3d7c71(0x253)](_0x3127aa / _0x32dcf3) + 's' : _0x3127aa + 'ms';
                }(_0x5eab37);
                throw new Error(_0x56e19d(0x3d5) + JSON['stringify'](_0x5eab37));
              };
            },
            0x726: function _(_0x5c9853, _0x356fae) {
              _0x356fae['encode'] = function (_0x1eb3e9) {
                var _0x4e4127 = a1_0x1adc,
                    _0x3e953f = '';

                for (var _0x4797c9 in _0x1eb3e9) _0x1eb3e9['hasOwnProperty'](_0x4797c9) && (_0x3e953f[_0x4e4127(0x109)] && (_0x3e953f += '&'), _0x3e953f += encodeURIComponent(_0x4797c9) + '=' + encodeURIComponent(_0x1eb3e9[_0x4797c9]));

                return _0x3e953f;
              }, _0x356fae['decode'] = function (_0x3babd3) {
                var _0x12372b = a1_0x1adc;

                for (var _0xc51bba = {}, _0x4b8e43 = _0x3babd3[_0x12372b(0x194)]('&'), _0x44eff8 = 0x0, _0x5bde45 = _0x4b8e43['length']; _0x44eff8 < _0x5bde45; _0x44eff8++) {
                  var _0x5c4171 = _0x4b8e43[_0x44eff8][_0x12372b(0x194)]('=');

                  _0xc51bba[decodeURIComponent(_0x5c4171[0x0])] = decodeURIComponent(_0x5c4171[0x1]);
                }

                return _0xc51bba;
              };
            },
            0x105b: function _(_0x3f67f2) {
              var _0x5176a3 = a1_0x1adc,
                  _0x589c5f = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/,
                  _0x38da69 = [_0x5176a3(0x18b), _0x5176a3(0x280), _0x5176a3(0x193), 'userInfo', 'user', _0x5176a3(0x423), _0x5176a3(0x4a9), 'port', _0x5176a3(0x369), 'path', 'directory', _0x5176a3(0x123), _0x5176a3(0x174), 'anchor'];

              _0x3f67f2[_0x5176a3(0x10f)] = function (_0x3f8686) {
                var _0x599c12 = _0x5176a3,
                    _0x2a51b2,
                    _0x419075,
                    _0x3c5e02,
                    _0x54cf13 = _0x3f8686,
                    _0x525240 = _0x3f8686['indexOf']('['),
                    _0x5e859a = _0x3f8686[_0x599c12(0x458)](']');

                -0x1 != _0x525240 && -0x1 != _0x5e859a && (_0x3f8686 = _0x3f8686[_0x599c12(0x495)](0x0, _0x525240) + _0x3f8686[_0x599c12(0x495)](_0x525240, _0x5e859a)['replace'](/:/g, ';') + _0x3f8686['substring'](_0x5e859a, _0x3f8686[_0x599c12(0x109)]));

                for (var _0x2bfbf5, _0x56bfaf, _0xae25e1 = _0x589c5f[_0x599c12(0x199)](_0x3f8686 || ''), _0x2eec2b = {}, _0x3624d6 = 0xe; _0x3624d6--;) _0x2eec2b[_0x38da69[_0x3624d6]] = _0xae25e1[_0x3624d6] || '';

                return -0x1 != _0x525240 && -0x1 != _0x5e859a && (_0x2eec2b[_0x599c12(0x18b)] = _0x54cf13, _0x2eec2b[_0x599c12(0x4a9)] = _0x2eec2b[_0x599c12(0x4a9)][_0x599c12(0x495)](0x1, _0x2eec2b[_0x599c12(0x4a9)][_0x599c12(0x109)] - 0x1)[_0x599c12(0x27c)](/;/g, ':'), _0x2eec2b[_0x599c12(0x193)] = _0x2eec2b[_0x599c12(0x193)][_0x599c12(0x27c)]('[', '')[_0x599c12(0x27c)](']', '')[_0x599c12(0x27c)](/;/g, ':'), _0x2eec2b[_0x599c12(0x247)] = !0x0), _0x2eec2b[_0x599c12(0x13e)] = (_0x419075 = /\/{2,9}/g, _0x3c5e02 = (_0x2a51b2 = _0x2eec2b['path'])[_0x599c12(0x27c)](_0x419075, '/')[_0x599c12(0x194)]('/'), '/' != _0x2a51b2[_0x599c12(0x1ba)](0x0, 0x1) && 0x0 !== _0x2a51b2[_0x599c12(0x109)] || _0x3c5e02['splice'](0x0, 0x1), '/' == _0x2a51b2[_0x599c12(0x1ba)](_0x2a51b2[_0x599c12(0x109)] - 0x1, 0x1) && _0x3c5e02[_0x599c12(0x35b)](_0x3c5e02[_0x599c12(0x109)] - 0x1, 0x1), _0x3c5e02), _0x2eec2b['queryKey'] = (_0x2bfbf5 = _0x2eec2b[_0x599c12(0x174)], _0x56bfaf = {}, _0x2bfbf5['replace'](/(?:^|&)([^&=]*)=?([^&]*)/g, function (_0x8d171a, _0xa7756a, _0x3df4cf) {
                  _0xa7756a && (_0x56bfaf[_0xa7756a] = _0x3df4cf);
                }), _0x56bfaf), _0x2eec2b;
              };
            },
            0x1a99: function _(_0x286b14, _0x1abacd, _0x1fec4d) {
              var _0x198cde = a1_0x1adc,
                  _0x1336f3 = _0x1fec4d(0xe5e),
                  _0xa8928d = _0x1fec4d(0x2399),
                  _0x57c721 = _0x1fec4d(0xab3),
                  _0x31b24a = _0x1fec4d(0x4cb)(_0x198cde(0x2a2));

              _0x286b14[_0x198cde(0x10f)] = _0x1abacd = _0x4d56f8;

              var _0x418578 = _0x1abacd[_0x198cde(0x381)] = {};

              function _0x4d56f8(_0x5ebb38, _0x48ed47) {
                var _0x472ab4 = _0x198cde;
                'object' == typeof _0x5ebb38 && (_0x48ed47 = _0x5ebb38, _0x5ebb38 = void 0x0), _0x48ed47 = _0x48ed47 || {};

                var _0x2ac89a,
                    _0x42808f = _0x1336f3(_0x5ebb38),
                    _0x40d0cd = _0x42808f[_0x472ab4(0x18b)],
                    _0x114a05 = _0x42808f['id'],
                    _0x415c94 = _0x42808f[_0x472ab4(0x1c3)],
                    _0x1d7e06 = _0x418578[_0x114a05] && _0x415c94 in _0x418578[_0x114a05]['nsps'];

                return _0x48ed47[_0x472ab4(0x3b2)] || _0x48ed47['force\x20new\x20connection'] || !0x1 === _0x48ed47['multiplex'] || _0x1d7e06 ? (_0x31b24a(_0x472ab4(0x28a), _0x40d0cd), _0x2ac89a = _0x57c721(_0x40d0cd, _0x48ed47)) : (_0x418578[_0x114a05] || (_0x31b24a(_0x472ab4(0x1f1), _0x40d0cd), _0x418578[_0x114a05] = _0x57c721(_0x40d0cd, _0x48ed47)), _0x2ac89a = _0x418578[_0x114a05]), _0x42808f[_0x472ab4(0x174)] && !_0x48ed47['query'] && (_0x48ed47[_0x472ab4(0x174)] = _0x42808f[_0x472ab4(0x174)]), _0x2ac89a[_0x472ab4(0x154)](_0x42808f[_0x472ab4(0x1c3)], _0x48ed47);
              }

              _0x1abacd[_0x198cde(0x280)] = _0xa8928d['protocol'], _0x1abacd[_0x198cde(0x150)] = _0x4d56f8, _0x1abacd['Manager'] = _0x1fec4d(0xab3), _0x1abacd[_0x198cde(0x468)] = _0x1fec4d(0x2188);
            },
            0xab3: function _(_0x51a1a0, _0x323331, _0x3f50f5) {
              var _0x8c1820 = a1_0x1adc,
                  _0x59ae97 = _0x3f50f5(0x175f),
                  _0x5e33a9 = _0x3f50f5(0x2188),
                  _0x3bdd2d = _0x3f50f5(0x223f),
                  _0x1d64b7 = _0x3f50f5(0x2399),
                  _0x3dde3b = _0x3f50f5(0x1558),
                  _0x1f298a = _0x3f50f5(0x17bd),
                  _0x5227b3 = _0x3f50f5(0x4cb)(_0x8c1820(0x12f)),
                  _0x252c34 = _0x3f50f5(0x1cbb),
                  _0xfd370f = _0x3f50f5(0xbc2),
                  _0x982470 = Object[_0x8c1820(0x267)]['hasOwnProperty'];

              function _0x4eb724(_0x5e1875, _0x31178e) {
                var _0x2150b7 = _0x8c1820;
                if (!(this instanceof _0x4eb724)) return new _0x4eb724(_0x5e1875, _0x31178e);
                _0x5e1875 && _0x2150b7(0x26e) == typeof _0x5e1875 && (_0x31178e = _0x5e1875, _0x5e1875 = void 0x0), (_0x31178e = _0x31178e || {})['path'] = _0x31178e['path'] || _0x2150b7(0x278), this[_0x2150b7(0x281)] = {}, this['subs'] = [], this[_0x2150b7(0x1c7)] = _0x31178e, this['reconnection'](!0x1 !== _0x31178e[_0x2150b7(0x219)]), this['reconnectionAttempts'](_0x31178e['reconnectionAttempts'] || 0x1 / 0x0), this[_0x2150b7(0x344)](_0x31178e[_0x2150b7(0x344)] || 0x3e8), this[_0x2150b7(0x256)](_0x31178e[_0x2150b7(0x256)] || 0x1388), this[_0x2150b7(0x47b)](_0x31178e['randomizationFactor'] || 0.5), this[_0x2150b7(0x44d)] = new _0xfd370f({
                  'min': this[_0x2150b7(0x344)](),
                  'max': this[_0x2150b7(0x256)](),
                  'jitter': this[_0x2150b7(0x47b)]()
                }), this[_0x2150b7(0x214)](null == _0x31178e[_0x2150b7(0x214)] ? 0x4e20 : _0x31178e[_0x2150b7(0x214)]), this['readyState'] = 'closed', this[_0x2150b7(0x3d1)] = _0x5e1875, this['connecting'] = [], this[_0x2150b7(0x35e)] = null, this['encoding'] = !0x1, this[_0x2150b7(0x4b9)] = [];

                var _0x18237a = _0x31178e[_0x2150b7(0x319)] || _0x1d64b7;

                this['encoder'] = new _0x18237a[_0x2150b7(0x15c)](), this[_0x2150b7(0x115)] = new _0x18237a[_0x2150b7(0x4b7)](), this[_0x2150b7(0x3ee)] = !0x1 !== _0x31178e[_0x2150b7(0x3ee)], this['autoConnect'] && this[_0x2150b7(0x32e)]();
              }

              _0x51a1a0[_0x8c1820(0x10f)] = _0x4eb724, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x2f4)] = function () {
                var _0x2241f7 = _0x8c1820;

                for (var _0xd9ef42 in this['emit'][_0x2241f7(0x148)](this, arguments), this['nsps']) _0x982470[_0x2241f7(0x20b)](this[_0x2241f7(0x281)], _0xd9ef42) && this[_0x2241f7(0x281)][_0xd9ef42]['emit'][_0x2241f7(0x148)](this[_0x2241f7(0x281)][_0xd9ef42], arguments);
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x3a7)] = function () {
                var _0x8bf358 = _0x8c1820;

                for (var _0x45535c in this[_0x8bf358(0x281)]) _0x982470['call'](this['nsps'], _0x45535c) && (this['nsps'][_0x45535c]['id'] = this['generateId'](_0x45535c));
              }, _0x4eb724[_0x8c1820(0x267)]['generateId'] = function (_0x447760) {
                var _0x3e81aa = _0x8c1820;
                return ('/' === _0x447760 ? '' : _0x447760 + '#') + this[_0x3e81aa(0x3b0)]['id'];
              }, _0x3bdd2d(_0x4eb724[_0x8c1820(0x267)]), _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x219)] = function (_0x26b4b7) {
                var _0x22c290 = _0x8c1820;
                return arguments[_0x22c290(0x109)] ? (this['_reconnection'] = !!_0x26b4b7, this) : this['_reconnection'];
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x3ab)] = function (_0x302685) {
                var _0xfd8b6f = _0x8c1820;
                return arguments[_0xfd8b6f(0x109)] ? (this[_0xfd8b6f(0x45c)] = _0x302685, this) : this[_0xfd8b6f(0x45c)];
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x344)] = function (_0x531687) {
                var _0x174181 = _0x8c1820;
                return arguments[_0x174181(0x109)] ? (this[_0x174181(0x1a4)] = _0x531687, this[_0x174181(0x44d)] && this['backoff'][_0x174181(0x404)](_0x531687), this) : this[_0x174181(0x1a4)];
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x47b)] = function (_0x55d48d) {
                var _0x51f9eb = _0x8c1820;
                return arguments['length'] ? (this[_0x51f9eb(0x1c6)] = _0x55d48d, this[_0x51f9eb(0x44d)] && this[_0x51f9eb(0x44d)][_0x51f9eb(0x3b9)](_0x55d48d), this) : this[_0x51f9eb(0x1c6)];
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x256)] = function (_0x47d65b) {
                var _0x15771c = _0x8c1820;
                return arguments['length'] ? (this['_reconnectionDelayMax'] = _0x47d65b, this['backoff'] && this['backoff'][_0x15771c(0x365)](_0x47d65b), this) : this['_reconnectionDelayMax'];
              }, _0x4eb724['prototype'][_0x8c1820(0x214)] = function (_0x60d9ba) {
                var _0x47e53e = _0x8c1820;
                return arguments[_0x47e53e(0x109)] ? (this[_0x47e53e(0x471)] = _0x60d9ba, this) : this['_timeout'];
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x371)] = function () {
                var _0x76c090 = _0x8c1820;
                !this[_0x76c090(0x2b2)] && this[_0x76c090(0x353)] && 0x0 === this[_0x76c090(0x44d)][_0x76c090(0x3a4)] && this[_0x76c090(0x1d7)]();
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x32e)] = _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x150)] = function (_0x289e4c, _0x152ecc) {
                var _0x22928d = _0x8c1820;
                if (_0x5227b3('readyState\x20%s', this[_0x22928d(0x3cd)]), ~this[_0x22928d(0x3cd)][_0x22928d(0x458)]('open')) return this;
                _0x5227b3(_0x22928d(0x274), this[_0x22928d(0x3d1)]), this[_0x22928d(0x3b0)] = _0x59ae97(this[_0x22928d(0x3d1)], this[_0x22928d(0x1c7)]);

                var _0x292f95 = this[_0x22928d(0x3b0)],
                    _0x4e64bd = this;

                this['readyState'] = _0x22928d(0x2d3), this['skipReconnect'] = !0x1;

                var _0x2d1c68 = _0x3dde3b(_0x292f95, 'open', function () {
                  var _0xc01ff = _0x22928d;
                  _0x4e64bd[_0xc01ff(0x3c3)](), _0x289e4c && _0x289e4c();
                }),
                    _0x1bdb49 = _0x3dde3b(_0x292f95, _0x22928d(0x47c), function (_0x991d4a) {
                  var _0x100c3d = _0x22928d;

                  if (_0x5227b3('connect_error'), _0x4e64bd[_0x100c3d(0x137)](), _0x4e64bd[_0x100c3d(0x3cd)] = _0x100c3d(0x189), _0x4e64bd[_0x100c3d(0x2f4)](_0x100c3d(0x117), _0x991d4a), _0x289e4c) {
                    var _0x1f001 = new Error(_0x100c3d(0x235));

                    _0x1f001[_0x100c3d(0x28e)] = _0x991d4a, _0x289e4c(_0x1f001);
                  } else _0x4e64bd[_0x100c3d(0x371)]();
                });

                if (!0x1 !== this[_0x22928d(0x471)]) {
                  var _0x541484 = this['_timeout'];
                  _0x5227b3(_0x22928d(0x201), _0x541484), 0x0 === _0x541484 && _0x2d1c68[_0x22928d(0x125)]();

                  var _0x41ae23 = setTimeout(function () {
                    var _0x5c6ad3 = _0x22928d;
                    _0x5227b3('connect\x20attempt\x20timed\x20out\x20after\x20%d', _0x541484), _0x2d1c68[_0x5c6ad3(0x125)](), _0x292f95[_0x5c6ad3(0x1b9)](), _0x292f95['emit'](_0x5c6ad3(0x47c), _0x5c6ad3(0x214)), _0x4e64bd[_0x5c6ad3(0x2f4)](_0x5c6ad3(0x4ae), _0x541484);
                  }, _0x541484);

                  this[_0x22928d(0x2e1)]['push']({
                    'destroy': function destroy() {
                      clearTimeout(_0x41ae23);
                    }
                  });
                }

                return this['subs'][_0x22928d(0x4c0)](_0x2d1c68), this[_0x22928d(0x2e1)][_0x22928d(0x4c0)](_0x1bdb49), this;
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x3c3)] = function () {
                var _0x1766c2 = _0x8c1820;
                _0x5227b3(_0x1766c2(0x32e)), this[_0x1766c2(0x137)](), this['readyState'] = _0x1766c2(0x32e), this[_0x1766c2(0x426)]('open');

                var _0x112c4c = this[_0x1766c2(0x3b0)];

                this[_0x1766c2(0x2e1)]['push'](_0x3dde3b(_0x112c4c, _0x1766c2(0x28e), _0x1f298a(this, _0x1766c2(0x432)))), this[_0x1766c2(0x2e1)][_0x1766c2(0x4c0)](_0x3dde3b(_0x112c4c, 'ping', _0x1f298a(this, _0x1766c2(0x2ac)))), this[_0x1766c2(0x2e1)][_0x1766c2(0x4c0)](_0x3dde3b(_0x112c4c, _0x1766c2(0x3ed), _0x1f298a(this, _0x1766c2(0x338)))), this[_0x1766c2(0x2e1)][_0x1766c2(0x4c0)](_0x3dde3b(_0x112c4c, _0x1766c2(0x47c), _0x1f298a(this, _0x1766c2(0x474)))), this[_0x1766c2(0x2e1)][_0x1766c2(0x4c0)](_0x3dde3b(_0x112c4c, _0x1766c2(0x1b9), _0x1f298a(this, _0x1766c2(0x2d9)))), this['subs'][_0x1766c2(0x4c0)](_0x3dde3b(this[_0x1766c2(0x115)], 'decoded', _0x1f298a(this, _0x1766c2(0x3e4))));
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x2ac)] = function () {
                var _0x46e66e = _0x8c1820;
                this['lastPing'] = new Date(), this['emitAll'](_0x46e66e(0x3e5));
              }, _0x4eb724[_0x8c1820(0x267)]['onpong'] = function () {
                var _0x13c034 = _0x8c1820;

                this[_0x13c034(0x2f4)](_0x13c034(0x3ed), new Date() - this[_0x13c034(0x35e)]);
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x432)] = function (_0x82aa8f) {
                var _0x3a3ae4 = _0x8c1820;

                this[_0x3a3ae4(0x115)][_0x3a3ae4(0x1a2)](_0x82aa8f);
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x3e4)] = function (_0x27a8b8) {
                var _0x51df4d = _0x8c1820;

                this[_0x51df4d(0x426)](_0x51df4d(0x43e), _0x27a8b8);
              }, _0x4eb724[_0x8c1820(0x267)]['onerror'] = function (_0x1494f3) {
                var _0x4eb354 = _0x8c1820;
                _0x5227b3(_0x4eb354(0x47c), _0x1494f3), this['emitAll'](_0x4eb354(0x47c), _0x1494f3);
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x154)] = function (_0x1518df, _0x837a71) {
                var _0x1f3ddf = _0x8c1820,
                    _0x13ffb4 = this[_0x1f3ddf(0x281)][_0x1518df];

                if (!_0x13ffb4) {
                  _0x13ffb4 = new _0x5e33a9(this, _0x1518df, _0x837a71), this['nsps'][_0x1518df] = _0x13ffb4;

                  var _0x46094d = this;

                  _0x13ffb4['on']('connecting', _0x2fa7c3), _0x13ffb4['on'](_0x1f3ddf(0x150), function () {
                    var _0x2e00e5 = _0x1f3ddf;
                    _0x13ffb4['id'] = _0x46094d[_0x2e00e5(0x36e)](_0x1518df);
                  }), this['autoConnect'] && _0x2fa7c3();
                }

                function _0x2fa7c3() {
                  var _0x1d5ae1 = _0x1f3ddf;
                  ~_0x252c34(_0x46094d[_0x1d5ae1(0x1a5)], _0x13ffb4) || _0x46094d['connecting']['push'](_0x13ffb4);
                }

                return _0x13ffb4;
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x125)] = function (_0x13f6a4) {
                var _0x4d6943 = _0x8c1820,
                    _0xc88cc0 = _0x252c34(this[_0x4d6943(0x1a5)], _0x13f6a4);

                ~_0xc88cc0 && this[_0x4d6943(0x1a5)][_0x4d6943(0x35b)](_0xc88cc0, 0x1), this[_0x4d6943(0x1a5)][_0x4d6943(0x109)] || this[_0x4d6943(0x1b9)]();
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x43e)] = function (_0x1c5f18) {
                var _0x28d047 = _0x8c1820;

                _0x5227b3('writing\x20packet\x20%j', _0x1c5f18);

                var _0x19d821 = this;

                _0x1c5f18[_0x28d047(0x174)] && 0x0 === _0x1c5f18[_0x28d047(0x1bd)] && (_0x1c5f18['nsp'] += '?' + _0x1c5f18[_0x28d047(0x174)]), _0x19d821[_0x28d047(0x2bd)] ? _0x19d821[_0x28d047(0x4b9)][_0x28d047(0x4c0)](_0x1c5f18) : (_0x19d821['encoding'] = !0x0, this[_0x28d047(0x2ea)][_0x28d047(0x2bf)](_0x1c5f18, function (_0x1f111c) {
                  var _0x1050cf = _0x28d047;

                  for (var _0x508401 = 0x0; _0x508401 < _0x1f111c[_0x1050cf(0x109)]; _0x508401++) _0x19d821[_0x1050cf(0x3b0)]['write'](_0x1f111c[_0x508401], _0x1c5f18[_0x1050cf(0x342)]);

                  _0x19d821[_0x1050cf(0x2bd)] = !0x1, _0x19d821[_0x1050cf(0x307)]();
                }));
              }, _0x4eb724['prototype'][_0x8c1820(0x307)] = function () {
                var _0x5af8f2 = _0x8c1820;

                if (this[_0x5af8f2(0x4b9)][_0x5af8f2(0x109)] > 0x0 && !this[_0x5af8f2(0x2bd)]) {
                  var _0x1714d2 = this[_0x5af8f2(0x4b9)][_0x5af8f2(0x44e)]();

                  this['packet'](_0x1714d2);
                }
              }, _0x4eb724[_0x8c1820(0x267)][_0x8c1820(0x137)] = function () {
                var _0x37931f = _0x8c1820;

                _0x5227b3(_0x37931f(0x137));

                for (var _0x22aab0 = this[_0x37931f(0x2e1)][_0x37931f(0x109)], _0x14ce15 = 0x0; _0x14ce15 < _0x22aab0; _0x14ce15++) this[_0x37931f(0x2e1)][_0x37931f(0x44e)]()[_0x37931f(0x125)]();

                this[_0x37931f(0x4b9)] = [], this[_0x37931f(0x2bd)] = !0x1, this[_0x37931f(0x35e)] = null, this[_0x37931f(0x115)]['destroy']();
              }, _0x4eb724[_0x8c1820(0x267)]['close'] = _0x4eb724['prototype']['disconnect'] = function () {
                var _0x25191f = _0x8c1820;
                _0x5227b3('disconnect'), this[_0x25191f(0x4c8)] = !0x0, this[_0x25191f(0x2b2)] = !0x1, _0x25191f(0x2d3) === this[_0x25191f(0x3cd)] && this['cleanup'](), this[_0x25191f(0x44d)][_0x25191f(0x3ea)](), this[_0x25191f(0x3cd)] = _0x25191f(0x189), this[_0x25191f(0x3b0)] && this[_0x25191f(0x3b0)][_0x25191f(0x1b9)]();
              }, _0x4eb724[_0x8c1820(0x267)]['onclose'] = function (_0x23796f) {
                var _0x2002db = _0x8c1820;
                _0x5227b3(_0x2002db(0x2d9)), this[_0x2002db(0x137)](), this[_0x2002db(0x44d)]['reset'](), this['readyState'] = _0x2002db(0x189), this[_0x2002db(0x426)]('close', _0x23796f), this[_0x2002db(0x353)] && !this[_0x2002db(0x4c8)] && this[_0x2002db(0x1d7)]();
              }, _0x4eb724['prototype'][_0x8c1820(0x1d7)] = function () {
                var _0x2ce44d = _0x8c1820;
                if (this[_0x2ce44d(0x2b2)] || this[_0x2ce44d(0x4c8)]) return this;

                var _0x4c6080 = this;

                if (this[_0x2ce44d(0x44d)]['attempts'] >= this['_reconnectionAttempts']) _0x5227b3(_0x2ce44d(0x276)), this[_0x2ce44d(0x44d)]['reset'](), this[_0x2ce44d(0x2f4)](_0x2ce44d(0x272)), this['reconnecting'] = !0x1;else {
                  var _0x213f4 = this[_0x2ce44d(0x44d)][_0x2ce44d(0x16e)]();

                  _0x5227b3(_0x2ce44d(0x39d), _0x213f4), this[_0x2ce44d(0x2b2)] = !0x0;

                  var _0x329f51 = setTimeout(function () {
                    var _0xa37bde = _0x2ce44d;
                    _0x4c6080['skipReconnect'] || (_0x5227b3('attempting\x20reconnect'), _0x4c6080[_0xa37bde(0x2f4)](_0xa37bde(0x3fe), _0x4c6080['backoff']['attempts']), _0x4c6080[_0xa37bde(0x2f4)](_0xa37bde(0x2b2), _0x4c6080[_0xa37bde(0x44d)][_0xa37bde(0x3a4)]), _0x4c6080[_0xa37bde(0x4c8)] || _0x4c6080['open'](function (_0x18dde7) {
                      var _0x350f74 = _0xa37bde;
                      _0x18dde7 ? (_0x5227b3(_0x350f74(0x40e)), _0x4c6080[_0x350f74(0x2b2)] = !0x1, _0x4c6080['reconnect'](), _0x4c6080[_0x350f74(0x2f4)]('reconnect_error', _0x18dde7[_0x350f74(0x28e)])) : (_0x5227b3(_0x350f74(0x2f3)), _0x4c6080[_0x350f74(0x2de)]());
                    }));
                  }, _0x213f4);

                  this['subs']['push']({
                    'destroy': function destroy() {
                      clearTimeout(_0x329f51);
                    }
                  });
                }
              }, _0x4eb724[_0x8c1820(0x267)]['onreconnect'] = function () {
                var _0x4deaf7 = _0x8c1820,
                    _0x37b28e = this[_0x4deaf7(0x44d)]['attempts'];

                this[_0x4deaf7(0x2b2)] = !0x1, this[_0x4deaf7(0x44d)][_0x4deaf7(0x3ea)](), this[_0x4deaf7(0x3a7)](), this[_0x4deaf7(0x2f4)](_0x4deaf7(0x1d7), _0x37b28e);
              };
            },
            0x1558: function _(_0x4eda9d) {
              var _0x33291c = a1_0x1adc;

              _0x4eda9d[_0x33291c(0x10f)] = function (_0x5361e8, _0x71cf34, _0xeda576) {
                return _0x5361e8['on'](_0x71cf34, _0xeda576), {
                  'destroy': function destroy() {
                    _0x5361e8['removeListener'](_0x71cf34, _0xeda576);
                  }
                };
              };
            },
            0x2188: function _(_0x5d07f6, _0x36a67c, _0x3987c6) {
              var _0x13d44d = a1_0x1adc,
                  _0x3fe434 = _0x3987c6(0x2399),
                  _0x50996a = _0x3987c6(0x223f),
                  _0x975a0f = _0x3987c6(0xfca),
                  _0x139387 = _0x3987c6(0x1558),
                  _0x2c970e = _0x3987c6(0x17bd),
                  _0x3ef945 = _0x3987c6(0x4cb)(_0x13d44d(0x172)),
                  _0x9ca317 = _0x3987c6(0x726),
                  _0x6a7d7c = _0x3987c6(0xd8a);

              _0x5d07f6[_0x13d44d(0x10f)] = _0x2eee5a;

              var _0x2bd7d2 = {
                'connect': 0x1,
                'connect_error': 0x1,
                'connect_timeout': 0x1,
                'connecting': 0x1,
                'disconnect': 0x1,
                'error': 0x1,
                'reconnect': 0x1,
                'reconnect_attempt': 0x1,
                'reconnect_failed': 0x1,
                'reconnect_error': 0x1,
                'reconnecting': 0x1,
                'ping': 0x1,
                'pong': 0x1
              },
                  _0x5138d4 = _0x50996a[_0x13d44d(0x267)][_0x13d44d(0x426)];

              function _0x2eee5a(_0x5caa6f, _0x1aaeea, _0x15789d) {
                var _0x4b6e87 = _0x13d44d;
                this['io'] = _0x5caa6f, this[_0x4b6e87(0x1c2)] = _0x1aaeea, this[_0x4b6e87(0x355)] = this, this[_0x4b6e87(0x2a4)] = 0x0, this[_0x4b6e87(0x312)] = {}, this[_0x4b6e87(0x374)] = [], this[_0x4b6e87(0x23b)] = [], this[_0x4b6e87(0x1d0)] = !0x1, this[_0x4b6e87(0x4a2)] = !0x0, this['flags'] = {}, _0x15789d && _0x15789d['query'] && (this[_0x4b6e87(0x174)] = _0x15789d[_0x4b6e87(0x174)]), this['io'][_0x4b6e87(0x3ee)] && this['open']();
              }

              _0x50996a(_0x2eee5a['prototype']), _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x3a9)] = function () {
                var _0x3ddf93 = _0x13d44d;

                if (!this[_0x3ddf93(0x2e1)]) {
                  var _0x3ba531 = this['io'];
                  this[_0x3ddf93(0x2e1)] = [_0x139387(_0x3ba531, 'open', _0x2c970e(this, _0x3ddf93(0x3c3))), _0x139387(_0x3ba531, _0x3ddf93(0x43e), _0x2c970e(this, _0x3ddf93(0x145))), _0x139387(_0x3ba531, _0x3ddf93(0x1b9), _0x2c970e(this, _0x3ddf93(0x2d9)))];
                }
              }, _0x2eee5a[_0x13d44d(0x267)]['open'] = _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x150)] = function () {
                var _0x425c8e = _0x13d44d;
                return this[_0x425c8e(0x1d0)] || (this['subEvents'](), this['io']['reconnecting'] || this['io']['open'](), _0x425c8e(0x32e) === this['io'][_0x425c8e(0x3cd)] && this[_0x425c8e(0x3c3)](), this[_0x425c8e(0x426)](_0x425c8e(0x1a5))), this;
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x362)] = function () {
                var _0x496e70 = _0x13d44d,
                    _0x1267e3 = _0x975a0f(arguments);

                return _0x1267e3[_0x496e70(0x2f6)](_0x496e70(0x1cd)), this[_0x496e70(0x426)][_0x496e70(0x148)](this, _0x1267e3), this;
              }, _0x2eee5a[_0x13d44d(0x267)]['emit'] = function (_0x2b28ad) {
                var _0x2dde3f = _0x13d44d;
                if (_0x2bd7d2[_0x2dde3f(0x19c)](_0x2b28ad)) return _0x5138d4['apply'](this, arguments), this;

                var _0xdcd193 = _0x975a0f(arguments),
                    _0x438c2b = {
                  'type': (void 0x0 !== this['flags'][_0x2dde3f(0x173)] ? this[_0x2dde3f(0x16f)][_0x2dde3f(0x173)] : _0x6a7d7c(_0xdcd193)) ? _0x3fe434['BINARY_EVENT'] : _0x3fe434['EVENT'],
                  'data': _0xdcd193,
                  'options': {}
                };

                return _0x438c2b['options'][_0x2dde3f(0x3d2)] = !this['flags'] || !0x1 !== this[_0x2dde3f(0x16f)]['compress'], _0x2dde3f(0x23a) == typeof _0xdcd193[_0xdcd193[_0x2dde3f(0x109)] - 0x1] && (_0x3ef945('emitting\x20packet\x20with\x20ack\x20id\x20%d', this['ids']), this[_0x2dde3f(0x312)][this['ids']] = _0xdcd193[_0x2dde3f(0x40a)](), _0x438c2b['id'] = this[_0x2dde3f(0x2a4)]++), this[_0x2dde3f(0x1d0)] ? this[_0x2dde3f(0x43e)](_0x438c2b) : this[_0x2dde3f(0x23b)][_0x2dde3f(0x4c0)](_0x438c2b), this[_0x2dde3f(0x16f)] = {}, this;
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x43e)] = function (_0x970380) {
                var _0x8955f = _0x13d44d;
                _0x970380['nsp'] = this[_0x8955f(0x1c2)], this['io'][_0x8955f(0x43e)](_0x970380);
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x3c3)] = function () {
                var _0x825a21 = _0x13d44d;

                if (_0x3ef945(_0x825a21(0x225)), '/' !== this[_0x825a21(0x1c2)]) {
                  if (this[_0x825a21(0x174)]) {
                    var _0x21538a = _0x825a21(0x26e) == typeof this['query'] ? _0x9ca317[_0x825a21(0x2bf)](this[_0x825a21(0x174)]) : this['query'];

                    _0x3ef945('sending\x20connect\x20packet\x20with\x20query\x20%s', _0x21538a), this['packet']({
                      'type': _0x3fe434['CONNECT'],
                      'query': _0x21538a
                    });
                  } else this[_0x825a21(0x43e)]({
                    'type': _0x3fe434[_0x825a21(0x339)]
                  });
                }
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x2d9)] = function (_0x171989) {
                var _0x1de7b4 = _0x13d44d;
                _0x3ef945(_0x1de7b4(0x237), _0x171989), this[_0x1de7b4(0x1d0)] = !0x1, this[_0x1de7b4(0x4a2)] = !0x0, delete this['id'], this['emit'](_0x1de7b4(0x2db), _0x171989);
              }, _0x2eee5a['prototype'][_0x13d44d(0x145)] = function (_0x472ab7) {
                var _0x123d28 = _0x13d44d,
                    _0x1bc487 = _0x472ab7[_0x123d28(0x1c2)] === this[_0x123d28(0x1c2)],
                    _0xef5c3b = _0x472ab7[_0x123d28(0x1bd)] === _0x3fe434[_0x123d28(0x28c)] && '/' === _0x472ab7['nsp'];

                if (_0x1bc487 || _0xef5c3b) switch (_0x472ab7[_0x123d28(0x1bd)]) {
                  case _0x3fe434[_0x123d28(0x339)]:
                    this['onconnect']();
                    break;

                  case _0x3fe434['EVENT']:
                  case _0x3fe434[_0x123d28(0x127)]:
                    this[_0x123d28(0x1c5)](_0x472ab7);

                    break;

                  case _0x3fe434[_0x123d28(0x186)]:
                  case _0x3fe434[_0x123d28(0x14f)]:
                    this['onack'](_0x472ab7);
                    break;

                  case _0x3fe434[_0x123d28(0x3c0)]:
                    this['ondisconnect']();
                    break;

                  case _0x3fe434[_0x123d28(0x28c)]:
                    this[_0x123d28(0x426)](_0x123d28(0x47c), _0x472ab7[_0x123d28(0x28e)]);

                }
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x1c5)] = function (_0x554c9a) {
                var _0xee9a93 = _0x13d44d,
                    _0x2c5338 = _0x554c9a[_0xee9a93(0x28e)] || [];

                _0x3ef945(_0xee9a93(0x497), _0x2c5338), null != _0x554c9a['id'] && (_0x3ef945('attaching\x20ack\x20callback\x20to\x20event'), _0x2c5338['push'](this[_0xee9a93(0x304)](_0x554c9a['id']))), this[_0xee9a93(0x1d0)] ? _0x5138d4[_0xee9a93(0x148)](this, _0x2c5338) : this[_0xee9a93(0x374)][_0xee9a93(0x4c0)](_0x2c5338);
              }, _0x2eee5a[_0x13d44d(0x267)]['ack'] = function (_0x3b7ae9) {
                var _0x17aa23 = this,
                    _0x3072f4 = !0x1;

                return function () {
                  var _0x3a79a2 = a1_0x1adc;

                  if (!_0x3072f4) {
                    _0x3072f4 = !0x0;

                    var _0x2df1f8 = _0x975a0f(arguments);

                    _0x3ef945('sending\x20ack\x20%j', _0x2df1f8), _0x17aa23[_0x3a79a2(0x43e)]({
                      'type': _0x6a7d7c(_0x2df1f8) ? _0x3fe434[_0x3a79a2(0x14f)] : _0x3fe434['ACK'],
                      'id': _0x3b7ae9,
                      'data': _0x2df1f8
                    });
                  }
                };
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x122)] = function (_0xaf3cd8) {
                var _0x2d2f4e = _0x13d44d,
                    _0x407cfb = this[_0x2d2f4e(0x312)][_0xaf3cd8['id']];

                _0x2d2f4e(0x23a) == typeof _0x407cfb ? (_0x3ef945(_0x2d2f4e(0x1e7), _0xaf3cd8['id'], _0xaf3cd8['data']), _0x407cfb['apply'](this, _0xaf3cd8[_0x2d2f4e(0x28e)]), delete this[_0x2d2f4e(0x312)][_0xaf3cd8['id']]) : _0x3ef945(_0x2d2f4e(0x1e5), _0xaf3cd8['id']);
              }, _0x2eee5a[_0x13d44d(0x267)]['onconnect'] = function () {
                var _0x10a155 = _0x13d44d;
                this['connected'] = !0x0, this[_0x10a155(0x4a2)] = !0x1, this[_0x10a155(0x1da)](), this[_0x10a155(0x426)]('connect');
              }, _0x2eee5a[_0x13d44d(0x267)]['emitBuffered'] = function () {
                var _0x578d6b = _0x13d44d,
                    _0x14413b;

                for (_0x14413b = 0x0; _0x14413b < this[_0x578d6b(0x374)][_0x578d6b(0x109)]; _0x14413b++) _0x5138d4[_0x578d6b(0x148)](this, this['receiveBuffer'][_0x14413b]);

                for (this[_0x578d6b(0x374)] = [], _0x14413b = 0x0; _0x14413b < this['sendBuffer'][_0x578d6b(0x109)]; _0x14413b++) this[_0x578d6b(0x43e)](this[_0x578d6b(0x23b)][_0x14413b]);

                this['sendBuffer'] = [];
              }, _0x2eee5a['prototype'][_0x13d44d(0x427)] = function () {
                var _0x4fa275 = _0x13d44d;
                _0x3ef945(_0x4fa275(0x1f4), this['nsp']), this[_0x4fa275(0x125)](), this[_0x4fa275(0x2d9)](_0x4fa275(0x3e2));
              }, _0x2eee5a['prototype'][_0x13d44d(0x125)] = function () {
                var _0xa0141 = _0x13d44d;

                if (this[_0xa0141(0x2e1)]) {
                  for (var _0x4890cb = 0x0; _0x4890cb < this[_0xa0141(0x2e1)][_0xa0141(0x109)]; _0x4890cb++) this['subs'][_0x4890cb][_0xa0141(0x125)]();

                  this[_0xa0141(0x2e1)] = null;
                }

                this['io']['destroy'](this);
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x1b9)] = _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x2db)] = function () {
                var _0x41b79b = _0x13d44d;
                return this[_0x41b79b(0x1d0)] && (_0x3ef945(_0x41b79b(0x449), this[_0x41b79b(0x1c2)]), this[_0x41b79b(0x43e)]({
                  'type': _0x3fe434[_0x41b79b(0x3c0)]
                })), this[_0x41b79b(0x125)](), this['connected'] && this[_0x41b79b(0x2d9)](_0x41b79b(0x4bc)), this;
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x3d2)] = function (_0x305081) {
                return this['flags']['compress'] = _0x305081, this;
              }, _0x2eee5a[_0x13d44d(0x267)][_0x13d44d(0x173)] = function (_0x25d8a5) {
                var _0x11f4e0 = _0x13d44d;
                return this[_0x11f4e0(0x16f)]['binary'] = _0x25d8a5, this;
              };
            },
            0xe5e: function _(_0x152b6b, _0x233e28, _0x1ef729) {
              var _0x358d99 = a1_0x1adc,
                  _0x594b6d = _0x1ef729(0x105b),
                  _0x22ae44 = _0x1ef729(0x4cb)(_0x358d99(0x182));

              _0x152b6b[_0x358d99(0x10f)] = function (_0x3bfadc, _0x522ad8) {
                var _0x3694b1 = _0x358d99,
                    _0x590713 = _0x3bfadc;
                _0x522ad8 = _0x522ad8 || 'undefined' != typeof location && location, null == _0x3bfadc && (_0x3bfadc = _0x522ad8[_0x3694b1(0x280)] + '//' + _0x522ad8['host']), 'string' == typeof _0x3bfadc && ('/' === _0x3bfadc[_0x3694b1(0x382)](0x0) && (_0x3bfadc = '/' === _0x3bfadc[_0x3694b1(0x382)](0x1) ? _0x522ad8['protocol'] + _0x3bfadc : _0x522ad8[_0x3694b1(0x4a9)] + _0x3bfadc), /^(https?|wss?):\/\//[_0x3694b1(0x4cc)](_0x3bfadc) || (_0x22ae44(_0x3694b1(0x155), _0x3bfadc), _0x3bfadc = void 0x0 !== _0x522ad8 ? _0x522ad8[_0x3694b1(0x280)] + '//' + _0x3bfadc : _0x3694b1(0x480) + _0x3bfadc), _0x22ae44(_0x3694b1(0x2a6), _0x3bfadc), _0x590713 = _0x594b6d(_0x3bfadc)), _0x590713[_0x3694b1(0x226)] || (/^(http|ws)$/['test'](_0x590713[_0x3694b1(0x280)]) ? _0x590713['port'] = '80' : /^(http|ws)s$/[_0x3694b1(0x4cc)](_0x590713[_0x3694b1(0x280)]) && (_0x590713[_0x3694b1(0x226)] = '443')), _0x590713[_0x3694b1(0x1c3)] = _0x590713['path'] || '/';

                var _0x23611b = -0x1 !== _0x590713[_0x3694b1(0x4a9)]['indexOf'](':') ? '[' + _0x590713[_0x3694b1(0x4a9)] + ']' : _0x590713[_0x3694b1(0x4a9)];

                return _0x590713['id'] = _0x590713[_0x3694b1(0x280)] + _0x3694b1(0x34e) + _0x23611b + ':' + _0x590713[_0x3694b1(0x226)], _0x590713[_0x3694b1(0x198)] = _0x590713[_0x3694b1(0x280)] + _0x3694b1(0x34e) + _0x23611b + (_0x522ad8 && _0x522ad8[_0x3694b1(0x226)] === _0x590713[_0x3694b1(0x226)] ? '' : ':' + _0x590713[_0x3694b1(0x226)]), _0x590713;
              };
            },
            0x916: function _(_0x422ac5, _0x4fc5a5, _0x5e1ae9) {
              var _0x1c92f8 = a1_0x1adc,
                  _0x14dc52 = _0x5e1ae9(0x16c2),
                  _0x40a77c = _0x5e1ae9(0x17b2),
                  _0x520111 = Object[_0x1c92f8(0x267)]['toString'],
                  _0x333293 = _0x1c92f8(0x23a) == typeof Blob || 'undefined' != typeof Blob && _0x1c92f8(0x177) === _0x520111['call'](Blob),
                  _0x379551 = _0x1c92f8(0x23a) == typeof File || _0x1c92f8(0x121) != typeof File && _0x1c92f8(0x195) === _0x520111[_0x1c92f8(0x20b)](File);

              function _0x2eb70d(_0x5bd07c, _0x1f7b32) {
                var _0xfdf7a5 = _0x1c92f8;
                if (!_0x5bd07c) return _0x5bd07c;

                if (_0x40a77c(_0x5bd07c)) {
                  var _0xdb1e49 = {
                    '_placeholder': !0x0,
                    'num': _0x1f7b32['length']
                  };
                  return _0x1f7b32[_0xfdf7a5(0x4c0)](_0x5bd07c), _0xdb1e49;
                }

                if (_0x14dc52(_0x5bd07c)) {
                  for (var _0x372fa0 = new Array(_0x5bd07c[_0xfdf7a5(0x109)]), _0x4ce820 = 0x0; _0x4ce820 < _0x5bd07c[_0xfdf7a5(0x109)]; _0x4ce820++) _0x372fa0[_0x4ce820] = _0x2eb70d(_0x5bd07c[_0x4ce820], _0x1f7b32);

                  return _0x372fa0;
                }

                if (_0xfdf7a5(0x26e) == typeof _0x5bd07c && !(_0x5bd07c instanceof Date)) {
                  for (var _0x42bc57 in _0x372fa0 = {}, _0x5bd07c) _0x372fa0[_0x42bc57] = _0x2eb70d(_0x5bd07c[_0x42bc57], _0x1f7b32);

                  return _0x372fa0;
                }

                return _0x5bd07c;
              }

              function _0x1cd3e5(_0x1ab2d4, _0x5afa15) {
                var _0x39a058 = _0x1c92f8;
                if (!_0x1ab2d4) return _0x1ab2d4;
                if (_0x1ab2d4 && _0x1ab2d4[_0x39a058(0x29e)]) return _0x5afa15[_0x1ab2d4[_0x39a058(0x3d6)]];

                if (_0x14dc52(_0x1ab2d4)) {
                  for (var _0x43447b = 0x0; _0x43447b < _0x1ab2d4[_0x39a058(0x109)]; _0x43447b++) _0x1ab2d4[_0x43447b] = _0x1cd3e5(_0x1ab2d4[_0x43447b], _0x5afa15);
                } else {
                  if (_0x39a058(0x26e) == typeof _0x1ab2d4) {
                    for (var _0x3d7925 in _0x1ab2d4) _0x1ab2d4[_0x3d7925] = _0x1cd3e5(_0x1ab2d4[_0x3d7925], _0x5afa15);
                  }
                }

                return _0x1ab2d4;
              }

              _0x4fc5a5[_0x1c92f8(0x47d)] = function (_0xa8c03b) {
                var _0x4c828c = _0x1c92f8,
                    _0x1d1ea1 = [],
                    _0x6bea8d = _0xa8c03b[_0x4c828c(0x28e)],
                    _0x45645a = _0xa8c03b;

                return _0x45645a[_0x4c828c(0x28e)] = _0x2eb70d(_0x6bea8d, _0x1d1ea1), _0x45645a[_0x4c828c(0x2d0)] = _0x1d1ea1['length'], {
                  'packet': _0x45645a,
                  'buffers': _0x1d1ea1
                };
              }, _0x4fc5a5[_0x1c92f8(0x170)] = function (_0x24087f, _0x4a4b97) {
                var _0x4ab6d7 = _0x1c92f8;
                return _0x24087f[_0x4ab6d7(0x28e)] = _0x1cd3e5(_0x24087f['data'], _0x4a4b97), _0x24087f[_0x4ab6d7(0x2d0)] = void 0x0, _0x24087f;
              }, _0x4fc5a5[_0x1c92f8(0x3d4)] = function (_0x40c51f, _0x5b013d) {
                var _0x4512f0 = 0x0,
                    _0x222af9 = _0x40c51f;
                !function _0x4f0070(_0x2ee6d8, _0x54b449, _0x415040) {
                  var _0x55ff72 = a1_0x1adc;
                  if (!_0x2ee6d8) return _0x2ee6d8;

                  if (_0x333293 && _0x2ee6d8 instanceof Blob || _0x379551 && _0x2ee6d8 instanceof File) {
                    _0x4512f0++;

                    var _0xb50b43 = new FileReader();

                    _0xb50b43[_0x55ff72(0x2ff)] = function () {
                      var _0x5c4439 = _0x55ff72;
                      _0x415040 ? _0x415040[_0x54b449] = this[_0x5c4439(0x249)] : _0x222af9 = this['result'], --_0x4512f0 || _0x5b013d(_0x222af9);
                    }, _0xb50b43[_0x55ff72(0x31e)](_0x2ee6d8);
                  } else {
                    if (_0x14dc52(_0x2ee6d8)) {
                      for (var _0x551351 = 0x0; _0x551351 < _0x2ee6d8[_0x55ff72(0x109)]; _0x551351++) _0x4f0070(_0x2ee6d8[_0x551351], _0x551351, _0x2ee6d8);
                    } else {
                      if (_0x55ff72(0x26e) == typeof _0x2ee6d8 && !_0x40a77c(_0x2ee6d8)) {
                        for (var _0x21466 in _0x2ee6d8) _0x4f0070(_0x2ee6d8[_0x21466], _0x21466, _0x2ee6d8);
                      }
                    }
                  }
                }(_0x222af9), _0x4512f0 || _0x5b013d(_0x222af9);
              };
            },
            0x2399: function _(_0x1a4bd5, _0x1a3d8d, _0x198cb6) {
              var _0x533fd4 = a1_0x1adc,
                  _0x168972 = _0x198cb6(0x4cb)('socket.io-parser'),
                  _0x400537 = _0x198cb6(0x223f),
                  _0x2da54f = _0x198cb6(0x916),
                  _0x3105d5 = _0x198cb6(0x16c2),
                  _0x354716 = _0x198cb6(0x17b2);

              function _0x3eddb2() {}

              _0x1a3d8d['protocol'] = 0x4, _0x1a3d8d[_0x533fd4(0x128)] = [_0x533fd4(0x339), _0x533fd4(0x3c0), _0x533fd4(0x3b7), _0x533fd4(0x186), _0x533fd4(0x28c), _0x533fd4(0x127), _0x533fd4(0x14f)], _0x1a3d8d[_0x533fd4(0x339)] = 0x0, _0x1a3d8d[_0x533fd4(0x3c0)] = 0x1, _0x1a3d8d[_0x533fd4(0x3b7)] = 0x2, _0x1a3d8d[_0x533fd4(0x186)] = 0x3, _0x1a3d8d[_0x533fd4(0x28c)] = 0x4, _0x1a3d8d[_0x533fd4(0x127)] = 0x5, _0x1a3d8d[_0x533fd4(0x14f)] = 0x6, _0x1a3d8d[_0x533fd4(0x15c)] = _0x3eddb2, _0x1a3d8d[_0x533fd4(0x4b7)] = _0x4142fd;

              var _0x564f3e = _0x1a3d8d[_0x533fd4(0x28c)] + _0x533fd4(0x35c);

              function _0x1393d6(_0x2eb883) {
                var _0x40f971 = _0x533fd4,
                    _0x4c18c2 = '' + _0x2eb883[_0x40f971(0x1bd)];

                if (_0x1a3d8d['BINARY_EVENT'] !== _0x2eb883[_0x40f971(0x1bd)] && _0x1a3d8d[_0x40f971(0x14f)] !== _0x2eb883[_0x40f971(0x1bd)] || (_0x4c18c2 += _0x2eb883[_0x40f971(0x2d0)] + '-'), _0x2eb883[_0x40f971(0x1c2)] && '/' !== _0x2eb883['nsp'] && (_0x4c18c2 += _0x2eb883['nsp'] + ','), null != _0x2eb883['id'] && (_0x4c18c2 += _0x2eb883['id']), null != _0x2eb883['data']) {
                  var _0x4d3a30 = function (_0x5dd351) {
                    var _0x46aba8 = _0x40f971;

                    try {
                      return JSON[_0x46aba8(0x2eb)](_0x5dd351);
                    } catch (_0x56842b) {
                      return !0x1;
                    }
                  }(_0x2eb883[_0x40f971(0x28e)]);

                  if (!0x1 === _0x4d3a30) return _0x564f3e;
                  _0x4c18c2 += _0x4d3a30;
                }

                return _0x168972('encoded\x20%j\x20as\x20%s', _0x2eb883, _0x4c18c2), _0x4c18c2;
              }

              function _0x4142fd() {
                var _0x99d03a = _0x533fd4;
                this[_0x99d03a(0x3b5)] = null;
              }

              function _0x227a54(_0x49d68a) {
                var _0x1de7e0 = _0x533fd4;
                this['reconPack'] = _0x49d68a, this[_0x1de7e0(0x3b8)] = [];
              }

              function _0x470f0a(_0x290fa4) {
                var _0x58938f = _0x533fd4;
                return {
                  'type': _0x1a3d8d[_0x58938f(0x28c)],
                  'data': _0x58938f(0x3c1) + _0x290fa4
                };
              }

              _0x3eddb2[_0x533fd4(0x267)][_0x533fd4(0x2bf)] = function (_0x4a29f5, _0x3045cf) {
                var _0x5d5e1e = _0x533fd4;
                _0x168972(_0x5d5e1e(0x311), _0x4a29f5), _0x1a3d8d[_0x5d5e1e(0x127)] === _0x4a29f5[_0x5d5e1e(0x1bd)] || _0x1a3d8d[_0x5d5e1e(0x14f)] === _0x4a29f5[_0x5d5e1e(0x1bd)] ? function (_0x373ecd, _0x2a6fec) {
                  var _0x477edd = _0x5d5e1e;

                  _0x2da54f[_0x477edd(0x3d4)](_0x373ecd, function (_0x83d327) {
                    var _0x11fb89 = _0x477edd,
                        _0x5905ba = _0x2da54f[_0x11fb89(0x47d)](_0x83d327),
                        _0x33a637 = _0x1393d6(_0x5905ba[_0x11fb89(0x43e)]),
                        _0x2e9238 = _0x5905ba[_0x11fb89(0x3b8)];

                    _0x2e9238[_0x11fb89(0x2f6)](_0x33a637), _0x2a6fec(_0x2e9238);
                  });
                }(_0x4a29f5, _0x3045cf) : _0x3045cf([_0x1393d6(_0x4a29f5)]);
              }, _0x400537(_0x4142fd[_0x533fd4(0x267)]), _0x4142fd[_0x533fd4(0x267)][_0x533fd4(0x1a2)] = function (_0x220f8f) {
                var _0x511fb6 = _0x533fd4,
                    _0x4061e6;

                if ('string' == typeof _0x220f8f) _0x4061e6 = function (_0x33ca06) {
                  var _0x514bbb = a1_0x1adc,
                      _0x1d3e0b = 0x0,
                      _0x36f6b6 = {
                    'type': Number(_0x33ca06[_0x514bbb(0x382)](0x0))
                  };
                  if (null == _0x1a3d8d[_0x514bbb(0x128)][_0x36f6b6[_0x514bbb(0x1bd)]]) return _0x470f0a('unknown\x20packet\x20type\x20' + _0x36f6b6[_0x514bbb(0x1bd)]);

                  if (_0x1a3d8d[_0x514bbb(0x127)] === _0x36f6b6['type'] || _0x1a3d8d[_0x514bbb(0x14f)] === _0x36f6b6[_0x514bbb(0x1bd)]) {
                    for (var _0x37b0af = _0x1d3e0b + 0x1; '-' !== _0x33ca06['charAt'](++_0x1d3e0b) && _0x1d3e0b != _0x33ca06['length'];);

                    var _0x586d14 = _0x33ca06[_0x514bbb(0x495)](_0x37b0af, _0x1d3e0b);

                    if (_0x586d14 != Number(_0x586d14) || '-' !== _0x33ca06['charAt'](_0x1d3e0b)) throw new Error(_0x514bbb(0x409));
                    _0x36f6b6['attachments'] = Number(_0x586d14);
                  }

                  if ('/' === _0x33ca06[_0x514bbb(0x382)](_0x1d3e0b + 0x1)) {
                    for (_0x37b0af = _0x1d3e0b + 0x1; ++_0x1d3e0b && ',' !== (_0x1ff8fb = _0x33ca06['charAt'](_0x1d3e0b)) && _0x1d3e0b !== _0x33ca06[_0x514bbb(0x109)];);

                    _0x36f6b6[_0x514bbb(0x1c2)] = _0x33ca06[_0x514bbb(0x495)](_0x37b0af, _0x1d3e0b);
                  } else _0x36f6b6[_0x514bbb(0x1c2)] = '/';

                  var _0x5385cb = _0x33ca06[_0x514bbb(0x382)](_0x1d3e0b + 0x1);

                  if ('' !== _0x5385cb && Number(_0x5385cb) == _0x5385cb) {
                    for (_0x37b0af = _0x1d3e0b + 0x1; ++_0x1d3e0b;) {
                      var _0x1ff8fb;

                      if (null == (_0x1ff8fb = _0x33ca06['charAt'](_0x1d3e0b)) || Number(_0x1ff8fb) != _0x1ff8fb) {
                        --_0x1d3e0b;
                        break;
                      }

                      if (_0x1d3e0b === _0x33ca06[_0x514bbb(0x109)]) break;
                    }

                    _0x36f6b6['id'] = Number(_0x33ca06['substring'](_0x37b0af, _0x1d3e0b + 0x1));
                  }

                  if (_0x33ca06[_0x514bbb(0x382)](++_0x1d3e0b)) {
                    var _0x4b10f6 = function (_0x343c7d) {
                      var _0x436fab = _0x514bbb;

                      try {
                        return JSON[_0x436fab(0x41c)](_0x343c7d);
                      } catch (_0x1659ca) {
                        return !0x1;
                      }
                    }(_0x33ca06[_0x514bbb(0x1ba)](_0x1d3e0b));

                    if (!0x1 === _0x4b10f6 || _0x36f6b6[_0x514bbb(0x1bd)] !== _0x1a3d8d[_0x514bbb(0x28c)] && !_0x3105d5(_0x4b10f6)) return _0x470f0a('invalid\x20payload');
                    _0x36f6b6[_0x514bbb(0x28e)] = _0x4b10f6;
                  }

                  return _0x168972(_0x514bbb(0x26c), _0x33ca06, _0x36f6b6), _0x36f6b6;
                }(_0x220f8f), _0x1a3d8d['BINARY_EVENT'] === _0x4061e6['type'] || _0x1a3d8d[_0x511fb6(0x14f)] === _0x4061e6[_0x511fb6(0x1bd)] ? (this['reconstructor'] = new _0x227a54(_0x4061e6), 0x0 === this[_0x511fb6(0x3b5)]['reconPack'][_0x511fb6(0x2d0)] && this[_0x511fb6(0x426)](_0x511fb6(0x473), _0x4061e6)) : this[_0x511fb6(0x426)](_0x511fb6(0x473), _0x4061e6);else {
                  if (!_0x354716(_0x220f8f) && !_0x220f8f[_0x511fb6(0x49c)]) throw new Error('Unknown\x20type:\x20' + _0x220f8f);
                  if (!this['reconstructor']) throw new Error(_0x511fb6(0x356));
                  (_0x4061e6 = this['reconstructor']['takeBinaryData'](_0x220f8f)) && (this[_0x511fb6(0x3b5)] = null, this[_0x511fb6(0x426)](_0x511fb6(0x473), _0x4061e6));
                }
              }, _0x4142fd[_0x533fd4(0x267)][_0x533fd4(0x125)] = function () {
                var _0x548662 = _0x533fd4;
                this[_0x548662(0x3b5)] && this[_0x548662(0x3b5)]['finishedReconstruction']();
              }, _0x227a54[_0x533fd4(0x267)][_0x533fd4(0x2b9)] = function (_0x1874b2) {
                var _0x31e639 = _0x533fd4;

                if (this[_0x31e639(0x3b8)][_0x31e639(0x4c0)](_0x1874b2), this[_0x31e639(0x3b8)][_0x31e639(0x109)] === this[_0x31e639(0x11e)][_0x31e639(0x2d0)]) {
                  var _0x2aa5e5 = _0x2da54f[_0x31e639(0x170)](this[_0x31e639(0x11e)], this['buffers']);

                  return this[_0x31e639(0x37c)](), _0x2aa5e5;
                }

                return null;
              }, _0x227a54[_0x533fd4(0x267)][_0x533fd4(0x37c)] = function () {
                var _0x133557 = _0x533fd4;
                this[_0x133557(0x11e)] = null, this[_0x133557(0x3b8)] = [];
              };
            },
            0x17b2: function _(_0x1d4e79) {
              var _0x11afb5 = a1_0x1adc;

              _0x1d4e79[_0x11afb5(0x10f)] = function (_0x4204be) {
                return _0x5d2270 && Buffer['isBuffer'](_0x4204be) || _0x2f1553 && (_0x4204be instanceof ArrayBuffer || function (_0x255bd9) {
                  var _0x484425 = a1_0x1adc;
                  return 'function' == typeof ArrayBuffer[_0x484425(0x3af)] ? ArrayBuffer['isView'](_0x255bd9) : _0x255bd9['buffer'] instanceof ArrayBuffer;
                }(_0x4204be));
              };

              var _0x5d2270 = _0x11afb5(0x23a) == typeof Buffer && _0x11afb5(0x23a) == typeof Buffer[_0x11afb5(0x161)],
                  _0x2f1553 = _0x11afb5(0x23a) == typeof ArrayBuffer;
            },
            0xfca: function _(_0x3c9c3e) {
              var _0x129897 = a1_0x1adc;

              _0x3c9c3e[_0x129897(0x10f)] = function (_0x37b4c2, _0x16498f) {
                var _0x46fe3e = _0x129897;

                for (var _0x24182d = [], _0x12d9c8 = (_0x16498f = _0x16498f || 0x0) || 0x0; _0x12d9c8 < _0x37b4c2[_0x46fe3e(0x109)]; _0x12d9c8++) _0x24182d[_0x12d9c8 - _0x16498f] = _0x37b4c2[_0x12d9c8];

                return _0x24182d;
              };
            },
            0x8e9: function _(_0x22d427) {
              var _0x195fe0 = a1_0x1adc;

              var _0x129e4d,
                  _0x5493fa = _0x195fe0(0x124)[_0x195fe0(0x194)](''),
                  _0xf3351e = {},
                  _0x1b9978 = 0x0,
                  _0x46357e = 0x0;

              function _0x498d75(_0x1eb8e4) {
                var _0x17d36b = _0x195fe0,
                    _0x49a2b3 = '';

                do {
                  _0x49a2b3 = _0x5493fa[_0x1eb8e4 % 0x40] + _0x49a2b3, _0x1eb8e4 = Math[_0x17d36b(0x38b)](_0x1eb8e4 / 0x40);
                } while (_0x1eb8e4 > 0x0);

                return _0x49a2b3;
              }

              function _0x136942() {
                var _0x2ef739 = _0x498d75(+new Date());

                return _0x2ef739 !== _0x129e4d ? (_0x1b9978 = 0x0, _0x129e4d = _0x2ef739) : _0x2ef739 + '.' + _0x498d75(_0x1b9978++);
              }

              for (; _0x46357e < 0x40; _0x46357e++) _0xf3351e[_0x5493fa[_0x46357e]] = _0x46357e;

              _0x136942[_0x195fe0(0x2bf)] = _0x498d75, _0x136942[_0x195fe0(0x2a8)] = function (_0x44990c) {
                var _0x2e7355 = _0x195fe0,
                    _0x38203e = 0x0;

                for (_0x46357e = 0x0; _0x46357e < _0x44990c[_0x2e7355(0x109)]; _0x46357e++) _0x38203e = 0x40 * _0x38203e + _0xf3351e[_0x44990c[_0x2e7355(0x382)](_0x46357e)];

                return _0x38203e;
              }, _0x22d427['exports'] = _0x136942;
            },
            0x1b6c: function _() {}
          }, _0x41a2b3 = {}, function _0x16f948(_0x4a7bea) {
            var _0x374a12 = a1_0x1adc,
                _0x9c69f3 = _0x41a2b3[_0x4a7bea];
            if (void 0x0 !== _0x9c69f3) return _0x9c69f3[_0x374a12(0x10f)];

            var _0x42fc04 = _0x41a2b3[_0x4a7bea] = {
              'exports': {}
            };

            return _0x46691d[_0x4a7bea][_0x374a12(0x20b)](_0x42fc04[_0x374a12(0x10f)], _0x42fc04, _0x42fc04[_0x374a12(0x10f)], _0x16f948), _0x42fc04[_0x374a12(0x10f)];
          }(0x370);

          var _0x46691d, _0x41a2b3;
        }); // #endregion ORIGINAL CODE

        _cjsExports = exports('default', module.exports);
        module.exports.GameNetwork;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/gameCommonUtils.ts", ['cc', './loadConfigAsync.ts', './utils.ts'], function (exports) {
  var cclegacy, sys, rect, director, game, loadConfigAsync, setOpacity;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      sys = module.sys;
      rect = module.rect;
      director = module.director;
      game = module.game;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      setOpacity = module.setOpacity;
    }],
    execute: function () {
      cclegacy._RF.push({}, "57626ZrpD9Ds4C68txemV+u", "gameCommonUtils", undefined);

      var lodash = globalThis._;

      var GameCommonUtils = /*#__PURE__*/function () {
        function GameCommonUtils() {
          var _this = this;

          this.gameCanvasSize = {};

          this.getUrlParam = function (name) {
            if (sys.isNative) return null;
            var url = new URL(window.location);
            return url.searchParams.get(name);
          };

          this.checkConditionCloseGameIframe = function () {
            var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
                LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;

            if (!LOGIN_IFRAME) {
              return true;
            }

            var returnUrl = _this.getUrlParam('ru');

            return returnUrl && LOGIN_IFRAME;
          };

          this.handleCloseGameIframe = function () {
            var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(),
                LOGIN_IFRAME = _loadConfigAsync$getC2.LOGIN_IFRAME;

            if (!LOGIN_IFRAME) {
              _this.handleBackToLobby();

              return;
            }

            var returnUrl = _this.getUrlParam('ru');

            if (returnUrl && LOGIN_IFRAME) {
              if (returnUrl.trim() === 'close') {
                window.close();
              } else {
                window.location.href = returnUrl;
              }
            } else {
              location.reload();
            }
          };

          this.handleFlowOutGame = function () {
            var _loadConfigAsync$getC3 = loadConfigAsync.getConfig(),
                LOGIN_IFRAME = _loadConfigAsync$getC3.LOGIN_IFRAME;

            if (LOGIN_IFRAME) {
              if (window && window.location) {
                window.location.reload();
              }
            } else {
              _this.handleBackToLobby();
            }
          };

          this.handleBackLogin = function () {
            var _loadConfigAsync$getC4 = loadConfigAsync.getConfig(),
                LOGIN_IFRAME = _loadConfigAsync$getC4.LOGIN_IFRAME;

            if (LOGIN_IFRAME) {
              if (window && window.location) {
                window.location.reload();
              }
            } else {
              _this.handleBackToLobby();
            }
          };

          this.getMessageSlot = function (mess) {
            if (mess === void 0) {
              mess = {};
            }

            var messageConfig = Object.assign({
              NAME: 'DialogMessage',
              NO_MONEY: 'Số dư trong ví không đủ, vui lòng nạp thêm để chơi tiếp.',
              NO_MONEY_EVENT: 'Số dư trong [wallet] không đủ, vui lòng nạp thêm để chơi tiếp.',
              LOST_CONNECT: 'Bạn đã bị mất kết nối. \n Vui lòng chờ ...',
              SPIN_4_EVER: 'Bạn đã mất kết nối. \n Vui lòng thử lại.',
              ANOTHER_ACCOUNT: 'Tài khoản của bạn đã đăng nhập\ntừ thiết bị khác.',
              AUTHEN_FAILED: 'Xác thực tài khoản thất bại.',
              DEPOSIT_MONEY: 'Số dư không đủ, bạn có muốn nạp thêm ?',
              MISMATCH_DATA: 'Dữ liệu không đồng bộ với máy chủ, vui lòng thử lại.',
              SYSTEM_ERROR: 'Có lỗi xảy ra, vui lòng thử lại.',
              DISCONNECT: 'Bị mất kết nối tới máy chủ\n Đang kết nối lại.',
              NO_PLAYSESSION: 'Hệ thống không tìm thấy phiên chơi.',
              GROUP_MAINTAIN: 'Hệ thống đang bảo trì.\nVui lòng quay lại sau.',
              NETWORK_WARNING: 'Đường truyền mạng yếu!',
              NETWORK_DISCONNECT: 'Bị mất kết nối tới máy chủ \nĐang kết nối lại.',
              NO_FREESPIN_OPTION: 'Dữ liệu không đồng bộ với máy chủ, vui lòng thử lại.',
              IN_PROGRESSING: 'Mạng chậm vui lòng đợi trong giây lát để hoàn thành\nlượt quay hoặc bấm xác nhận để tải lại game.',
              SPIN_UNSUCCESS: 'Thao tác không thành công, vui lòng thử lại.',
              ACCOUNT_BLOCKED: 'Tài khoản của bạn đã bị khoá, vui lòng liên hệ admin.',
              QUEST_LOCK: 'Bạn chưa hoàn thành\nnhiệm vụ game trước.',
              EVENT_FORCE_CLOSE: 'ĐÓNG SỰ KIỆN',
              MISSION_FORCE_CLOSE: 'ĐÓNG NHIỆM VỤ',
              SUGGEST_TURBO: 'WOW, NHANH QUÁ!!!\nBẠN CÓ MUỐN MỞ CHẾ ĐỘ QUAY NHANH?',
              EVENT_ENDED: 'Sự kiện đã kết thúc.',
              FINISH_DEMO: 'ĐÂY LÀ BẢN DEMO,\nBẠN CÓ MUỐN CHƠI THẬT KHÔNG?',
              EVENT_UNSUPPORT_WALLET: 'Nhiệm vụ không được tính\nkhi chơi ví ngọc',
              EVENT_UNSUPPORT_BETID: 'Nhiệm vụ không được tính\nkhi chơi mức cược này'
            }, mess);

            var _loadConfigAsync$getC5 = loadConfigAsync.getConfig(),
                LOGIN_IFRAME = _loadConfigAsync$getC5.LOGIN_IFRAME;

            if (LOGIN_IFRAME) {
              messageConfig.ACCOUNT_BLOCKED = "Tài khoản bị khóa chơi game " + document.title.replace('Techplay - ', '');
            }

            return messageConfig;
          };

          this.getMessageSlotEng = function (mess) {
            if (mess === void 0) {
              mess = {};
            }

            var messageConfig = Object.assign({
              NAME: 'DialogMessage',
              NO_MONEY: 'You have run out of your balance, please top up.',
              LOST_CONNECT: 'Your device is not connected to the Internet.\nPlease try again.',
              SPIN_4_EVER: 'Your device is not connected to the Internet.\nPlease try again.',
              ANOTHER_ACCOUNT: 'You are logging in another device.',
              AUTHEN_FAILED: 'Authentication failed.',
              DEPOSIT_MONEY: 'Your balance is not enough, do you want to top up?',
              MISMATCH_DATA: 'Data is not synchronized between client and server.',
              SYSTEM_ERROR: 'System error, please try again later.',
              DISCONNECT: 'Message Disconnect.',
              NO_PLAYSESSION: 'Playsession is not correct.',
              GROUP_MAINTAIN: 'Server is under maintenance, please try again later.',
              NETWORK_WARNING: 'Đường truyền mạng yếu!',
              NETWORK_DISCONNECT: 'Bị mất kết nối tới máy chủ \nĐang kết nối lại.',
              NO_FREESPIN_OPTION: 'Dữ liệu không đồng bộ với máy chủ, vui lòng thử lại.',
              SPIN_UNSUCCESS: 'Thao tác không thành công, vui lòng thử lại.',
              ACCOUNT_BLOCKED: 'Tài khoản của bạn đã bị khoá, vui lòng liên hệ admin.',
              SUGGEST_TURBO: 'WOW, NHANH QUÁ!!!\nBẠN CÓ MUỐN MỞ CHẾ ĐỘ QUAY NHANH?'
            }, mess);

            var _loadConfigAsync$getC6 = loadConfigAsync.getConfig(),
                LOGIN_IFRAME = _loadConfigAsync$getC6.LOGIN_IFRAME;

            if (LOGIN_IFRAME) {
              messageConfig.ACCOUNT_BLOCKED = "Tài khoản bị khóa chơi game " + document.title.replace('Techplay - ', '');
            }

            return messageConfig;
          };

          this.getBetValueWithGame = function (gameId, listBet) {
            if (!gameId) return '';
            var betValue = sys.localStorage.getItem('betValueWithGame');

            if (lodash.isEmpty(betValue)) {
              var newObj = {};
              newObj[gameId] = '';
              sys.localStorage.setItem('betValueWithGame', JSON.stringify(newObj));
            } else {
              betValue = JSON.parse(betValue);

              if (lodash.isEmpty(listBet)) {
                return betValue[gameId];
              } else {
                if (lodash.isArray(listBet) && listBet.includes(betValue[gameId])) {
                  return betValue[gameId];
                } else {
                  var isExist = false;
                  Object.keys(listBet).map(function (betId) {
                    if (listBet[betId] === betValue[gameId]) {
                      isExist = true;
                    }
                  });

                  if (isExist) {
                    return betValue[gameId];
                  }
                }
              }
            }

            return '';
          };

          this.setBetValueWithGame = function (gameId, betId) {
            var betValue = sys.localStorage.getItem('betValueWithGame');

            if (lodash.isEmpty(betValue)) {
              var newObj = {};
              newObj[gameId] = betId;
              sys.localStorage.setItem('betValueWithGame', JSON.stringify(newObj));
            } else {
              betValue = JSON.parse(betValue);
              betValue[gameId] = betId;
              sys.localStorage.setItem('betValueWithGame', JSON.stringify(betValue));
            }
          };

          this.getKeyWithGame = function (gameId, key, value) {
            if (value === void 0) {
              value = '';
            }

            if (!gameId || !key) return '';
            var betLinesValue = sys.localStorage.getItem(key);

            if (lodash.isEmpty(betLinesValue)) {
              var newObj = {};
              newObj[gameId] = value;
              sys.localStorage.setItem(key, JSON.stringify(newObj));
            } else {
              betLinesValue = JSON.parse(betLinesValue);
              return betLinesValue[gameId] ? betLinesValue[gameId] : value;
            }

            return value;
          };

          this.setKeyWithGame = function (gameId, key, value) {
            if (value === void 0) {
              value = '';
            }

            if (!gameId || !key) return '';
            var betLinesValue = sys.localStorage.getItem(key);

            if (lodash.isEmpty(betLinesValue)) {
              var newObj = {};
              newObj[gameId] = value;
              sys.localStorage.setItem(key, JSON.stringify(newObj));
            } else {
              betLinesValue = JSON.parse(betLinesValue);
              betLinesValue[gameId] = value;
              sys.localStorage.setItem(key, JSON.stringify(betLinesValue));
            }
          };

          this.optimizeScrollView = function (listView) {
            var view = listView.parent;
            var viewRect = rect(-view.width / 2, -listView.y - view.height, view.width, view.height);

            for (var i = 0; i < listView.children.length; i++) {
              var node = listView.children[i];

              if (viewRect.intersects(node.getBoundingBox())) {
                setOpacity(node, 255);
              } else {
                setOpacity(node, 0);
              }
            }
          };
        }

        var _proto = GameCommonUtils.prototype;

        _proto.isLoginIframe = function isLoginIframe() {
          var _loadConfigAsync$getC7 = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC7.LOGIN_IFRAME;

          return LOGIN_IFRAME === true;
        };

        _proto.handleBackToLobby = function handleBackToLobby() {
          var _loadConfigAsync$getC8 = loadConfigAsync.getConfig(),
              IS_PRODUCTION = _loadConfigAsync$getC8.IS_PRODUCTION,
              LOBBY_SCENE_NAME = _loadConfigAsync$getC8.LOBBY_SCENE_NAME;

          if (IS_PRODUCTION) {
            director.emit("INTEGRATION_BACK_TO_LOBBY");
          } else {
            var scene = director.getScene();
            var nodePersist = scene.getChildByName('OverlayPersistent');

            if (nodePersist) {
              game.removePersistRootNode(nodePersist);
            }

            director.preloadScene(LOBBY_SCENE_NAME, function () {
              director.loadScene(LOBBY_SCENE_NAME);
            });
          }
        };

        _proto.handleReleaseBundle = function handleReleaseBundle() {};

        return GameCommonUtils;
      }();

      var gameCommonUtils = exports('default', new GameCommonUtils());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/GameController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './Data.ts', './EventCode.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Button, Component, gaEventEmitter, Data, EventCode;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Button = module.Button;
      Component = module.Component;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      Data = module.Data;
    }, function (module) {
      EventCode = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "8cdecqkem9BmKDnOojW6auk", "GameController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var GameController = exports('GameController', (_dec = ccclass('GameController'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Button), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(GameController, _Component);

        function GameController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "MainControllerNode", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "UINode", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "startButton", _descriptor3, _assertThisInitialized(_this));

          _this.mainController = void 0;
          _this.uiController = void 0;
          _this.isStartGame = void 0;
          return _this;
        }

        var _proto = GameController.prototype;

        _proto.start = function start() {
          var _this2 = this;

          this.mainController = this.MainControllerNode.getComponent('MainController');
          this.uiController = this.UINode.getComponent('UIController');
          this.isStartGame = false;
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.PLAYER_INFO_UPDATE, this.updateMuL.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.STATE.PREPARING, function () {
            _this2.startButton.interactable = true;
          });
        };

        _proto.update = function update(deltaTime) {};

        _proto.setDefault = function setDefault() {};

        _proto.clickStart = function clickStart() {
          if (!this.isStartGame) {
            this.isStartGame = true;
            this.startGame();
          } else {
            this.isStartGame = false;
            this.startButton.interactable = false;
            this.cashOut();
          }
        };

        _proto.startGame = function startGame() {
          this.mainController.startGame();
        };

        _proto.cashOut = function cashOut() {
          this.mainController.cashOut();
        };

        _proto.updateMuL = function updateMuL(data) {
          Data.instance.muL = data.player.mul;
          this.uiController.setMuL(data.player.mul);
          this.uiController.updateFylProgressBar(data.player.mul / 10);
        };

        return GameController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "MainControllerNode", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "UINode", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "startButton", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/GameEvent.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Prefab, Node, Label, NodePool, instantiate, Component, formatMoney, customDateFormat, startGameFromEvent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Prefab = module.Prefab;
      Node = module.Node;
      Label = module.Label;
      NodePool = module.NodePool;
      instantiate = module.instantiate;
      Component = module.Component;
    }, function (module) {
      formatMoney = module.formatMoney;
      customDateFormat = module.customDateFormat;
      startGameFromEvent = module.startGameFromEvent;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;

      cclegacy._RF.push({}, "3a765ClryJDR75k/7uN4CBN", "GameEvent", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var GameEvent = exports('GameEvent', (_dec = ccclass('GameEvent'), _dec2 = property({
        type: Prefab
      }), _dec3 = property({
        type: Node
      }), _dec4 = property({
        type: Node
      }), _dec5 = property({
        type: Label
      }), _dec6 = property({
        type: Label
      }), _dec7 = property({
        type: Label
      }), _dec8 = property({
        type: Label
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(GameEvent, _Component);

        function GameEvent() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.currentQuest = null;
          _this.eventId = null;
          _this.type = '';

          _initializerDefineProperty(_this, "questPrefab", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "questHolder", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "rewardHolder", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "rewardString", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "eventName", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "eventTime", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "eventPeriod", _descriptor7, _assertThisInitialized(_this));

          _this.questPool = null;
          return _this;
        }

        var _proto = GameEvent.prototype;

        _proto.onLoad = function onLoad() {
          this.questPool = new NodePool();
        };

        _proto.getQuest = function getQuest() {
          var quest = this.questPool.get();

          if (!quest) {
            quest = instantiate(this.questPrefab);
          }

          return quest;
        };

        _proto.onDisable = function onDisable() {
          while (this.questHolder.children.length > 0) {
            this.questPool.put(this.questHolder.children[0]);
          }
        };

        _proto.init = function init(data) {
          // console.log(data);
          this.currentQuest = null;
          this.eventId = data.eventInfo.id;
          this.type = data.eventInfo.isMission == 1 ? "Mission" : "Event";
          this.eventName.string = this.type + ": " + data.eventInfo.name;
          var loadCurrentQuest = false;

          for (var i = 0; i < data.listQuest.length; i++) {
            var quest = this.getQuest();
            quest.setParent(this.questHolder);
            quest.getComponent('GameQuest').init(data.listQuest[i], data.eventInfo.id);

            if (!loadCurrentQuest && !data.listQuest[i].isComplete) {
              this.currentQuest = data.listQuest[i];
              loadCurrentQuest = true;
            }
          }

          if (data.eventInfo.rewardAmount) {
            this.rewardHolder.active = true;
            this.rewardString.string = formatMoney(data.eventInfo.rewardAmount);
          } else {
            this.rewardHolder.active = false;
          }

          var startDate = new Date(data.eventInfo.startDate);
          var endDate = new Date(data.eventInfo.endDate);
          var startDateStr = customDateFormat(startDate, '#hhhh#:#mm# #DD#-#MM#-#YYYY#');
          var endDataStr = customDateFormat(endDate, '#hhhh#:#mm# #DD#-#MM#-#YYYY#');
          this.eventTime.string = "Th\u1EDDi gian: " + startDateStr + " - " + endDataStr;

          if (data.eventInfo.timePeriod && data.eventInfo.timePeriod.length > 0) {
            var periodString = '';

            for (var _i = 0; _i < data.eventInfo.timePeriod.length; _i++) {
              var period = data.eventInfo.timePeriod[_i];
              periodString += "[" + this.convertHourUTC(period.startTime) + " - " + this.convertHourUTC(period.endTime) + "]";
            }

            this.eventPeriod.string = 'Khung giờ: ' + periodString;
          } else {
            this.eventPeriod.string = 'Khung giờ: Tất Cả';
          }
        };

        _proto.convertHourUTC = function convertHourUTC(time) {
          //to GMT +7
          var timeArray = time.split(':');
          var hour = parseInt(timeArray[0]) + 7;
          hour = hour > 24 ? hour - 24 : hour;
          var result = hour + ":" + timeArray[1];
          if (hour < 10) result = '0' + result;
          return result;
        };

        _proto.playEvent = function playEvent() {
          if (this.currentQuest) {
            var gameId = this.currentQuest.serviceIds[0];
            var eventId = this.eventId;
            startGameFromEvent(gameId);
          }
        };

        _proto.onDestroy = function onDestroy() {
          this.questPool.clear();
        };

        return GameEvent;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "questPrefab", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "questHolder", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "rewardHolder", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "rewardString", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "eventName", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "eventTime", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "eventPeriod", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/GameLogo.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './loadConfigAsync.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Component, loadConfigAsync;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Component = module.Component;
    }, function (module) {
      loadConfigAsync = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "197f4TTNgtGs71sl9ECWnVm", "GameLogo", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var GameLogo = exports('GameLogo', (_dec = ccclass('GameLogo'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(GameLogo, _Component);

        function GameLogo() {
          return _Component.apply(this, arguments) || this;
        }

        var _proto = GameLogo.prototype;

        _proto.onLoad = function onLoad() {
          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;

          if (LOGIN_IFRAME) {
            this.node.active = false;
          }
        };

        return GameLogo;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/GameQuest.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './utils.ts', './LobbyScene.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Sprite, Node, Label, Component, formatMoney, LobbyScene;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      Node = module.Node;
      Label = module.Label;
      Component = module.Component;
    }, function (module) {
      formatMoney = module.formatMoney;
    }, function (module) {
      LobbyScene = module.LobbyScene;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "6c9a3NtH3hPhpKRbfg0K99V", "GameQuest", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var GameQuest = exports('GameQuest', (_dec = ccclass('GameQuest'), _dec2 = property({
        type: Sprite
      }), _dec3 = property({
        type: Node
      }), _dec4 = property({
        type: Label
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(GameQuest, _Component);

        function GameQuest() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.gameId = null;
          _this.finished = false;
          _this.eventId = '';

          _initializerDefineProperty(_this, "iconGame", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "iconDone", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "reward", _descriptor3, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = GameQuest.prototype;

        _proto.init = function init(data, eventId) {
          this.eventId = eventId;
          this.gameId = data.serviceIds[0];
          var lobbyScene = this.node.scene.getComponentInChildren(LobbyScene);

          if (lobbyScene) {
            this.iconGame.spriteFrame = lobbyScene.getIconSpriteFrame(this.gameId);
          } else {
            this.iconGame.spriteFrame = null;
          }

          this.finished = data.isComplete;
          this.iconDone.active = this.finished;
          this.reward.string = formatMoney(data.rewardAmount); // console.log(`Reward String ${this.reward.string}`)
        };

        return GameQuest;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "iconGame", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "iconDone", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "reward", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaMultipagePopup.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBasePopup.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Label, gaBasePopup;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Label = module.Label;
    }, function (module) {
      gaBasePopup = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "ed276DuSQtJybqWA1acWy13", "gaMultipagePopup", undefined);

      var property = _decorator.property;
      var gaMultipagePopups = exports('default', (_dec = property(Node), _dec2 = property(Label), _dec3 = property(Label), (_class = /*#__PURE__*/function (_gaBasePopup) {
        _inheritsLoose(gaMultipagePopups, _gaBasePopup);

        function gaMultipagePopups() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaBasePopup.call.apply(_gaBasePopup, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "framePage", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "pageNumberLabel", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "pageTotalLabel", _descriptor3, _assertThisInitialized(_this));

          _this.totalPage = 0;
          _this.currentPage = 0;
          return _this;
        }

        var _proto = gaMultipagePopups.prototype;

        _proto.showPage = function showPage(page) {};

        _proto.nextPage = function nextPage() {
          this.soundPlayer.playSFXClick();
        };

        _proto.prevPage = function prevPage() {
          this.soundPlayer.playSFXClick();
        };

        _proto.updatePageNumber = function updatePageNumber(number) {
          this.currentPage = number;

          if (this.pageNumberLabel) {
            this.pageNumberLabel.string = number.toString();
          }
        };

        _proto.updatePageTotal = function updatePageTotal(total) {
          this.totalPage = total;

          if (this.pageTotalLabel) {
            this.pageTotalLabel.string = total.toString();
          }
        };

        _proto.setFramePageState = function setFramePageState(state) {
          this.framePage && (this.framePage.active = state);
        };

        return gaMultipagePopups;
      }(gaBasePopup), (_descriptor = _applyDecoratedDescriptor(_class.prototype, "framePage", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, "pageNumberLabel", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, "pageTotalLabel", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class)));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaNetworkError.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, _wrapNativeSuper, cclegacy;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _wrapNativeSuper = module.wrapNativeSuper;
    }, function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "e645dvkvI1GQou9oMKuvpJx", "gaNetworkError", undefined);

      var gaNetworkError = exports('gaNetworkError', /*#__PURE__*/function (_Error) {
        _inheritsLoose(gaNetworkError, _Error);

        function gaNetworkError() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Error.call.apply(_Error, [this].concat(args)) || this;
          _this.isDisconnected = false;
          _this.isExecuteCommandFailure = false;
          _this.isTimeout = false;
          _this.isResponseError = false;
          return _this;
        }

        gaNetworkError.timeout = function timeout(message) {
          var error = new gaNetworkError(message);
          error.isTimeout = true;
          return error;
        };

        gaNetworkError.disconnected = function disconnected(message) {
          var error = new gaNetworkError(message);
          error.isDisconnected = true;
          return error;
        };

        gaNetworkError.excecuteFail = function excecuteFail(message) {
          var error = new gaNetworkError(message);
          error.isExecuteCommandFailure = true;
          return error;
        };

        gaNetworkError.responseError = function responseError(message) {
          var error = new gaNetworkError(message);
          error.isResponseError = true;
          return error;
        };

        return gaNetworkError;
      }( /*#__PURE__*/_wrapNativeSuper(Error)));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaNotifyController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaComponent.ts', './gaDataStore.ts', './gaEventsCode.ts', './gaSideNotify.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, gaBaseConfig, gaComponent, gaDataStore, gaEventsCode, gaSideNotify;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaSideNotify = module.default;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "266eeZJadZCQrQoQwdyO1Xr", "gaNotifyController", undefined);

      var _cc$_decorator = cc._decorator,
          ccclass = _cc$_decorator.ccclass,
          property = _cc$_decorator.property;
      var gaNotifyController = exports('default', (_dec = property(gaSideNotify), ccclass(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaNotifyController, _gaComponent);

        function gaNotifyController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "sideNotify", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaNotifyController.prototype;

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.NOTIFY.SHOW_NOTIFY, this.onNotify);
          this.register(gaEventsCode.NOTIFY.DISABLE, this.onDisableNotify);
          this.register(gaEventsCode.NOTIFY.ENABLE, this.onEnableNotify);
          this.register(gaEventsCode.COMMON.GAME_HIDE, this.onEventHide);
        };

        _proto.onDisableNotify = function onDisableNotify() {
          if (gaDataStore.instance.isTutorial) return;
          this.sideNotify && this.sideNotify.onViewInGame();
        };

        _proto.onEventHide = function onEventHide() {
          this.sideNotify && this.sideNotify.onEventHide();
        };

        _proto.onEnableNotify = function onEnableNotify() {
          if (gaDataStore.instance.isTutorial) return;
          this.sideNotify && this.sideNotify.onEnableNotify();
        };

        _proto.onNotify = function onNotify(data) {
          if (gaDataStore.instance.isTutorial) return;
          if (gaDataStore.instance.result && gaDataStore.instance.result.commandId == data.cmdId) return;

          if (this.isValidData(data)) {
            this.sideNotify && this.sideNotify.show(data);
          }
        };

        _proto.isValidData = function isValidData(data) {
          var notifyType = gaBaseConfig.instance.NOTIFY_TYPE;
          var isValid = false;

          for (var type in notifyType) {
            if (Object.prototype.hasOwnProperty.call(notifyType, type) && data[notifyType[type]]) {
              isValid = true;
            }
          }

          return isValid;
        };

        return gaNotifyController;
      }(gaComponent), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "sideNotify", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPlayingState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaStateView.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, gaBaseConfig, gaStateView;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaStateView = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "47009eGEOlH4bGpoMWELjpT", "gaPlayingState", undefined);

      var ccclass = _decorator.ccclass;
      var gaPlayingState = exports('default', (_dec = ccclass("gaPlayingState"), _dec(_class = /*#__PURE__*/function (_gaStateView) {
        _inheritsLoose(gaPlayingState, _gaStateView);

        function gaPlayingState() {
          return _gaStateView.apply(this, arguments) || this;
        }

        _createClass(gaPlayingState, [{
          key: "stateName",
          get: //#region ------------------------------------------------------------------ Declare variables
          function get() {
            return gaBaseConfig.instance.GAME_STATE.PLAYING;
          } //#endregion
          //#region  ------------------------------------------------------------------ public functions
          //#endregion

        }]);

        return gaPlayingState;
      }(gaStateView)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPopupBetHistory.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataStore.ts', './gaBaseConfig.ts', './gaPopupHistory.ts', './gaBetHistoryDetail.ts', './gaEventsCode.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Node, gaDataStore, gaBaseConfig, gaPopupHistory, gaBetHistoryDetail, gaEventsCode;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaPopupHistory = module.default;
    }, function (module) {
      gaBetHistoryDetail = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "58a70AR7OtHG5sKjvDfMrQj", "gaPopupBetHistory", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var PopupBetHistory = exports('default', (_dec = ccclass('gaPopupBetHistory'), _dec2 = property(gaBetHistoryDetail), _dec3 = property({
        type: Node,
        visible: function visible() {
          return this.historyDetail != null;
        }
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_gaPopupHistory) {
        _inheritsLoose(PopupBetHistory, _gaPopupHistory);

        function PopupBetHistory() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaPopupHistory.call.apply(_gaPopupHistory, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "historyDetail", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "nodeMainTable", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = PopupBetHistory.prototype;

        _proto.show = function show(data) {
          _gaPopupHistory.prototype.show.call(this, data);

          this._hideHistoryDetail();
        };

        _proto.initEvents = function initEvents() {
          _gaPopupHistory.prototype.initEvents.call(this);

          this.register(gaEventsCode.POPUP.SHOW_HISTORY_DETAIL, this._showHistoryDetail);
          this.register(gaEventsCode.POPUP.HIDE_HISTORY_DETAIL, this._hideHistoryDetail);
        };

        _proto._showHistoryDetail = function _showHistoryDetail(data) {
          if (this.nodeMainTable) {
            this.nodeMainTable.active = false;
          }

          if (this.historyDetail) {
            this.historyDetail.node.active = true;
            this.historyDetail.updateData(data);
          }
        };

        _proto._hideHistoryDetail = function _hideHistoryDetail() {
          if (this.nodeMainTable) {
            this.nodeMainTable.active = true;
          }

          if (this.historyDetail) {
            this.historyDetail.node.active = false;
          }
        };

        _proto.requestDataPage = function requestDataPage(callback, callbackErr) {
          var newsize = this.itemPerPage;

          if (gaDataStore.instance.result) {
            newsize += 1;
          }

          var requestParams = {
            gameId: 'kts_' + gaBaseConfig.gameId,
            curPage: this.currentPage,
            size: newsize
          };

          _gaPopupHistory.prototype.requestDataPage.call(this, callback, callbackErr, requestParams);
        };

        _proto.onResponseData = function onResponseData(res) {
          _gaPopupHistory.prototype.onResponseData.call(this, res);

          if (res.error) return;
          var data = res.data;

          if (data) {
            var resultList = data.resultList,
                totalPage = data.totalPage;
            this.totalPage = totalPage;

            if (resultList && resultList.length > 0) {
              if (gaDataStore.instance.result) {
                var lsHistory = resultList.filter(function (it) {
                  return it.gameNum != gaDataStore.instance.result.sessionId;
                });
                this.onValidData(lsHistory);
              } else {
                this.onValidData(resultList);
              }
            } else {
              this.onEmptyData([]);
            }
          } else {
            this.onEmptyData([]);
          }
        };

        _createClass(PopupBetHistory, [{
          key: "popupType",
          get: function get() {
            return gaBaseConfig.POPUP_TYPE.HISTORY_BET;
          }
        }]);

        return PopupBetHistory;
      }(gaPopupHistory), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "historyDetail", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "nodeMainTable", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPopupController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaEventsCode.ts', './gaTweenUtils.ts', './gaComponent.ts', './gaBasePopup.ts', './gaCustomDataType.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Prefab, instantiate, gaBaseConfig, gaEventsCode, setOpacity, fadeTo, sequence, callFunc, fadeOut, gaComponent, gaBasePopup, POPUP_ANIMATION;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Prefab = module.Prefab;
      instantiate = module.instantiate;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      setOpacity = module.setOpacity;
      fadeTo = module.fadeTo;
      sequence = module.sequence;
      callFunc = module.callFunc;
      fadeOut = module.fadeOut;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaBasePopup = module.default;
    }, function (module) {
      POPUP_ANIMATION = module.POPUP_ANIMATION;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "84277T03ERF6IBz8fQ7iATo", "gaPopupController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaPopupController = exports('default', (_dec = ccclass('gaPopupController'), _dec2 = property(Node), _dec3 = property(Prefab), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaPopupController, _gaComponent);

        function gaPopupController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "overlay", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "prefabPopups", _descriptor2, _assertThisInitialized(_this));

          _this.popups = new Map();
          _this._listPopupIgnoreCloseByOverlay = [];
          _this._popupQueue = [];
          _this.OPACITY_SHOW_OVERLAY = 150;
          return _this;
        }

        var _proto = gaPopupController.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          for (var i = 0; i < this.prefabPopups.length; i++) {
            var prefab = this.prefabPopups[i];
            var popupNode = instantiate(prefab);
            var popup = popupNode.getComponent(gaBasePopup);
            this.node.addChild(popupNode);
            this.popups.set(popup.popupType, popup);
            popupNode.active = false;
          }

          for (var key in this.popups) {
            if (Object.prototype.hasOwnProperty.call(this.popups, key)) {
              var _popup = this.popups[key];

              _popup.node.setSiblingIndex(_popup.zIndex);
            }
          }

          this.overlay.setSiblingIndex(0);
          this.overlay.active = false;
          setOpacity(this.overlay, 0);
          this.setupPopupIgnoreCloseByOverlay();
          this.registerEventOverlay();
        };

        _proto.setupPopupIgnoreCloseByOverlay = function setupPopupIgnoreCloseByOverlay() {
          this._listPopupIgnoreCloseByOverlay.push(this.popups.get(gaBaseConfig.POPUP_TYPE.DIALOG));
        };

        _proto.registerEventOverlay = function registerEventOverlay() {
          var _this2 = this;

          this.overlay.on(Node.EventType.TOUCH_END, function () {
            _this2.closePopupByOverlay();
          }, this);
        };

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.POPUP.SHOW_POPUP_HISTORY_BET, this.showHistoryBet);
          this.register(gaEventsCode.POPUP.SHOW_POPUP_HISTORY_JP, this.showHistoryJackpot);
          this.register(gaEventsCode.POPUP.SHOW_POPUP_INFO, this.showHelpInfo);
          this.register(gaEventsCode.POPUP.SHOW_POPUP_SETTING, this.showSetting);
          this.register(gaEventsCode.POPUP.SHOW_TUTORIAL, this.showTutorial);
          this.register(gaEventsCode.POPUP.CLOSE_TOP_POPUP, this.closeTopPopup);
          this.register(gaEventsCode.POPUP.SHOW_DIALOG, this.showDialog);
          this.register(gaEventsCode.POPUP.SHOW_TOAST, this.showToast);
          this.register(gaEventsCode.POPUP.CLOSE_POPUP, this.closePopup);
        };

        _proto.showHistoryBet = function showHistoryBet() {
          this.show(gaBaseConfig.POPUP_TYPE.HISTORY_BET);
        };

        _proto.showHistoryJackpot = function showHistoryJackpot() {
          this.show(gaBaseConfig.POPUP_TYPE.HISTORY_JP);
        };

        _proto.showHelpInfo = function showHelpInfo() {
          this.show(gaBaseConfig.POPUP_TYPE.HELP);
        };

        _proto.showSetting = function showSetting() {
          this.show(gaBaseConfig.POPUP_TYPE.SETTING);
        };

        _proto.showTutorial = function showTutorial() {
          this.show(gaBaseConfig.POPUP_TYPE.TUTORIAL);
        };

        _proto.showDialog = function showDialog(data) {
          this.show(gaBaseConfig.POPUP_TYPE.DIALOG, data);
        };

        _proto.show = function show(pType, data, addQueue) {
          if (data === void 0) {
            data = null;
          }

          if (addQueue === void 0) {
            addQueue = true;
          }

          if (pType === "") {
            return;
          }

          var currentPopup = this.popups.get(pType);
          if (!currentPopup) return;
          currentPopup.show(data);

          if (addQueue) {
            this.onPopupQueue(currentPopup);
          }
        };

        _proto.onPopupQueue = function onPopupQueue(popup) {
          var isNew = false;

          if (this._popupQueue && this._popupQueue.length > 0) {
            var currPopup = this._popupQueue[this._popupQueue.length - 1];

            if (currPopup != popup) {
              this._popupQueue[this._popupQueue.length - 1].hide();

              isNew = true;
            }
          } else {
            this.overlay.active = true;
            this.overlay.stopAllActions();
            this.overlay.runAction(fadeTo(0.3, this.OPACITY_SHOW_OVERLAY));
            isNew = true;
          }

          if (isNew) {
            this._popupQueue.push(popup);
          }
        };

        _proto.closePopupByOverlay = function closePopupByOverlay() {
          if (this._popupQueue && this._popupQueue.length > 0) {
            var currPopup = this._popupQueue[this._popupQueue.length - 1];

            if (this._listPopupIgnoreCloseByOverlay.indexOf(currPopup) > -1) {
              return;
            }

            this.closeTopPopup();
          }
        };

        _proto.closePopup = function closePopup(data) {
          var type = data.type;

          if (this.isPopupShown(type)) {
            this.closeTopPopup();
          }
        };

        _proto.closeTopPopup = function closeTopPopup() {
          var popup = this._popupQueue.pop();

          if (popup == null) {
            return;
          }

          popup.hide();

          if (this._popupQueue.length < 1) {
            if (popup.animStyle.hide == POPUP_ANIMATION.DEFAULT) {
              setOpacity(this.overlay, 0);
              this.overlay.active = false;
            } else {
              this.playFadeOutOverlay();
            }

            return;
          }

          this._popupQueue[this._popupQueue.length - 1].show();
        };

        _proto.playFadeOutOverlay = function playFadeOutOverlay() {
          var _this3 = this;

          this.overlay.stopAllActions();
          this.overlay.runAction(sequence(fadeOut(0.3), callFunc(function () {
            _this3.overlay.active = false;
          })));
        };

        _proto.hide = function hide(pType) {
          if (pType === "") {
            return;
          }

          var currentPopup = this.popups.get(pType);
          if (!currentPopup) return;
          currentPopup.hide();
        };

        _proto.hideAll = function hideAll() {
          if (this._popupQueue.length > 0) {
            this.closeTopPopup();
            this.hideAll();
          }
        };

        _proto.isAnyPopupShown = function isAnyPopupShown() {
          this.popups.forEach(function (popup, key) {
            if (popup.isShowing) {
              return true;
            }
          });
          return false;
        };

        _proto.isPopupShown = function isPopupShown(pType) {
          var popup = this.popups.get(pType);
          return popup && popup.isShowing;
        };

        _proto.showToast = function showToast(data) {
          if (!this.isPopupShown(gaBaseConfig.POPUP_TYPE.TOAST)) {
            this.show(gaBaseConfig.POPUP_TYPE.TOAST, data, false);
          }
        };

        return gaPopupController;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "overlay", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "prefabPopups", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPopupHelpInfo.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaMultipagePopup.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, gaBaseConfig, gaMultipagePopups;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaMultipagePopups = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "ec25czMt0JF7pAPbNUyjJVp", "gaPopupHelpInfo", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaPopupHelpInfo = exports('default', (_dec = ccclass('gaPopupHelpInfo'), _dec(_class = /*#__PURE__*/function (_gaMultipagePopups) {
        _inheritsLoose(gaPopupHelpInfo, _gaMultipagePopups);

        function gaPopupHelpInfo() {
          return _gaMultipagePopups.apply(this, arguments) || this;
        }

        _createClass(gaPopupHelpInfo, [{
          key: "popupType",
          get: function get() {
            return gaBaseConfig.POPUP_TYPE.HELP;
          }
        }]);

        return gaPopupHelpInfo;
      }(gaMultipagePopups)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPopupHistory.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaGameService.ts', './gaTweenUtils.ts', './gaArcadeBaseTableHistory.ts', './gaMultipagePopup.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, CCInteger, Button, gameService, setOpacity, gaArcadeBaseTableHistory, gaMultipagePopups;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      CCInteger = module.CCInteger;
      Button = module.Button;
    }, function (module) {
      gameService = module.default;
    }, function (module) {
      setOpacity = module.setOpacity;
    }, function (module) {
      gaArcadeBaseTableHistory = module.default;
    }, function (module) {
      gaMultipagePopups = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;

      cclegacy._RF.push({}, "2fc061RFItGYahSWSx+6Yt0", "gaPopupHistory", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaPopupHistory = exports('default', (_dec = ccclass('gaPopupHistory'), _dec2 = property(gaArcadeBaseTableHistory), _dec3 = property(Node), _dec4 = property(CCInteger), _dec5 = property(Button), _dec6 = property(Button), _dec7 = property(Node), _dec8 = property({
        serializable: true
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_gaMultipagePopups) {
        _inheritsLoose(gaPopupHistory, _gaMultipagePopups);

        function gaPopupHistory() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaMultipagePopups.call.apply(_gaMultipagePopups, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "tableHistory", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "loadingAnim", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "itemPerPage", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnNext", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnBack", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "historyEmpty", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "historyUrl", _descriptor7, _assertThisInitialized(_this));

          _this.pageDefault = 1;
          return _this;
        }

        var _proto = gaPopupHistory.prototype;

        _proto.onLoad = function onLoad() {
          _gaMultipagePopups.prototype.onLoad.call(this);

          this.initMultipage();
        };

        _proto.initMultipage = function initMultipage() {
          this.updatePageNumber(1);
          this.updatePageTotal(1);
          this.stopLoading();
          this.tableHistory.initCells(this.itemPerPage);
          this.historyEmpty && (this.historyEmpty.active = false);
          this.btnNext.node.on(Node.EventType.TOUCH_END, this.cancelChangePage, this);
          this.btnNext.node.on(Node.EventType.TOUCH_CANCEL, this.cancelChangePage, this);
          this.btnBack.node.on(Node.EventType.TOUCH_END, this.cancelChangePage, this);
          this.btnBack.node.on(Node.EventType.TOUCH_CANCEL, this.cancelChangePage, this);
        };

        _proto.show = function show(_data) {
          _gaMultipagePopups.prototype.show.call(this);

          this.tableHistory.clearData();
          this.openPanel();
        };

        _proto.cancelChangePage = function cancelChangePage() {
          if (this.currentPage !== 1) {
            this.btnBack.interactable = true;
          }

          if (this.currentPage < this.totalPage) {
            this.btnNext.interactable = true;
          }
        };

        _proto.openPanel = function openPanel() {
          this.node.active = true;
          setOpacity(this.node, 255);
          setOpacity(this.tableHistory.node, 0);
          this.currentPage = 1;
          this.btnBack.interactable = false;
          this.btnNext.interactable = false;
          this.updatePageNumber(this.currentPage);
          this.updatePageTotal(this.totalPage);
          this.changePage();
        };

        _proto.playLoading = function playLoading() {
          if (this.loadingAnim) {
            this.loadingAnim.active = true;
          }

          this.historyEmpty && (this.historyEmpty.active = false);
        };

        _proto.stopLoading = function stopLoading() {
          this.unschedule(this.playLoading);

          if (this.loadingAnim) {
            this.loadingAnim.active = false;
          }
        };

        _proto.nextPage = function nextPage() {
          _gaMultipagePopups.prototype.nextPage.call(this);

          if (this.currentPage == this.totalPage) {
            return;
          }

          this.btnNext.interactable = false;
          this.currentPage += 1;
          this.changePage();
        };

        _proto.prevPage = function prevPage() {
          _gaMultipagePopups.prototype.prevPage.call(this);

          if (this.currentPage == 1) {
            return;
          }

          this.btnBack.interactable = false;
          this.currentPage -= 1;
          this.changePage();
        };

        _proto.changePage = function changePage() {
          this.scheduleOnce(this.playLoading, 1);
          this.requestDataPage(this.onResponseData.bind(this), this.onErrorData.bind(this));
        };

        _proto.requestDataPage = function requestDataPage(callback, callbackErr, requestParams) {
          if (requestParams === void 0) {
            requestParams = {};
          }

          gameService.getHistory(this.historyUrl, requestParams).then(function (resp) {
            callback(resp);
          })["catch"](function (_error) {
            callbackErr();
          });
        };

        _proto.onResponseData = function onResponseData(_res) {
          this.stopLoading();
        };

        _proto.onValidData = function onValidData(data) {
          this.btnNext.interactable = true;
          this.btnBack.interactable = true;

          if (this.currentPage == 1) {
            this.btnBack.interactable = false;
          }

          if (this.currentPage == this.totalPage) {
            this.btnNext.interactable = false;
          }

          this.historyEmpty && (this.historyEmpty.active = false);
          this.updatePageNumber(this.currentPage);
          this.updatePageTotal(this.totalPage);
          this.setFramePageState(true);
          setOpacity(this.tableHistory.node, 255);
          this.tableHistory.updateData(data);
        };

        _proto.onEmptyData = function onEmptyData(data) {
          this.historyEmpty && (this.historyEmpty.active = true);
          this.btnNext.interactable = false;
          this.btnBack.interactable = false;
          this.updatePageNumber(1);
          this.updatePageTotal(1);
          this.setFramePageState(false);
          this.tableHistory.updateData(data);
        };

        _proto.onErrorData = function onErrorData() {
          this.totalPage = 1;
          this.stopLoading();
        };

        return gaPopupHistory;
      }(gaMultipagePopups), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tableHistory", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "loadingAnim", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "itemPerPage", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 7;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "btnNext", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "btnBack", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "historyEmpty", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "historyUrl", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "";
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPopupJackpotHistory.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaPopupHistory.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, gaBaseConfig, gaPopupHistory;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaPopupHistory = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "d223etk9rJKu6l7RpUYkBea", "gaPopupJackpotHistory", undefined);

      var ccclass = _decorator.ccclass;
      var gaPopupJackpotHistory = exports('default', (_dec = ccclass('gaPopupJackpotHistory'), _dec(_class = /*#__PURE__*/function (_gaPopupHistory) {
        _inheritsLoose(gaPopupJackpotHistory, _gaPopupHistory);

        function gaPopupJackpotHistory() {
          return _gaPopupHistory.apply(this, arguments) || this;
        }

        var _proto = gaPopupJackpotHistory.prototype;

        _proto.requestDataPage = function requestDataPage(callback, callbackErr) {
          var requestParams = {
            serviceId: gaBaseConfig.gameId,
            from: (this.currentPage - 1) * this.itemPerPage,
            size: this.itemPerPage,
            type: 'GRAND'
          };

          _gaPopupHistory.prototype.requestDataPage.call(this, callback, callbackErr, requestParams);
        };

        _proto.onResponseData = function onResponseData(res) {
          _gaPopupHistory.prototype.onResponseData.call(this, res);

          if (res.total) {
            this.totalPage = Math.ceil(res.total / this.itemPerPage);
          }

          if (res.error) return;

          if (Object.keys(res).length > 0 && res.data && res.data.length > 0) {
            this.onValidData(res.data);
          } else {
            this.onEmptyData([]);
          }
        };

        _createClass(gaPopupJackpotHistory, [{
          key: "popupType",
          get: function get() {
            return gaBaseConfig.POPUP_TYPE.HISTORY_JP;
          }
        }]);

        return gaPopupJackpotHistory;
      }(gaPopupHistory)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPopupSetting.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaToggleDoubleCheckmark.ts', './gaBasePopup.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Toggle, gaBaseConfig, gaToggleDoubleCheckmark, gaBasePopup;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Toggle = module.Toggle;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaToggleDoubleCheckmark = module.default;
    }, function (module) {
      gaBasePopup = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "04fa6j7wN1De7er8Rk5Zatt", "gaPopupSetting", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var PopupSetting = exports('default', (_dec = ccclass('gaPopupSetting'), _dec2 = property(Toggle), _dec3 = property(Toggle), _dec(_class = (_class2 = /*#__PURE__*/function (_gaBasePopup) {
        _inheritsLoose(PopupSetting, _gaBasePopup);

        function PopupSetting() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaBasePopup.call.apply(_gaBasePopup, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "BGMCheckBox", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "SFXCheckBox", _descriptor2, _assertThisInitialized(_this));

          _this.isInit = false;
          return _this;
        }

        var _proto = PopupSetting.prototype;

        _proto.initObj = function initObj() {
          _gaBasePopup.prototype.initObj.call(this);

          this.isInit = true;
          this.SFXCheckBox.isChecked = this.soundPlayer.isEnableSFX;
          this.BGMCheckBox.isChecked = this.soundPlayer.isEnableBGM;
          this.loadDefault();
          this.BGMCheckBox.node.off('toggle');
          this.SFXCheckBox.node.off('toggle');
          this.BGMCheckBox.node.on('toggle', this.onToggleMusic, this);
          this.SFXCheckBox.node.on('toggle', this.onToggleSound, this);
        };

        _proto.loadDefault = function loadDefault() {
          var ls = [this.BGMCheckBox.node, this.SFXCheckBox.node];
          var states = [this.soundPlayer.isEnableBGM, this.soundPlayer.isEnableSFX];
          ls.forEach(function (it, index) {
            var doubleCheckMark = it.getComponent(gaToggleDoubleCheckmark);

            if (doubleCheckMark) {
              doubleCheckMark.init(states[index]);
            }
          });
        };

        _proto.onToggleSound = function onToggleSound() {
          if (!this.isInit) {
            return;
          }

          this.soundPlayer.setEffectEnable(this.SFXCheckBox.isChecked);
          this.soundPlayer.playSFXClick();
        };

        _proto.onToggleMusic = function onToggleMusic() {
          if (!this.isInit) {
            return;
          }

          this.soundPlayer.setBgmEnable(this.BGMCheckBox.isChecked);
          this.soundPlayer.playSFXClick();
        };

        _createClass(PopupSetting, [{
          key: "popupType",
          get: function get() {
            return gaBaseConfig.POPUP_TYPE.SETTING;
          }
        }]);

        return PopupSetting;
      }(gaBasePopup), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "BGMCheckBox", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "SFXCheckBox", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaPromise.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaLogger.ts'], function (exports) {
  var _inheritsLoose, _createForOfIteratorHelperLoose, cclegacy, logger;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      logger = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "af54bMAZ1JJspPnVyGsB4a3", "gaPromise", undefined);

      var CancelablePromiseInternal = /*#__PURE__*/function () {
        function CancelablePromiseInternal(_ref) {
          var _ref$executor = _ref.executor,
              executor = _ref$executor === void 0 ? function () {} : _ref$executor,
              _ref$internals = _ref.internals,
              internals = _ref$internals === void 0 ? defaultInternals() : _ref$internals,
              _ref$promise = _ref.promise,
              promise = _ref$promise === void 0 ? new Promise(function (resolve, reject) {
            return executor(resolve, reject, function (onCancel) {
              internals.onCancelList.push(onCancel);
            });
          }) : _ref$promise;
          this._internals = void 0;
          this._promise = void 0;
          this.cancel = this.cancel.bind(this);
          this._internals = internals;
          this._promise = promise || new Promise(function (resolve, reject) {
            return executor(resolve, reject, function (onCancel) {
              internals.onCancelList.push(onCancel);
            });
          });
        }

        var _proto = CancelablePromiseInternal.prototype;

        _proto.delay = function delay(seconds) {
          var _this = this;

          var waiter = function waiter() {
            return new gaPromise(function (resolve) {
              clearTimeout(_this._internals.timeout);
              _this._internals.timeout = setTimeout(function () {
                resolve();
              }, seconds * 1000);
            });
          };

          return makeCancelable(this._promise.then(createCallback(waiter, this._internals)), this._internals);
        };

        _proto.waitUntil = function waitUntil(conditionFn) {
          var _this2 = this;

          var waiter = function waiter() {
            return new gaPromise(function (resolve) {
              var waitFn = function waitFn() {
                _this2._internals.timeout = setTimeout(function () {
                  if (conditionFn() === true) {
                    resolve();
                  } else {
                    waitFn();
                  }
                }, 10);
              };

              clearTimeout(_this2._internals.timeout);
              waitFn();
            });
          };

          return makeCancelable(this._promise.then(createCallback(waiter, this._internals)), this._internals);
        };

        _proto.then = function then(onfulfilled, onrejected) {
          return makeCancelable(this._promise.then(createCallback(onfulfilled, this._internals), createCallback(onrejected, this._internals)), this._internals);
        };

        _proto["catch"] = function _catch(onrejected) {
          return makeCancelable(this._promise["catch"](createCallback(onrejected, this._internals)), this._internals);
        };

        _proto["finally"] = function _finally(onfinally, runWhenCanceled) {
          var _this3 = this;

          if (runWhenCanceled) {
            this._internals.onCancelList.push(onfinally);
          }

          return makeCancelable(this._promise['finally'](createCallback(function () {
            if (onfinally) {
              if (runWhenCanceled) {
                _this3._internals.onCancelList = _this3._internals.onCancelList.filter(function (callback) {
                  return callback !== onfinally;
                });
              }

              return onfinally();
            }
          }, this._internals)), this._internals);
        };

        _proto.cancel = function cancel() {
          clearTimeout(this._internals.timeout);
          this._internals.timeout = null;
          this._internals.isCanceled = true;
          var callbacks = this._internals.onCancelList;
          this._internals.onCancelList = [];

          for (var _iterator = _createForOfIteratorHelperLoose(callbacks), _step; !(_step = _iterator()).done;) {
            var callback = _step.value;

            if (typeof callback === 'function') {
              try {
                callback();
              } catch (err) {
                logger.error(err);
              }
            }
          }
        };

        _proto.isCanceled = function isCanceled() {
          return this._internals.isCanceled === true;
        };

        return CancelablePromiseInternal;
      }();

      var gaPromise = function (v) {
        return exports({
          gaPromise: v,
          default: v
        }), v;
      }( /*#__PURE__*/function (_CancelablePromiseInt) {
        _inheritsLoose(gaPromise, _CancelablePromiseInt);

        function gaPromise(executor) {
          return _CancelablePromiseInt.call(this, {
            executor: executor
          }) || this;
        }

        return gaPromise;
      }(CancelablePromiseInternal));

      gaPromise.all = function all(iterable) {
        return makeAllCancelable(iterable, Promise.all(iterable));
      };

      gaPromise.resolve = function resolve(value) {
        return cancelable(Promise.resolve(value));
      };

      gaPromise.reject = function reject(reason) {
        return cancelable(Promise.reject(reason));
      };

      gaPromise.isCancelable = isCancelablePromise;

      function cancelable(promise) {
        return makeCancelable(promise, defaultInternals());
      }

      function isCancelablePromise(promise) {
        return promise instanceof gaPromise || promise instanceof CancelablePromiseInternal;
      }

      function createCallback(onResult, internals) {
        if (onResult) {
          return function (arg) {
            if (!internals.isCanceled) {
              var result = onResult(arg);

              if (isCancelablePromise(result)) {
                internals.onCancelList.push(result.cancel);
              }

              return result;
            }

            return arg;
          };
        }
      }

      function makeCancelable(promise, internals) {
        return new CancelablePromiseInternal({
          internals: internals,
          promise: promise
        });
      }

      function makeAllCancelable(iterable, promise) {
        var internals = defaultInternals();
        internals.onCancelList.push(function () {
          for (var _iterator2 = _createForOfIteratorHelperLoose(iterable), _step2; !(_step2 = _iterator2()).done;) {
            var resolvable = _step2.value;

            if (isCancelablePromise(resolvable)) {
              resolvable.cancel();
            }
          }
        });
        return new CancelablePromiseInternal({
          internals: internals,
          promise: promise
        });
      }

      function defaultInternals() {
        return {
          isCanceled: false,
          onCancelList: [],
          timeout: null
        };
      }

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaRandom.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "81341QVAaNGvKkLRQa5pFR0", "gaRandom", undefined);

      var gaRandom = exports('default', /*#__PURE__*/function () {
        function gaRandom(seed) {
          if (seed === void 0) {
            seed = Math.floor(Math.random() * 1000000);
          }

          this._result = void 0;
          this._randomSeed = void 0;
          this._currentIDValue = void 0;
          this._totalIndex = void 0;
          this.initRandomSeed(seed);
        }

        var _proto = gaRandom.prototype;

        _proto.initRandomSeed = function initRandomSeed(seed) {
          var finalSeedArray = [];
          var seedArray = [];
          var revertSeedArray = [];
          var seedLength = 0;
          var swapIndex = [10, 6, 32, 33, 5, 23, 3, 13, 1, 25, 28, 39, 16, 26, 15, 20, 27, 2, 30, 34, 17, 42, 11, 7, 0, 40, 22, 37, 12, 18, 14, 47, 38, 19, 36, 8, 31, 46, 4, 43, 9, 24, 29, 45, 41, 21, 44, 35];
          this._result = [];
          this._randomSeed = 0;
          this._currentIDValue = 0;
          this._totalIndex = swapIndex.length;

          if (seed == this._randomSeed && this._result.length != 0) {
            return;
          }

          this._randomSeed = seed;
          seedLength = 1;
          var currentValueMultiply = 1;

          while (2 * currentValueMultiply < this._randomSeed) {
            currentValueMultiply *= 2;
            seedLength++;
          }

          seedArray = [];
          revertSeedArray = [];
          var tmpRandomSeed = this._randomSeed;

          for (var index = 0; index < seedLength; index++) {
            var currentValueChecking = Math.pow(2, seedLength - index - 1);

            if (tmpRandomSeed >= currentValueChecking) {
              seedArray[index] = 1;
              revertSeedArray[index] = 0;
              tmpRandomSeed -= currentValueChecking;
            } else {
              seedArray[index] = 0;
              revertSeedArray[index] = 1;
            }
          }

          finalSeedArray = [];
          this._result = [];

          for (var _index = 0; _index < this._totalIndex; _index++) {
            finalSeedArray[_index] = Math.floor(_index / seedLength) % 2 == 0 ? seedArray[_index % seedLength] : revertSeedArray[_index % seedLength];
          }

          for (var _index2 = 0; _index2 < this._totalIndex; _index2 += 2) {
            var tmp = finalSeedArray[_index2];
            finalSeedArray[_index2] = finalSeedArray[_index2 + 1];
            finalSeedArray[_index2 + 1] = tmp;
          }

          var endNumber = 0;

          for (var _index3 = this._totalIndex - 1; _index3 >= this._totalIndex / 2; _index3--) {
            endNumber += finalSeedArray[_index3] != 0 ? Math.pow(2, this._totalIndex - _index3 - 1) : 0;
          }

          this._result[0] = endNumber;

          for (var _index4 = 1; _index4 < this._totalIndex; _index4++) {
            var shiftValue = swapIndex[_index4] % 10 == 0 ? 1 : swapIndex[_index4] % 10;
            var tmpLeft = this._result[_index4 - 1] >>> shiftValue;
            var tmpRight = Math.abs(~(this._result[_index4 - 1] ^ tmpLeft << shiftValue)) << this._totalIndex / 2 - shiftValue;
            this._result[_index4] = (tmpLeft ^ tmpRight) % 16777216;
          }
        }
        /**
         * Returns a floating-point pseudo-random number between 0 (inclusive) and 1 (exclusive).
         *
         * @return The random number between 0 and 1.
         */
        ;

        _proto.random = function random() {
          return this.range(0, 1);
        }
        /**
         * Returns a floating-point pseudo-random number between min (inclusive) and max (exclusive).
         *
         * @param min
         * @param max
         * @return The random number.
         */
        ;

        _proto.range = function range(min, max) {
          if (this._result.length === 0) {
            this._randomSeed = new Date().getTime();
          }

          if (this._currentIDValue >= this._totalIndex - 1) {
            var tmpSeed = this._result[this._currentIDValue] % 16777216;
            this.initRandomSeed(tmpSeed);
          }

          var tmpValue = this._result[this._currentIDValue++];
          return tmpValue / 16777216 * (max - min) + min;
        }
        /**
         * Returns a pseudo-random integer between min (inclusive) and max (exclusive).
         * @param min
         * @param max
         * @return The random integer.
         */
        ;

        _proto.rangeInt = function rangeInt(min, max) {
          return Math.floor(this.range(min, max));
        }
        /**
         * Returns a pseudo-random boolean.
         * @return true or false.
         */
        ;

        _proto["boolean"] = function boolean() {
          return this.rangeInt(0, 100) >= 50;
        }
        /**
         * Returns a pseudo-random element from input array.
         * @param arr
         * @return The random element.
         */
        ;

        _proto.getElement = function getElement(arr) {
          if (!arr || arr.length == 0) return null;
          var index = this.rangeInt(0, arr.length);
          return arr[index];
        }
        /**
         * Returns a pseudo-random element from input array except param element.
         * @param arr
         * @exceptedElement element
         * @return The random element.
         */
        ;

        _proto.getElementExcept = function getElementExcept(arr, exceptedElement) {
          if (!arr || arr.length == 0) return null;
          var eleIndex = arr.indexOf(exceptedElement);

          if (eleIndex == -1 || arr.length < 2) {
            return this.getElement(arr);
          }

          var index = this.rangeInt(eleIndex + 1, eleIndex + arr.length) % arr.length;
          return arr[index];
        };

        return gaRandom;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaReferenceManager.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaSoundPlayer.ts'], function (exports) {
  var _createClass, cclegacy, gaSoundPlayer;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaSoundPlayer = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "433e4hXBvpHjITWioy+V9RJ", "gaReferenceManager", undefined);

      var gaReferenceManager = exports('default', /*#__PURE__*/function () {
        function gaReferenceManager() {
          this.btnFullScreen = null;
          this.gameView = null;
          this.soundPlayer = null;
          this.betPanel = null;
          this.jackpotPanel = null;
          this.userUI = null;
        }

        var _proto = gaReferenceManager.prototype;

        _proto.setReference = function setReference(key, node) {
          this[key] = node;
        };

        _proto.getSoundPlayer = function getSoundPlayer() {
          return this.soundPlayer.getComponent(gaSoundPlayer);
        };

        _proto.destroy = function destroy() {
          if (gaReferenceManager.instance) {
            gaReferenceManager.instance = null;
          }
        };

        _createClass(gaReferenceManager, [{
          key: "gameLayer",
          get: function get() {
            if (!this.gameView) return null;
            return this.gameView['gameLayer'];
          }
        }, {
          key: "uiLayer",
          get: function get() {
            if (!this.gameView) return null;
            return this.gameView['uiLayer'];
          }
        }, {
          key: "aboveLayer",
          get: function get() {
            if (!this.gameView) return null;
            return this.gameView['aboveLayer'];
          }
        }]);

        return gaReferenceManager;
      }());
      gaReferenceManager.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaRefreshWidget.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventsCode.ts', './gaUtils.ts', './gaComponent.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Widget, Node, tween, gaEventsCode, gaUtils, gaComponent;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Widget = module.Widget;
      Node = module.Node;
      tween = module.tween;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class;

      cclegacy._RF.push({}, "8b6f4mz0Z5D363bXoHA1qo4", "gaRefreshWidget", undefined);

      var ccclass = _decorator.ccclass,
          requireComponent = _decorator.requireComponent,
          property = _decorator.property;
      var gaRefreshWidget = exports('gaRefreshWidget', (_dec = ccclass('gaRefreshWidget'), _dec2 = requireComponent(Widget), _dec(_class = _dec2(_class = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaRefreshWidget, _gaComponent);

        function gaRefreshWidget() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;
          _this._defaultLeftPadding = 0;
          _this._defaultRightPadding = 0;
          _this._tweenDelay = null;
          return _this;
        }

        var _proto = gaRefreshWidget.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          var widget = this.getComponent(Widget);
          this._defaultLeftPadding = widget.left;
          this._defaultRightPadding = widget.right;
        };

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.COMMON.ON_SCREEN_RESIZE, this.refresh);
          var widget = this.getComponent(Widget);
          var target = widget.target || widget.node.parent;
          target && target.on(Node.EventType.SIZE_CHANGED, this.refresh, this);
        };

        _proto.onEnable = function onEnable() {
          this.refresh();
        };

        _proto.refresh = function refresh() {
          gaUtils.stopTween(this._tweenDelay);
          this._tweenDelay = tween(this).delay(0.1).call(this.updateWidget.bind(this)).start();
        };

        _proto.updateWidget = function updateWidget() {
          var widget = this.getComponent(Widget);
          if (!widget) return;
          widget.left = this._defaultLeftPadding;
          widget.right = this._defaultRightPadding;
          widget.updateAlignment();
          var childrenWidget = this.node.getComponentsInChildren(Widget);
          childrenWidget.forEach(function (i) {
            return i.updateAlignment();
          });
        };

        return gaRefreshWidget;
      }(gaComponent)) || _class) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaResizeWindow.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts', './gaBaseConfig.ts', './gaEventsCode.ts', './gaUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createForOfIteratorHelperLoose, cclegacy, _decorator, Canvas, Size, view, game, Game, sys, macro, director, ResolutionPolicy, UITransform, Widget, gaComponent, gaBaseConfig, gaEventsCode, gaUtils;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createForOfIteratorHelperLoose = module.createForOfIteratorHelperLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Canvas = module.Canvas;
      Size = module.Size;
      view = module.view;
      game = module.game;
      Game = module.Game;
      sys = module.sys;
      macro = module.macro;
      director = module.director;
      ResolutionPolicy = module.ResolutionPolicy;
      UITransform = module.UITransform;
      Widget = module.Widget;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "cdba02NfLlO6LWNNSI3BDHK", "gaResizeWindow", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaResizeWindow = exports('default', (_dec = ccclass('gaResizeWindow'), _dec2 = property(Canvas), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaResizeWindow, _gaComponent);

        function gaResizeWindow() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "canvas", _descriptor, _assertThisInitialized(_this));

          _this._visibleSize = new Size();
          _this._onResized = void 0;
          _this._isPortrait = false;
          return _this;
        }

        var _proto = gaResizeWindow.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          this._onResized = this.scaleCanvasByOrientation.bind(this);
          this._isPortrait = gaBaseConfig.designSize.isPortrait;
          view.on('canvas-resize', this.scaleCanvasByOrientation, this);
          game.on(Game.EVENT_SHOW, this.onGameShow, this);

          if (!sys.isNative) {
            if (sys.isMobile) {
              window.addEventListener('orientationchange', this._onResized);
            }

            view.setOrientation(this._isPortrait ? macro.ORIENTATION_PORTRAIT : macro.ORIENTATION_LANDSCAPE);
          }

          if (!this.canvas) {
            this.canvas = this.getComponent(Canvas);
          }

          this.onGameShow();
        };

        _proto.onDestroy = function onDestroy() {
          _gaComponent.prototype.onDestroy.call(this);

          view.targetOff(this);
          game.targetOff(this);

          if (sys.isMobile) {
            window.removeEventListener('orientationchange', this._onResized);
          }
        };

        _proto.start = function start() {
          if (sys.isNative) {
            director.emit("INTEGRATION_SET_CANVAS_ORIENT", 1);
          }
        };

        _proto.update = function update(dt) {
          if (!this._visibleSize.equals(view.getVisibleSize())) {
            this.scaleCanvasByOrientation();
          }
        };

        _proto.onGameShow = function onGameShow() {
          if (sys.isMobile) {
            var eventResize = new Event('gameShow');
            window.dispatchEvent(eventResize);
          }

          this.scaleCanvasByOrientation();
        };

        _proto.scaleCanvasByOrientation = function scaleCanvasByOrientation() {
          if (!this.canvas) {
            this.canvas = this.getComponent(Canvas);
          }

          this.canvas.alignCanvasWithScreen = true;
          view.setOrientation(this._isPortrait ? macro.ORIENTATION_PORTRAIT : macro.ORIENTATION_LANDSCAPE);
          var visibleSize = gaBaseConfig.visibleSize,
              designSize = gaBaseConfig.designSize;
          var designRatio = designSize.width / designSize.height;
          this._visibleSize = view.getVisibleSize();
          var viewPortRatio = this._visibleSize.width / this._visibleSize.height;

          if (viewPortRatio < designRatio) {
            visibleSize.resolutionPolicy = ResolutionPolicy.FIXED_WIDTH;
            view.setDesignResolutionSize(designSize.width, designSize.height, ResolutionPolicy.FIXED_WIDTH);
          } else {
            visibleSize.resolutionPolicy = ResolutionPolicy.FIXED_HEIGHT;
            view.setDesignResolutionSize(designSize.width, designSize.height, ResolutionPolicy.FIXED_HEIGHT);
          }

          var scale = viewPortRatio;

          if (this._isPortrait) {
            var minRatio = designSize.width / designSize.maxWidth;

            if (sys.isMobile) {
              scale = gaUtils.clamp(viewPortRatio, minRatio, designSize.maxRatio);
            } else {
              scale = Math.min(viewPortRatio, designRatio);
            }
          } else {
            var maxRatio = designSize.maxWidth / designSize.height;
            scale = gaUtils.clamp(viewPortRatio, designRatio, maxRatio);
          }

          if (visibleSize.resolutionPolicy == ResolutionPolicy.FIXED_WIDTH) {
            visibleSize.width = designSize.width;
            visibleSize.height = designSize.width / scale;
          } else {
            visibleSize.width = designSize.height * scale;
            visibleSize.height = designSize.height;
          }

          var transform = this.node.getComponent(UITransform);
          transform.width = visibleSize.width;
          transform.height = visibleSize.height;
          var childWidgets = this.node.getComponentsInChildren(Widget);

          for (var _iterator = _createForOfIteratorHelperLoose(childWidgets), _step; !(_step = _iterator()).done;) {
            var widget = _step.value;
            widget.updateAlignment();
          }

          this.emit(gaEventsCode.COMMON.ON_SCREEN_RESIZE, visibleSize);
        };

        return gaResizeWindow;
      }(gaComponent), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "canvas", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaResultData.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _createClass, cclegacy;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "967a5GXT1RIhrbZcoM04tGC", "gaResultData", undefined);

      var gaResultData = exports('default', /*#__PURE__*/function () {
        function gaResultData(data) {
          var _this = this;

          this._totalWinAmount = 0;
          this._bettingWinAmount = 0;
          this.sessionId = "";
          this.commandId = "";
          var wg = data.wg,
              wa = data.wa;

          if (wg) {
            var wgValues = wg.split(',');
            wgValues.forEach(function (value) {
              return _this._bettingWinAmount += parseFloat(value.split(';')[1]);
            });
          }

          if (wa) {
            this._totalWinAmount = wa;
          }

          this.sessionId = data.id;
          this.commandId = data.cId;
        }

        _createClass(gaResultData, [{
          key: "totalWinAmount",
          get: function get() {
            return this._totalWinAmount;
          }
        }, {
          key: "bettingWinAmount",
          get: function get() {
            return this._bettingWinAmount;
          }
        }]);

        return gaResultData;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaResultState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaStateView.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, gaBaseConfig, gaStateView;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaStateView = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "e9597po1dRDfagTBvJ5t/f6", "gaResultState", undefined);

      var ccclass = _decorator.ccclass;
      var gaResultState = exports('default', (_dec = ccclass("gaResultState"), _dec(_class = /*#__PURE__*/function (_gaStateView) {
        _inheritsLoose(gaResultState, _gaStateView);

        function gaResultState() {
          return _gaStateView.apply(this, arguments) || this;
        }

        _createClass(gaResultState, [{
          key: "stateName",
          get: //#region ------------------------------------------------------------------ Declare variables
          function get() {
            return gaBaseConfig.instance.GAME_STATE.RESULT;
          } //#endregion
          //#region  ------------------------------------------------------------------ public functions
          //#endregion

        }]);

        return gaResultState;
      }(gaStateView)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaRoundData.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "0df51hE+QRGN7CaijYl6Cce", "gaRoundData", undefined);

      var gaRoundData = exports('default', function gaRoundData(data) {
        this.userActive = undefined;
        this.maxBetConfigs = undefined;
        this.oddsConfigs = undefined;
        this.sessionId = undefined;
        this.commandId = undefined;
        this.gameNumber = undefined;
        this.sessionId = data.id;
        this.commandId = data.cId;
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaRoundInfo.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataStore.ts', './gaEventsCode.ts', './gaCountPoint.ts', './gaComponent.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, gaDataStore, gaEventsCode, gaCountPoint, gaComponent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaCountPoint = module.default;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "e2a06DECslLv6QlKudhpnrq", "gaRoundInfo", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaRoundInfo = exports('default', (_dec = ccclass('gaRoundInfo'), _dec2 = property(Label), _dec3 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaRoundInfo, _gaComponent);

        function gaRoundInfo() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this; //#region ------------------------------------------------------------------ Declare variables

          _initializerDefineProperty(_this, "gameNumber", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "userOnline", _descriptor2, _assertThisInitialized(_this));

          _this.counterUserOnline = null;
          return _this;
        }

        var _proto = gaRoundInfo.prototype; //#endregion
        //#region  --------------------------------------------------------------- Component functions

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          if (this.userOnline) {
            this.counterUserOnline = new gaCountPoint(this.userOnline, false);
          }
        };

        _proto.start = function start() {
          this.setGameNumber(null);
          this.setUserOnline(1);
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.STATE.START_BETTING, this.updateRoundInfo);
          this.register(gaEventsCode.VIEW.SET_GAME_NUMBER, this.setGameNumber);
          this.register(gaEventsCode.VIEW.SET_USER_ONLINE, this.setUserOnline);
        };

        _proto.updateRoundInfo = function updateRoundInfo() {
          this.setGameNumber(gaDataStore.instance.gameNumber);
          this.setUserOnline(gaDataStore.instance.userActive);
        };

        _proto.setGameNumber = function setGameNumber(gameNum) {
          if (this.gameNumber) {
            this.gameNumber.string = gameNum ? "#" + gameNum : '';
          }
        };

        _proto.setUserOnline = function setUserOnline(userOnline) {
          if (this.counterUserOnline) {
            this.counterUserOnline.count(Math.max(1, userOnline), 0.2);
          }
        } //#endregion
        ;

        return gaRoundInfo;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "gameNumber", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "userOnline", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSafeArea.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventsCode.ts', './gaScreenUtils.ts', './gaEventEmitter.ts', './gaBaseConfig.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, CCBoolean, Widget, Component, gaEventsCode, gaScreenUtils, gaEventEmitter, gaBaseConfig;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      CCBoolean = module.CCBoolean;
      Widget = module.Widget;
      Component = module.Component;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaScreenUtils = module.default;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

      cclegacy._RF.push({}, "678e7sgYBJNx4F95F4cqe3A", "gaSafeArea", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaSafeArea = exports('default', (_dec = ccclass('gaSafeArea'), _dec2 = property(CCBoolean), _dec3 = property(CCBoolean), _dec4 = property(CCBoolean), _dec5 = property(CCBoolean), _dec6 = property(CCBoolean), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaSafeArea, _Component);

        function gaSafeArea() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "safeBottom", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "safeLeft", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "safeRight", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "safeLeftCurve", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "safeRightCurve", _descriptor5, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaSafeArea.prototype;

        _proto.onLoad = function onLoad() {
          gaEventEmitter.instance.registerEvent(gaEventsCode.COMMON.ON_SCREEN_RESIZE, this.setSafeArea, this);
        };

        _proto.onEnable = function onEnable() {
          this.setSafeArea();
        };

        _proto.onDestroy = function onDestroy() {
          gaEventEmitter.instance && gaEventEmitter.instance.removeEvents(this);
        };

        _proto.setSafeArea = function setSafeArea() {
          var notchSize = gaScreenUtils.getNotchSize();

          var widget = this._getWidget();

          widget.top = widget.bottom = widget.left = widget.right = 0;

          if (notchSize > 0) {
            if (gaBaseConfig.designSize.isPortrait && this.safeLeft) {
              widget.top += notchSize;
            } else {
              var orientation = gaScreenUtils.getOrientation();

              if (orientation == -90) {
                if (this.safeLeftCurve) widget.left += gaScreenUtils.SAFE_CURVE_IPX;
                if (this.safeRight) widget.right += notchSize;
              } else if ((orientation == 90 || orientation == 0) && this.safeLeft) {
                if (this.safeLeft) widget.left += notchSize;
                if (this.safeRightCurve) widget.right += gaScreenUtils.SAFE_CURVE_IPX;
              }
            }
          }

          if (this.safeBottom) {
            widget.bottom += gaScreenUtils.getSafeY();
          }

          widget.updateAlignment();
          var childrenWidget = this.node.getComponentsInChildren(Widget);
          childrenWidget.forEach(function (i) {
            return i.updateAlignment();
          });
        };

        _proto._getWidget = function _getWidget() {
          var widget = this.getComponent(Widget) || this.addComponent(Widget);
          widget.isAlignTop = true;
          widget.isAlignBottom = true;
          widget.isAlignLeft = true;
          widget.isAlignRight = true;
          return widget;
        };

        return gaSafeArea;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "safeBottom", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "safeLeft", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "safeRight", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "safeLeftCurve", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "safeRightCurve", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaScreenUtils.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _createClass, cclegacy, sys;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      sys = module.sys;
    }],
    execute: function () {
      cclegacy._RF.push({}, "533a9aT5xJPtbr12aY60Ci+", "gaScreenUtils", undefined);

      var gaScreenUtils = exports('default', /*#__PURE__*/function () {
        function gaScreenUtils() {}

        gaScreenUtils.isIPhoneX = function isIPhoneX() {
          var iPhone = sys.os == sys.OS.IOS;
          var aspect = window.screen.width / window.screen.height;

          if (iPhone && aspect.toFixed(3) === "0.462") {
            return true;
          }

          return false;
        };

        gaScreenUtils.getSafeY = function getSafeY() {
          if (sys.isMobile) {
            if (sys.isBrowser && gaScreenUtils.isIPhoneX()) {
              return gaScreenUtils.isLandscapeScreen() ? 40 : 0;
            } else {
              var safeArea = sys.getSafeAreaRect();
              return safeArea.y;
            }
          }

          return 0;
        };

        gaScreenUtils.getOrientation = function getOrientation() {
          if (sys.isBrowser) {
            return window.orientation;
          } else if (jsb && jsb.device && typeof jsb.device.getDeviceOrientation == 'function') {
            return jsb.device.getDeviceOrientation();
          }

          return 0;
        };

        gaScreenUtils.getNotchSize = function getNotchSize(extend) {
          gaScreenUtils.SAFE_CURVE_IPX = gaScreenUtils.NotchSize / 2;
          var extValue = extend ? gaScreenUtils.SAFE_CURVE_IPX : 0;

          if (sys.isMobile && sys.isBrowser) {
            if (!window || !document || !CSS) return 0;

            if (CSS.supports('padding-bottom: env(safe-area-inset-left)')) {
              var div = document.createElement('div');
              div.style.paddingLeft = 'env(safe-area-inset-left)';
              div.style.paddingTop = 'env(safe-area-inset-top)';
              div.style.paddingRight = 'env(safe-area-inset-right)';
              div.style.paddingBottom = 'env(safe-area-inset-bottom)';
              document.body.appendChild(div);
              var calculatedPaddingLeft = parseInt(window.getComputedStyle(div).paddingLeft, 10);
              var calculatedPaddingTop = parseInt(window.getComputedStyle(div).paddingTop, 10);
              var calculatedPaddingRight = parseInt(window.getComputedStyle(div).paddingRight, 10);
              document.body.removeChild(div);

              if (gaScreenUtils.isIPhoneX() && calculatedPaddingLeft > 0) {
                return gaScreenUtils.NotchSize + extValue;
              }

              if (!gaScreenUtils.isLandscapeScreen()) {
                if (calculatedPaddingTop > 0) {
                  return gaScreenUtils.NotchSize + extValue;
                }
              } else if (calculatedPaddingLeft > 0 || calculatedPaddingRight > 0) {
                return gaScreenUtils.NotchSize + extValue;
              }
            }
          }

          var safeArea = sys.getSafeAreaRect();

          if (safeArea.x > 0) {
            return gaScreenUtils.NotchSize + extValue;
          }

          return 0;
        };

        gaScreenUtils.isLandscapeScreen = function isLandscapeScreen() {
          if (sys.isBrowser) {
            if (window.matchMedia("(orientation: landscape)").matches) {
              return true;
            }

            if (window.matchMedia("(orientation: portrait)").matches) {
              return false;
            }

            return false;
          }

          return true;
        };

        _createClass(gaScreenUtils, null, [{
          key: "NotchSize",
          get: function get() {
            return sys.os == sys.OS.IOS ? 67 : 55;
          }
        }]);

        return gaScreenUtils;
      }());
      gaScreenUtils.SAFE_CURVE_IPX = 20;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaScrollItem.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, gaComponent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "e1d9fjPLYVFQZ2DpUSaMr3/", "gaScrollItem", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaScrollItem = exports('default', (_dec = ccclass('gaScrollItem'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaScrollItem, _gaComponent);

        function gaScrollItem() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "textLabel", _descriptor, _assertThisInitialized(_this));

          _this.value = 0;
          return _this;
        }

        var _proto = gaScrollItem.prototype;

        _proto.setLabelStr = function setLabelStr(str) {
          this.textLabel.string = str;
        };

        return gaScrollItem;
      }(gaComponent), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "textLabel", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSideMenu.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaCommon.ts', './gaEventsCode.ts', './gaScreenUtils.ts', './gaTweenUtils.ts', './gaComponent.ts', './gameCommonUtils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, v3, UITransform, gaEventsCode, gaScreenUtils, sequence, callFunc, moveTo, fadeTo, fadeOut, gaComponent, gameCommonUtils;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      v3 = module.v3;
      UITransform = module.UITransform;
    }, null, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaScreenUtils = module.default;
    }, function (module) {
      sequence = module.sequence;
      callFunc = module.callFunc;
      moveTo = module.moveTo;
      fadeTo = module.fadeTo;
      fadeOut = module.fadeOut;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gameCommonUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

      cclegacy._RF.push({}, "02846CiCzlI4Jrho+/MO/y0", "gaSideMenu", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaSideMenu = exports('default', (_dec = ccclass('gaSideMenu'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaSideMenu, _gaComponent);

        function gaSideMenu() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "nodeMove", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnShow", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnHide", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "overlay", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnExitGame", _descriptor5, _assertThisInitialized(_this));

          _this.OPACITY_SHOW_OVERLAY = 150;
          _this.isHide = false;
          _this.isActionDone = false;
          _this.menuShowPos = null;
          return _this;
        }

        var _proto = gaSideMenu.prototype;

        _proto.onLoad = function onLoad() {
          var _this2 = this;

          _gaComponent.prototype.onLoad.call(this);

          this.menuShowPos = this.nodeMove.getPosition().clone();
          this.btnExitGame && (this.btnExitGame.active = gameCommonUtils.checkConditionCloseGameIframe());

          if (this.overlay) {
            this.overlay.on(Node.EventType.TOUCH_START, function () {
              _this2.transitionMenu();
            });
          }
        };

        _proto.start = function start() {
          this.resetSideMenu();
        };

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.COMMON.ON_SCREEN_RESIZE, this.onScreenResize);
        };

        _proto.onScreenResize = function onScreenResize() {
          if (this.isHide) {
            this.resetSideMenu();
          }
        };

        _proto.getPosShow = function getPosShow() {
          return v3(this.menuShowPos.x, this.menuShowPos.y);
        };

        _proto.getPosHide = function getPosHide() {
          var frameWidth = this.nodeMove.getComponent(UITransform).width;
          return v3(this.menuShowPos.x - frameWidth - gaScreenUtils.getNotchSize(), this.menuShowPos.y);
        };

        _proto.resetSideMenu = function resetSideMenu() {
          this.unschedule(this.transitionMenu);
          this.isHide = true;
          this.overlay && (this.overlay.active = false);
          this.btnShow.active = true;
          this.btnHide.active = false;
          this.nodeMove.active = false;
          this.nodeMove.stopAllActions();
          this.nodeMove.setPosition(this.getPosHide());
          this.isActionDone = true;
        };

        _proto.onInfoClick = function onInfoClick() {
          if (!this.isActionDone) {
            return;
          }

          this.soundPlayer.playSFXClick();
          this.emit(gaEventsCode.POPUP.SHOW_POPUP_INFO);
          this.unscheduleAllCallbacks();
          this.transitionMenu();
        };

        _proto.onSettingClick = function onSettingClick() {
          if (!this.isActionDone) {
            return;
          }

          this.soundPlayer.playSFXClick();
          this.emit(gaEventsCode.POPUP.SHOW_POPUP_SETTING);
          this.unscheduleAllCallbacks();
          this.transitionMenu();
        };

        _proto.onHistoryBetClick = function onHistoryBetClick() {
          if (!this.isActionDone) {
            return;
          }

          this.soundPlayer.playSFXClick();
          this.emit(gaEventsCode.POPUP.SHOW_POPUP_HISTORY_BET);
          this.unscheduleAllCallbacks();
          this.transitionMenu();
        };

        _proto.onHistoryJPClick = function onHistoryJPClick() {
          if (!this.isActionDone) {
            return;
          }

          this.soundPlayer.playSFXClick();
          this.emit(gaEventsCode.POPUP.SHOW_POPUP_HISTORY_JP);
          this.unscheduleAllCallbacks();
          this.transitionMenu();
        };

        _proto.onExitGameClick = function onExitGameClick() {
          this.soundPlayer.playSFXClick();
          this.emit(gaEventsCode.ACTION.LEAVE_GAME);
        };

        _proto.transitionMenu = function transitionMenu(evt) {
          var _this3 = this;

          if (!this.isActionDone) {
            return;
          }

          if (evt) {
            // for click button menu
            this.soundPlayer.playSFXClick();
          }

          this.unschedule(this.transitionMenu);
          this.isActionDone = false;
          this.isHide = !this.isHide;
          this.btnShow.active = this.isHide;
          this.btnHide.active = !this.isHide;
          var pos;
          var actionDone = null;

          if (this.isHide) {
            pos = this.getPosHide();
            this.playFadeOutOverlay();

            actionDone = function actionDone() {
              _this3.isActionDone = true;

              _this3.resetSideMenu();
            };
          } else {
            pos = this.getPosShow();
            this.scheduleOnce(this.transitionMenu, 3);
            this.playFadeInOverlay();
            this.nodeMove.active = true;

            actionDone = function actionDone() {
              _this3.isActionDone = true;
            };
          }

          var baseEasing = this.isHide ? "sineIn" : "sineOut";
          this.nodeMove.stopAllActions();
          this.nodeMove.runAction(sequence(moveTo(0.3, pos, baseEasing), callFunc(actionDone)));
        };

        _proto.playFadeInOverlay = function playFadeInOverlay() {
          if (this.overlay) {
            this.overlay.active = true;
            this.overlay.stopAllActions();
            this.overlay.runAction(fadeTo(0.3, this.OPACITY_SHOW_OVERLAY));
          }
        };

        _proto.playFadeOutOverlay = function playFadeOutOverlay() {
          var _this4 = this;

          if (this.overlay) {
            this.overlay.stopAllActions();
            this.overlay.runAction(sequence(fadeOut(0.3), callFunc(function () {
              _this4.overlay.active = false;
            })));
          }
        };

        return gaSideMenu;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "nodeMove", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "btnShow", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "btnHide", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "overlay", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "btnExitGame", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSideNotify.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './gaBaseConfig.ts', './gaEventsCode.ts', './gaCustomDataType.ts', './gaSideNotifyItem.ts'], function (exports) {
  var _inheritsLoose, _createClass, _applyDecoratedDescriptor, _initializerDefineProperty, _assertThisInitialized, cclegacy, gaEventEmitter, gaBaseConfig, gaEventsCode, gaNotifyData, gaSideNotifyItem;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaNotifyData = module.gaNotifyData;
    }, function (module) {
      gaSideNotifyItem = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "98c93HymipDJrZAjC+Dtlwv", "gaSideNotify", undefined);

      var _cc$_decorator = cc._decorator,
          ccclass = _cc$_decorator.ccclass,
          property = _cc$_decorator.property;
      var gaSideNotify = exports('default', (_dec = property(cc.Node), _dec2 = property(cc.Prefab), _dec3 = property(cc.Prefab), ccclass(_class = (_class2 = /*#__PURE__*/function (_cc$Component) {
        _inheritsLoose(gaSideNotify, _cc$Component);

        function gaSideNotify() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _cc$Component.call.apply(_cc$Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "contentNode", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "itemJackpotPrefab", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "itemBigWinPrefab", _descriptor3, _assertThisInitialized(_this));

          _this._isShow = false;
          _this._lstMsgs = [];
          _this._notifyJackpotItem = null;
          _this._notifyBigWinItem = null;
          _this._isFirstShow = true;
          _this.allowShowNotify = true;
          _this.NOTIFY_CONFIG = {
            TIME_MOVE: 0.25,
            TIME_IDLE_JP: 3.5,
            TIME_IDLE_BGW: 2.5
          };
          return _this;
        }

        var _proto = gaSideNotify.prototype;

        _proto.onLoad = function onLoad() {
          if (!this.contentNode) {
            this.contentNode = this.node;
          }

          this.node.active = false;
          this.initItems();
        };

        _proto.initItems = function initItems() {
          var itemJackpot = cc.instantiate(this.itemJackpotPrefab);
          itemJackpot.setParent(this.contentNode);
          this._notifyJackpotItem = itemJackpot.getComponent(gaSideNotifyItem);

          this._notifyJackpotItem.initObj();

          var itemBigWin = cc.instantiate(this.itemBigWinPrefab);
          itemBigWin.setParent(this.contentNode);
          this._notifyBigWinItem = itemBigWin.getComponent(gaSideNotifyItem);

          this._notifyBigWinItem.initObj();
        };

        _proto.onEventHide = function onEventHide() {
          this._lstMsgs.length = 0;
          this._isFirstShow = true;
          this.reset();
        };

        _proto.onViewInGame = function onViewInGame() {
          this.allowShowNotify = false;
          this.reset();
        };

        _proto.onEnableNotify = function onEnableNotify() {
          this.allowShowNotify = true;

          if (this._lstMsgs.length > 0) {
            this.node.stopAllActions();
            this._isShow = true;
            this.node.active = true;
            this.onStackMessage();
          } else {
            this.hide();
          }
        };

        _proto.reset = function reset() {
          this.node.stopAllActions();
          this._notifyJackpotItem && this._notifyJackpotItem.reset();
          this._notifyBigWinItem && this._notifyBigWinItem.reset();
          this._isShow = false;
        };

        _proto.show = function show(data) {
          if (!this.allowShowNotify) return;
          var lstNotify = this.getFormatData(data);

          if (this._lstMsgs.length >= gaBaseConfig.instance.NOTIFY_JACKPOT.limited_stack_size - lstNotify.length + 1) {
            this._lstMsgs.splice(0, lstNotify.length);
          }

          this._lstMsgs = this._lstMsgs.concat(lstNotify);
          this.sortData(this._lstMsgs);

          if (!this._isShow) {
            this._isShow = true;
            this.node.active = true;
            this.onStackMessage();
          }
        };

        _proto.getFormatData = function getFormatData(data) {
          var lstNotify = [];

          if (data.jpAmt) {
            // jackpot
            var item = new gaNotifyData(data);
            item.winAmount = data.jpAmt;
            item.type = gaBaseConfig.instance.NOTIFY_TYPE.JACKPOT;
            lstNotify.push(item);
          }

          if (data.wat) {
            // bigwin
            var _item = new gaNotifyData(data);

            _item.winAmount = data.wat;
            _item.type = gaBaseConfig.instance.NOTIFY_TYPE.BIGWIN;
            lstNotify.push(_item);
          }

          return lstNotify;
        };

        _proto.sortData = function sortData(lstMessage) {
          var types = gaBaseConfig.instance.NOTIFY_TYPE;
          lstMessage.sort(function (a, b) {
            return a.type == types.JACKPOT && b.type != types.JACKPOT ? -1 : a.type != types.JACKPOT && b.type == types.JACKPOT ? 1 : 0;
          });
          lstMessage.sort(function (a, b) {
            return a.type == types.JACKPOT && b.type == types.JACKPOT ? a.winAmount > b.winAmount ? -1 : a.winAmount < b.winAmount ? 1 : 0 : 0;
          });
        };

        _proto.onStackMessage = function onStackMessage() {
          if (this._lstMsgs.length > 0) {
            var data = this._lstMsgs.shift();

            this.play(data);
          } else {
            this.hide();
          }
        };

        _proto.play = function play(data) {
          var _this2 = this;

          var _this$NOTIFY_CONFIG = this.NOTIFY_CONFIG,
              TIME_MOVE = _this$NOTIFY_CONFIG.TIME_MOVE,
              TIME_IDLE_JP = _this$NOTIFY_CONFIG.TIME_IDLE_JP,
              TIME_IDLE_BGW = _this$NOTIFY_CONFIG.TIME_IDLE_BGW;
          var timeIdle = data.type == gaBaseConfig.instance.NOTIFY_TYPE.JACKPOT ? TIME_IDLE_JP : TIME_IDLE_BGW;
          var notifyItem = data.type == gaBaseConfig.instance.NOTIFY_TYPE.JACKPOT ? this._notifyJackpotItem : this._notifyBigWinItem;

          if (this._isFirstShow) {
            this._isFirstShow = false;
            notifyItem.showItem(data, TIME_MOVE, timeIdle, true, this);
          } else {
            notifyItem.showItem(data, TIME_MOVE, timeIdle, false, this);
          }

          gaEventEmitter.instance.emit(gaEventsCode.NOTIFY.ON_SHOW);
          this.node.stopAllActions();
          cc.tween(this.node).delay(timeIdle + TIME_MOVE * 2 + 0.2).call(function () {
            _this2.onStackMessage();
          }).start();
        };

        _proto.hide = function hide() {
          if (this.node.active) {
            gaEventEmitter.instance.emit(gaEventsCode.NOTIFY.ON_HIDE);
          }

          this._isFirstShow = true;
          this._isShow = false;
          this.node.stopAllActions();
          this.node.active = false;
        };

        _createClass(gaSideNotify, [{
          key: "isEmpty",
          get: function get() {
            return this._lstMsgs.length == 0;
          }
        }]);

        return gaSideNotify;
      }(cc.Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "contentNode", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "itemJackpotPrefab", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "itemBigWinPrefab", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSideNotifyItem.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaUtils.ts'], function (exports) {
  var _inheritsLoose, _applyDecoratedDescriptor, _initializerDefineProperty, _assertThisInitialized, cclegacy, gaUtils;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "60d31DI43tHZI5surZ8oPcW", "gaSideNotifyItem", undefined);

      var _cc$_decorator = cc._decorator,
          ccclass = _cc$_decorator.ccclass,
          property = _cc$_decorator.property;
      var gaSideNotifyItem = exports('default', (_dec = property(cc.Label), _dec2 = property(cc.Label), ccclass(_class = (_class2 = /*#__PURE__*/function (_cc$Component) {
        _inheritsLoose(gaSideNotifyItem, _cc$Component);

        function gaSideNotifyItem() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _cc$Component.call.apply(_cc$Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "userName", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "winAmount", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaSideNotifyItem.prototype;

        _proto.initObj = function initObj() {
          this.reset();
        };

        _proto.updateData = function updateData(notifyData) {
          // Override here
          this.userName.string = gaUtils.formatUserName(notifyData.username).toUpperCase();
          this.winAmount.string = gaUtils.formatMoney(notifyData.winAmount);
        };

        _proto.showItem = function showItem(data, timeMove, timeIdle, isFirstShow, controller) {
          var _this2 = this;

          if (isFirstShow === void 0) {
            isFirstShow = false;
          }

          var posStart = cc.v2(-this.node.width - 50, 0);
          var posEnd = cc.v2(10, 0);
          this.node.stopAllActions();

          var checkLastItem = function checkLastItem() {
            if (controller.isEmpty) {
              cc.tween(_this2.node).to(timeMove, {
                scaleY: 0,
                opacity: 0
              }, {
                easing: "backIn"
              }).start();
            } else {
              cc.tween(_this2.node).to(timeMove, {
                position: posStart
              }).start();
            }
          };

          if (isFirstShow) {
            this.node.active = true;
            this.node.position = posEnd;
            this.node.scale = 0;
            this.node.opacity = 1;
            cc.tween(this.node).call(function () {
              _this2.updateData(data);
            }).to(timeMove / 2, {
              scale: 1.15,
              opacity: 255
            }, {
              easing: "backOut"
            }).to(timeMove / 2, {
              scale: 1
            }).delay(timeIdle).call(checkLastItem).start();
          } else {
            this.node.active = true;
            this.node.setPosition(posStart);
            this.node.scale = 1;
            this.node.opacity = 255;
            cc.tween(this.node).call(function () {
              _this2.updateData(data);
            }).to(timeMove, {
              position: posEnd
            }).delay(timeIdle).call(checkLastItem).start();
          }
        };

        _proto.reset = function reset() {
          this.node.stopAllActions();
          this.node.active = false;
        };

        return gaSideNotifyItem;
      }(cc.Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "userName", [_dec], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "winAmount", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSocketManager.ts", ['cc', './gaEventEmitter.ts', './gaLocalize.ts', './gaBaseConfig.ts', './gaCommon.ts', './gaEventsCode.ts', './gaLogger.ts', './gaPromise.ts', './gaCommandID.ts', './gaNetworkError.ts', './gaSocketTypes.ts', './EventCode.ts', './connectNetwork.ts'], function (exports) {
  var cclegacy, gaEventEmitter, gaLocalize, gaBaseConfig, network, gaEventsCode, logger, gaPromise, gaCommandID, gaNetworkError, SocketStatus, EventCode, connectNetwork;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaLocalize = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      network = module.network;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaPromise = module.gaPromise;
    }, function (module) {
      gaCommandID = module.default;
    }, function (module) {
      gaNetworkError = module.gaNetworkError;
    }, function (module) {
      SocketStatus = module.SocketStatus;
    }, function (module) {
      EventCode = module.default;
    }, function (module) {
      connectNetwork = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "8ba7fyM+X9NYrom8TQ4CIAF", "gaSocketManager", undefined);

      var MessageManager = network.MessageManager,
          CommandManager = network.CommandManager,
          EventManager = network.EventManager,
          PlayerInfoStateManager = network.PlayerInfoStateManager,
          SocketManager = network.SocketManager;
      var messageManager = MessageManager.getInstance();
      var playerInfoStateManager = PlayerInfoStateManager.getInstance();
      var gaSocketManager = exports('gaSocketManager', /*#__PURE__*/function () {
        function gaSocketManager(gameId, onErrorPushed, onWalletUpdated) {
          var _this = this;

          this._commandManager = void 0;
          this._eventManager = void 0;
          this._socketStatus = void 0;
          this._messageDisconnected = '';
          this._handleUserLogout = void 0;
          this._handleWalletUpdated = void 0;
          this._handleErrorPushed = void 0;
          this._firstInitSocket = true;
          this._gameId = void 0;
          this._betCmdId = void 0;
          this._betEvent = void 0;
          logger.warn("gaSocketManager created");
          this._gameId = gameId;
          this._socketStatus = SocketStatus.Initialized;

          this._handleUserLogout = function () {
            _this._socketStatus = SocketStatus.Disconnected;
            gaBaseConfig.isLoginOnOtherDevice = true;
            _this._messageDisconnected = gaLocalize.instance.ANOTHER_ACCOUNT;

            _this._onForceDisconnect(_this._messageDisconnected);
          };

          this._handleWalletUpdated = function () {
            return onWalletUpdated();
          };

          this._handleErrorPushed = function (errorData) {
            return onErrorPushed(errorData);
          };

          this._commandManager = new CommandManager(this._gameId, 1, 'cId');
          this._eventManager = new EventManager(false, gaCommandID.instance.mapAcronym);
          this._betEvent = gaCommandID.R_PLAY_GAME;
          messageManager.registerGame(this._gameId, {
            onAck: this._onAck.bind(this),
            onCannotSendMessage: this._onCannotSendMessage.bind(this)
          }, {
            onConnected: this._onConnected.bind(this),
            onCannotConnect: this._onDisconnect.bind(this),
            onCannotAuthen: this._onCannotAuthen.bind(this),
            onNetworkStatus: this._onNetworkStatus.bind(this),
            onNetworkWarning: this._onNetworkWarning.bind(this),
            onShowPopupDisconnected: this._onShowPopupDisconnected.bind(this),
            onPong: this._onPong.bind(this),
            onEvent: this._onEvent.bind(this)
          });
          playerInfoStateManager.registerEventOnce('user-logged-out', this._handleUserLogout);
          playerInfoStateManager.registerEvent('wallet-updated', this._handleWalletUpdated);
        }

        var _proto = gaSocketManager.prototype;

        _proto.setBetEvent = function setBetEvent(betEvent) {
          this._betEvent = betEvent;
        };

        _proto.isReady = function isReady() {
          return messageManager._socketManager && messageManager._socketManager.isAbleSendingData();
        };

        _proto.checkReady = function checkReady() {
          if (this.isReady() && this._socketStatus == SocketStatus.Initialized) {
            this._onConnected();

            return true;
          }
        };

        _proto.subscribe = function subscribe(channel) {
          this._commandManager.subscribe(channel);
        };

        _proto.unSubscribe = function unSubscribe(channel) {
          this._commandManager.unSubscribe(channel);
        };

        _proto.sendMessage = function sendMessage(payload) {
          return this._executeCommand(payload);
        };

        _proto.closeAndCleanUp = function closeAndCleanUp() {
          this.clearPendingCommands();
          this._commandManager && this._commandManager.cleanUp();
          this._eventManager && this._eventManager.cleanUp();
          playerInfoStateManager.removeEvent('user-logged-out', this._handleUserLogout);
          playerInfoStateManager.removeEvent('wallet-updated', this._handleUserLogout);
          messageManager && messageManager.unregisterGame(this._gameId);

          if (gaBaseConfig.isIFrame) {
            messageManager && messageManager.closeAndCleanUp();
          }
        };

        _proto.clearPendingCommands = function clearPendingCommands() {
          this._eventManager.removeAllEventListeners();

          this._eventManager.removeWaitingQueue();

          this._commandManager.clearRemainingCommand();
        };

        _proto._executeCommand = function _executeCommand(payload) {
          var _this2 = this;

          return new gaPromise(function (resolve, reject) {
            switch (_this2._socketStatus) {
              case SocketStatus.CanNotAuthenticate:
              case SocketStatus.Disconnected:
              case SocketStatus.Reconnecting:
                return reject(gaNetworkError.disconnected('Network is unavailable'));
            }

            payload.data = payload.data || {};
            payload.data.tkn = playerInfoStateManager.getToken() || connectNetwork.getToken();
            payload.data.sId = payload.data.serviceId || _this2._gameId;

            var commandStrategy = _this2._buildCommandStrategy(payload.event);

            if (payload.retry === false) {
              commandStrategy.resendCount = 0;
            }

            var commandId = _this2._commandManager.executeCommand(payload, commandStrategy);

            logger.log("gaSocketManager executeCommand", payload);

            if (payload.event === _this2._betEvent) {
              _this2._betCmdId = commandId;
            }

            if (!_this2._isSuccessSendCommandId(commandId)) {
              return reject(gaNetworkError.excecuteFail("Send command fail: event = " + payload.event + ", commandId = " + commandId));
            }

            var respId = gaCommandID.instance.getResponseCMD(payload.event);

            if (!respId) {
              return resolve(commandId);
            }

            var eventStrategy = _this2._buildEventStrategy(payload.event);

            _this2._eventManager.waitForEvent(eventStrategy.timeWaitForEvent, function (eventData) {
              var isCorrect = false;

              if (eventData.event === respId) {
                var data = eventData.data;

                if (data.cId == commandId) {
                  resolve(eventData.data);
                  isCorrect = true;
                }
              } else if (eventData.event === gaCommandID.ERROR_PUSH) {
                var _data = eventData.data;

                if (Array.isArray(_data) && _data[0] && _data[0].cId == commandId) {
                  reject(gaNetworkError.responseError(eventData));
                  isCorrect = true;
                }
              }

              return isCorrect;
            }, function () {
              gaEventEmitter.instance.emit(EventCode.SERVER.ERROR); // reject(gaNetworkError.timeout(`Request timeout:\n\t- Wait for event: ${respId}\n\t- Payload: ${JSON.stringify(payload)}`));
            });
          });
        };

        _proto._isSuccessSendCommandId = function _isSuccessSendCommandId(commandId) {
          var overLimited = commandId === CommandManager.COMMAND_FAILED_CONC_OVER_LIMIT;
          var isDuplicated = commandId === CommandManager.COMMAND_FAILED_DUPLICATE;
          return commandId && !(overLimited && isDuplicated);
        };

        _proto._buildEventStrategy = function _buildEventStrategy(commandType) {
          if (commandType == 'glt') {
            return {
              timeWaitForEvent: 5000
            };
          }

          return {
            timeWaitForEvent: 10000
          };
        };

        _proto._buildCommandStrategy = function _buildCommandStrategy(event) {
          var command;

          switch (event) {
            case 'pa':
              command = {
                resendCount: 0,
                shouldWaitForACK: false,
                canBeDuplicated: true
              };
              break;

            case 'jg':
              command = {
                resendCount: 100,
                shouldWaitForACK: true,
                canBeDuplicated: false
              };
              break;

            default:
              command = {
                resendCount: 3,
                shouldWaitForACK: true,
                canBeDuplicated: false
              };
              break;
          }

          return command;
        };

        _proto._onAck = function _onAck() {
          this._commandManager.onAck.apply(this._commandManager, arguments);
        };

        _proto._onCannotSendMessage = function _onCannotSendMessage() {
          logger.warn("gaSocketManager onCannotSendMessage");

          this._commandManager.onCannotSendMessage.apply(this._commandManager, arguments);
        };

        _proto._onConnected = function _onConnected() {
          logger.warn("gaSocketManager onConnected");
          if (this._socketStatus == SocketStatus.CanNotAuthenticate) return;

          if (playerInfoStateManager && playerInfoStateManager.userId != null) {
            this._socketStatus = SocketStatus.Connected;

            this._handleWalletUpdated();
          }

          this._eventManager.onConnected();

          if (this._firstInitSocket) {
            this._firstInitSocket = false;
            gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_OPEN);
          } else {
            gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_RECONNECT);
          }

          this._commandManager.clearRemainingCommand();

          gaEventEmitter.instance.emit(gaEventsCode.COMMON.NETWORK_STATUS_INFO, SocketStatus.Connected);
        };

        _proto._onCannotAuthen = function _onCannotAuthen() {
          logger.error("gaSocketManager onCannotAuthen");
          this._socketStatus = SocketStatus.CanNotAuthenticate;
          gaEventEmitter.instance.emit(gaEventsCode.NETWORK.CANNOT_AUTHEN);
          this.closeAndCleanUp();
        };

        _proto._onDisconnect = function _onDisconnect() {
          logger.error("gaSocketManager onDisconnect");
          if (this._socketStatus == SocketStatus.Initialized) return;
          var isReconnecting = this._socketStatus == SocketStatus.Reconnecting;
          this._socketStatus = SocketStatus.Disconnected;
          this.clearPendingCommands();
          gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_DISCONNECT);
          gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_CLOSE, {
            isReconnectFailed: isReconnecting
          });
          gaEventEmitter.instance.emit(gaEventsCode.COMMON.NETWORK_STATUS_INFO, SocketStatus.Disconnected);
        };

        _proto._onNetworkStatus = function _onNetworkStatus(status) {
          logger.warn("gaSocketManager onNetworkStatus", status);

          switch (status) {
            case SocketManager.POOR_CONNECTION:
              this._socketStatus = SocketStatus.Reconnecting;
              gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_TEMP_DISCONNECT);
              break;
          }

          gaEventEmitter.instance.emit(gaEventsCode.COMMON.NETWORK_STATUS_INFO, status);
        };

        _proto._onNetworkWarning = function _onNetworkWarning(status) {
          logger.warn("gaSocketManager onNetworkWarning", status);
          this._socketStatus = SocketStatus.Reconnecting;
          this.clearPendingCommands();

          switch (status) {
            case SocketManager.DISCONNECTED_CONNECTION:
              this._socketStatus = SocketStatus.Reconnecting;
              gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_BAD_CONDITION);
              break;
          }
        };

        _proto._onForceDisconnect = function _onForceDisconnect(message) {
          logger.error("gaSocketManager onForceDisconnect");
          this._socketStatus = SocketStatus.Disconnected;
          this.clearPendingCommands();
          this._messageDisconnected = message;
          gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_FORCE_DISCONNECT, message);
        };

        _proto._onShowPopupDisconnected = function _onShowPopupDisconnected() {
          logger.error("gaSocketManager onShowPopupDisconnected");
          this._socketStatus = SocketStatus.Disconnected;
          this.clearPendingCommands();
          gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_DISCONNECT);
        };

        _proto._onPong = function _onPong(data) {
          logger.log("gaSocketManager onPong", data);
          gaEventEmitter.instance.emit(gaEventsCode.COMMON.UPDATE_PING, data);

          this._eventManager.onPong.apply(this._eventManager, arguments);
        };

        _proto._onEvent = function _onEvent(eventData) {
          this._eventManager.onEvent.apply(this._eventManager, arguments);

          var event = eventData.event,
              data = eventData.data;
          logger.log("gaSocketManager onEvent", eventData);

          switch (event) {
            case gaCommandID.ERROR_PUSH:
              this._handleErrorPushed(eventData);

              break;

            case gaCommandID.JACKPOT_UPDATE:
              gaEventEmitter.instance.emit(gaEventsCode.JACKPOT.UPDATE_JACKPOT, data);
              break;

            case gaCommandID.JACKPOT_WIN:
              if (this._betCmdId == data.jpInfo[0].cmdId) {
                gaEventEmitter.instance.emit(gaEventsCode.JACKPOT.UPDATE_VALUE_JACKPOT, data.jpInfo[0].jpId, data.jpInfo[0].amt);
              }

              break;

            case gaCommandID.ON_NOTIFY:
              if (this._betCmdId != data.cmdId) {
                gaEventEmitter.instance.emit(gaEventsCode.NOTIFY.SHOW_NOTIFY, data);
              }

              break;

            case EventCode.RESPONSE.NORMAL_GAME:
              gaEventEmitter.instance.emit(EventCode.RESPONSE.NORMAL_GAME, data);
              break;

            case EventCode.RESPONSE.JOIN_GAME_RESULT:
              gaEventEmitter.instance.emit(EventCode.RESPONSE.JOIN_GAME_RESULT, data);
              break;

            case EventCode.RESPONSE.CLAIM_GAME:
              gaEventEmitter.instance.emit(EventCode.RESPONSE.CLAIM_GAME, data);
              break;

            case EventCode.RESPONSE.FREE_GAME:
              gaEventEmitter.instance.emit(EventCode.RESPONSE.FREE_GAME, data);
              break;

            case EventCode.RESPONSE.PLAYER_INFO_UPDATE:
              gaEventEmitter.instance.emit(EventCode.RESPONSE.PLAYER_INFO_UPDATE, data);
              break;

            case EventCode.RESPONSE.FIRED_EVENT:
              gaEventEmitter.instance.emit(EventCode.RESPONSE.FIRED_EVENT, data);
              break;

            case EventCode.SERVER.ERROR:
              console.warn('Error');

            default:
              gaEventEmitter.instance.emit(gaEventsCode.NETWORK.WEB_SOCKET_MESSAGE, eventData);
              break;
          }
        };

        return gaSocketManager;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSocketTypes.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "be6012SnqBEGLRXywHl5V0T", "gaSocketTypes", undefined);

      var SocketStatus = exports('SocketStatus', /*#__PURE__*/function (SocketStatus) {
        SocketStatus[SocketStatus["Initialized"] = 0] = "Initialized";
        SocketStatus[SocketStatus["CanNotAuthenticate"] = 1] = "CanNotAuthenticate";
        SocketStatus[SocketStatus["Connected"] = 2] = "Connected";
        SocketStatus[SocketStatus["Reconnecting"] = 3] = "Reconnecting";
        SocketStatus[SocketStatus["Disconnected"] = 4] = "Disconnected";
        return SocketStatus;
      }({}));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSoundLoadHelper.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './CustomTypeShare.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, _asyncToGenerator, _regeneratorRuntime, cclegacy, _decorator, CCString, Component, assetManager, AudioClip, warn, CustomAudioClip;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
      _asyncToGenerator = module.asyncToGenerator;
      _regeneratorRuntime = module.regeneratorRuntime;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      CCString = module.CCString;
      Component = module.Component;
      assetManager = module.assetManager;
      AudioClip = module.AudioClip;
      warn = module.warn;
    }, function (module) {
      CustomAudioClip = module.CustomAudioClip;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "b9f3d/Hz8NLdIIQSoJHQbmX", "gaSoundLoadHelper", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property,
          executeInEditMode = _decorator.executeInEditMode;
      var gaSoundLoadHelper = exports('default', (_dec = ccclass('gaSoundLoadHelper'), _dec2 = property(CCString), _dec3 = property({
        visible: true,
        serializable: true
      }), _dec(_class = executeInEditMode(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaSoundLoadHelper, _Component);

        function gaSoundLoadHelper() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "assetPath", _descriptor, _assertThisInitialized(_this));

          _this._load = false;
          return _this;
        }

        var _proto = gaSoundLoadHelper.prototype;

        _proto.onLoad = function onLoad() {
          {
            this.destroy();
          }
        };

        _proto.loadAssets = /*#__PURE__*/function () {
          var _loadAssets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
            var results, soundPlayer, index, element;
            return _regeneratorRuntime().wrap(function _callee$(_context) {
              while (1) switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return window['Editor'].Message.request('asset-db', 'query-assets', {
                    pattern: this.assetPath + "/**/*.mp3"
                  });

                case 2:
                  results = _context.sent;
                  soundPlayer = this.getComponent('gaSoundPlayer');

                  for (index = 0; index < results.length; index++) {
                    element = results[index];
                    assetManager.loadAny({
                      uuid: element.uuid,
                      type: AudioClip
                    }, function (err, res) {
                      if (err) {
                        warn(err);
                        return;
                      }

                      var audio = new CustomAudioClip();
                      audio.audioFile = res;
                      audio.soundId = res.name;

                      if (res.name == 'MUSIC_MAIN' || res.name.toLowerCase().indexOf('bgm') >= 0) {
                        audio.isMusic = true;
                        soundPlayer.musicList.push(audio);
                      } else {
                        audio.isEffect = true;
                        soundPlayer.sfxList.push(audio);
                      }
                    });
                  }

                case 5:
                case "end":
                  return _context.stop();
              }
            }, _callee, this);
          }));

          function loadAssets() {
            return _loadAssets.apply(this, arguments);
          }

          return loadAssets;
        }();

        _createClass(gaSoundLoadHelper, [{
          key: "load",
          get: function get() {
            return this._load;
          },
          set: function set(value) {
            this._load = value;

            if (value) {
              this.loadAssets();
              this._load = false;
            }
          }
        }]);

        return gaSoundLoadHelper;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "assetPath", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 'db://assets/cc-release-arcade/cc-xxx-/';
        }
      }), _applyDecoratedDescriptor(_class2.prototype, "load", [_dec3], Object.getOwnPropertyDescriptor(_class2.prototype, "load"), _class2.prototype)), _class2)) || _class) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaSoundPlayer.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaReferenceManager.ts', './gaCommon.ts', './gaLogger.ts', './loadConfigAsync.ts', './SoundPlayerImpl.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, AudioClip, Enum, sys, Node, gaReferenceManager, logger, loadConfigAsync, SoundPlayerImpl;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      AudioClip = module.AudioClip;
      Enum = module.Enum;
      sys = module.sys;
      Node = module.Node;
    }, function (module) {
      gaReferenceManager = module.default;
    }, null, function (module) {
      logger = module.default;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      SoundPlayerImpl = module.SoundPlayerImpl;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "00fddTMTl9GxLjf22MXR1Jf", "gaSoundPlayer", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaSoundPlayer = exports('default', (_dec = ccclass('gaSoundPlayer'), _dec2 = property({
        type: AudioClip
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_SoundPlayerImpl) {
        _inheritsLoose(gaSoundPlayer, _SoundPlayerImpl);

        function gaSoundPlayer() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _SoundPlayerImpl.call.apply(_SoundPlayerImpl, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "lstSoundAsset", _descriptor, _assertThisInitialized(_this));

          _this.isAllSoundLoaded = true;
          _this._totalSound = 0;
          _this._isUserGestured = false;
          _this.SoundStateEnum = Enum({
            NONE: 0,
            PLAYING: 1
          });
          return _this;
        }

        var _proto = gaSoundPlayer.prototype;

        _proto.onLoad = function onLoad() {
          gaReferenceManager.instance.setReference("soundPlayer", this.node);

          _SoundPlayerImpl.prototype.onLoad.call(this);

          this._totalSound = this.musicList.length + this.sfxList.length;

          if (this.isWebSound) {
            this.isAllSoundLoaded = false;
          }
        };

        _proto.onDisable = function onDisable() {
          this.stopAllAudio();
        };

        _proto.loadCacheConfig = function loadCacheConfig() {
          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              ENABLE_BGM = _loadConfigAsync$getC.ENABLE_BGM,
              ENABLE_SFX = _loadConfigAsync$getC.ENABLE_SFX;

          this.storageKeyBGM = ENABLE_BGM ? ENABLE_BGM : this.storageKeyBGM;
          this.storageKeySFX = ENABLE_SFX ? ENABLE_SFX : this.storageKeySFX;
          var isEnableBGM = sys.localStorage.getItem(this.storageKeyBGM);
          var isEnableSFX = sys.localStorage.getItem(this.storageKeySFX);
          this.isEnableBGM = isEnableBGM != null ? JSON.parse(isEnableBGM) : true;
          this.isEnableSFX = isEnableSFX != null ? JSON.parse(isEnableSFX) : true;
        };

        _proto._startPlayWithUserGesture = function _startPlayWithUserGesture(ev) {
          this._isUserGestured = true;

          if (this.isAllSoundLoaded) {
            _SoundPlayerImpl.prototype._startPlayWithUserGesture.call(this, ev);

            this.playMainBGM();
          } else {
            logger.log("[SoundPlayerImpl] User gesture but web sound is not loaded");
            ev.preventSwallow = true;
            this.node.off(Node.EventType.TOUCH_START, this._startPlayWithUserGesture, this);
          }
        };

        _proto._resumeContextGesture = function _resumeContextGesture() {
          var Howler = globalThis.Howler;
          if (!Howler || !Howler.ctx) return Promise.resolve();
          return _SoundPlayerImpl.prototype._resumeContextGesture.call(this);
        };

        _proto._onAllWebSoundLoaded = function _onAllWebSoundLoaded() {
          var _this2 = this;

          if (!this.isAllSoundLoaded) {
            this.isAllSoundLoaded = true;
            this.playMainBGM();

            if (this.isWebSound && this._isUserGestured) {
              globalThis.Howler.ctx.resume().then(function () {
                _this2._soundPlayer.resumeWithGesture();
              });
            }
          }
        };

        _proto.update = function update(dt) {
          if (this.isWebSound && !this.isAllSoundLoaded) {
            var listHowl = Object.keys(this._soundPlayer.howlMap);

            if (listHowl.length == this._totalSound) {
              this._onAllWebSoundLoaded();
            }
          }
        };

        return gaSoundPlayer;
      }(SoundPlayerImpl), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "lstSoundAsset", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaStateMachine.ts", ['cc', './gaEventEmitter.ts', './gaLogger.ts'], function (exports) {
  var cclegacy, gaEventEmitter, logger;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      logger = module.default;
    }],
    execute: function () {
      exports('Transition', Transition);

      cclegacy._RF.push({}, "80355MOWdRIZry6q/GEtmOi", "gaStateMachine", undefined);

      function Transition(fromState, event, toState, callback) {
        if (callback === void 0) {
          callback = null;
        }

        return {
          fromState: fromState,
          event: event,
          toState: toState,
          callback: callback
        };
      }

      var gaStateMachine = exports('gaStateMachine', /*#__PURE__*/function () {
        function gaStateMachine(initState, transitions, stateViews) {
          if (transitions === void 0) {
            transitions = [];
          }

          this.currentState = void 0;
          this.currentView = void 0;
          this._initState = null;
          this._listenedEvents = [];
          this._isRunning = false;
          this.transitions = transitions;
          this.stateViews = stateViews;
          this._initState = initState;
        }

        var _proto = gaStateMachine.prototype;

        _proto.startLifeCycle = function startLifeCycle() {
          var _this = this;

          if (!this._isRunning) {
            this._isRunning = true;
            this.currentState = this._initState;
            this.currentView = this.stateViews.get(this._initState);
            this._listenedEvents = [];
            this.transitions.forEach(function (element) {
              if (_this._listenedEvents.indexOf(element.event) == -1) {
                _this._listenedEvents.push(element.event);

                gaEventEmitter.instance.registerEvent(element.event, function () {
                  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                  }

                  _this._onEvent.apply(_this, [element.event].concat(args));
                }, _this);
              }
            });
            this.currentView.isCurrentState = true;
            this.currentView.onEnter();
          }
        };

        _proto.addTransitions = function addTransitions(transitions) {
          var _this2 = this;

          transitions.forEach(function (tran) {
            return _this2.transitions.push(tran);
          });
          transitions.forEach(function (element) {
            if (_this2._listenedEvents.indexOf(element.event) == -1) {
              _this2._listenedEvents.push(element.event);

              gaEventEmitter.instance.registerEvent(element.event, function (args) {
                _this2._onEvent.apply(_this2, [element.event].concat(args));
              }, _this2);
            }
          });
        };

        _proto.getState = function getState() {
          return this.currentState;
        };

        _proto.can = function can(event) {
          var _this3 = this;

          return this.transitions.some(function (trans) {
            return trans.fromState === _this3.currentState && trans.event === event;
          });
        };

        _proto.isFinal = function isFinal() {
          var _this4 = this;

          return this.transitions.every(function (trans) {
            return trans.fromState !== _this4.currentState;
          });
        };

        _proto.cleanUp = function cleanUp() {
          this._listenedEvents = [];

          if (gaEventEmitter.instance) {
            gaEventEmitter.instance.removeEvents(this);
          }

          this.stateViews.forEach(function (view) {
            if (view && view.isValid && typeof view.destroy == 'function') {
              view.destroy();
            }
          });
          this.currentView = null;
        };

        _proto._onEvent = function _onEvent(event) {
          var _this5 = this;

          var transitionObj = this.transitions.find(function (tran) {
            return (tran.fromState === _this5.currentState || tran.fromState === "*") && tran.event === event;
          });

          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
            args[_key2 - 1] = arguments[_key2];
          }

          if (transitionObj) {
            var _this$currentView;

            var oldStateView = this.currentView;
            var oldState = this.currentState;
            this.currentState = transitionObj.toState;
            this.currentView = this.stateViews.get(this.currentState);
            oldStateView.isCurrentState = false;
            oldStateView.onLeave.apply(oldStateView, args);
            this.currentView.isCurrentState = true;

            (_this$currentView = this.currentView).onEnter.apply(_this$currentView, args);

            if (typeof transitionObj.callback == 'function') {
              transitionObj.callback.apply(transitionObj, args);
            }

            logger.warn("Transition: from " + oldState + " to " + this.currentState + ", event " + event + ", data = ", args);
          } else {
            logger.error("Invalid transition " + event + " from " + this.currentState, args);
          }
        };

        return gaStateMachine;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaStateView.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts', './gaMainStateMachine.ts'], function (exports) {
  var _inheritsLoose, _createClass, cclegacy, _decorator, gaComponent, gaMainStateMachine;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaMainStateMachine = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "839e84EONZKzaLowNRKC/Sg", "gaStateView", undefined);

      var ccclass = _decorator.ccclass;
      var gaStateView = exports('default', (_dec = ccclass('gaStateView'), _dec(_class = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaStateView, _gaComponent);

        function gaStateView() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;
          _this.isCurrentState = false;
          return _this;
        }

        var _proto = gaStateView.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          gaMainStateMachine.instance.addState(this);
        };

        _proto.onDestroy = function onDestroy() {
          _gaComponent.prototype.onDestroy.call(this);

          gaMainStateMachine.instance.removeState(this);
        };

        _proto.start = function start() {};

        _proto.initialize = function initialize() {};

        _proto.onEnter = function onEnter() {};

        _proto.onLeave = function onLeave() {};

        _createClass(gaStateView, [{
          key: "stateName",
          get: function get() {
            throw new Error("Property 'stateName' not implemented.");
          }
        }]);

        return gaStateView;
      }(gaComponent)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaToast.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts', './gaBasePopup.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, Label, gaBaseConfig, gaBasePopup;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaBasePopup = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "cf811YunV5ACo9CFpGqunBE", "gaToast", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaToast = exports('default', (_dec = ccclass('gaToast'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_gaBasePopup) {
        _inheritsLoose(gaToast, _gaBasePopup);

        function gaToast() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaBasePopup.call.apply(_gaBasePopup, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "txtMessage", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaToast.prototype;

        _proto.show = function show(data) {
          if (data === void 0) {
            data = null;
          }

          if (!data || !this.txtMessage) return;

          _gaBasePopup.prototype.show.call(this, data);

          this.txtMessage.string = data.message;
          var duration = data.duration;

          if (duration == null) {
            data.duration = 2;
          }

          if (duration > 0) {
            this.scheduleOnce(this.hide, duration);
          }
        };

        _createClass(gaToast, [{
          key: "popupType",
          get: function get() {
            return gaBaseConfig.POPUP_TYPE.TOAST;
          }
        }]);

        return gaToast;
      }(gaBasePopup), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "txtMessage", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaToggleDoubleCheckmark.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, gaComponent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "e30713QFdpE+o8mdvw53BP9", "gaToggleDoubleCheckmark", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaToggleDoubleCheckmark = exports('default', (_dec = ccclass('gaToggleDoubleCheckmark'), _dec2 = property(Node), _dec3 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaToggleDoubleCheckmark, _gaComponent);

        function gaToggleDoubleCheckmark() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "spriteOn", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "spriteOff", _descriptor2, _assertThisInitialized(_this));

          _this.isChecked = false;
          return _this;
        }

        var _proto = gaToggleDoubleCheckmark.prototype;

        _proto.onLoad = function onLoad() {
          this.node.on("click", this.onToggle, this);
        };

        _proto.init = function init(state) {
          this.isChecked = state;
          this.setToggle();
        };

        _proto.onToggle = function onToggle() {
          this.isChecked = !this.isChecked;
          this.setToggle();
        };

        _proto.setToggle = function setToggle() {
          this.spriteOn.active = this.isChecked;
          this.spriteOff.active = !this.isChecked;
        };

        return gaToggleDoubleCheckmark;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "spriteOn", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "spriteOff", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaTweenUtils.ts", ['cc'], function (exports) {
  var cclegacy, Node, Tween, tween, UIRenderer, UIOpacity, math, Vec3, v3, Color, Mask;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      Node = module.Node;
      Tween = module.Tween;
      tween = module.tween;
      UIRenderer = module.UIRenderer;
      UIOpacity = module.UIOpacity;
      math = module.math;
      Vec3 = module.Vec3;
      v3 = module.v3;
      Color = module.Color;
      Mask = module.Mask;
    }],
    execute: function () {
      exports('setRenderColor', setRenderColor);

      cclegacy._RF.push({}, "f1e10j+9fVMJJvOO0Nzvsuw", "gaTweenUtils", undefined);

      Node.prototype.runAction = function (actions) {
        var _tween;

        if (actions instanceof Tween) {
          tween(this).then(actions).start();
          return;
        }

        (_tween = tween(this)).parallel.apply(_tween, actions).start();
      };

      Node.prototype.stopAllActions = function () {
        stopAllActions(this);
      };

      var roundAngle = exports('roundAngle', function roundAngle(angle) {
        if (angle > 180) angle -= 360;
        if (angle < -180) angle += 360;
        return angle;
      });
      var sequence = exports('sequence', function sequence() {
        var _tween2;

        return (_tween2 = tween()).sequence.apply(_tween2, arguments);
      });
      var parallel = exports('parallel', function parallel() {
        var _tween3;

        return (_tween3 = tween()).parallel.apply(_tween3, arguments);
      });
      var callFunc = exports('callFunc', function callFunc(func) {
        return tween().call(func);
      });
      var fadeOut = exports('fadeOut', function fadeOut(time, easing) {
        return fadeTo(time, 0, easing);
      });
      var fadeIn = exports('fadeIn', function fadeIn(time, easing) {
        return fadeTo(time, 255, easing);
      });
      var fadeTo = exports('fadeTo', function fadeTo(time, opacity, easing) {
        if (opacity < 0 || opacity > 255) {
          opacity = 0;
        }

        var currentOpacity = 0;
        return tween().to(time, null, {
          easing: easing,
          onStart: function onStart(target) {
            var renderer = target.getComponent(UIRenderer);

            if (renderer) {
              currentOpacity = renderer.color.a;
            } else {
              var uiProps = target.getComponent(UIOpacity);

              if (!uiProps) {
                uiProps = target.addComponent(UIOpacity);
              }

              currentOpacity = uiProps.opacity;
            }
          },
          onUpdate: function onUpdate(target, ratio) {
            var newOpacity = math.lerp(currentOpacity, opacity, ratio);
            setOpacity(target, newOpacity);
          }
        });
      });
      var delay = exports('delay', function delay(time) {
        return tween().delay(time);
      });
      var scaleTo = exports('scaleTo', function scaleTo(time, x, y, easing) {
        if (typeof y == 'string') easing = y;

        if (x instanceof Vec3) {
          y = x.y;
          x = x.x;
        }

        if (isNaN(y)) y = x;
        return tween().to(time, {
          scale: v3(x, y, 1)
        }, {
          easing: easing
        });
      });
      var rotateTo = exports('rotateTo', function rotateTo(time, angle, easing) {
        var startAngle = null;
        var realAngle = null;
        return tween().to(time, null, {
          easing: easing,
          onStart: function onStart(target) {
            startAngle = roundAngle(target.angle);
            realAngle = roundAngle(angle - startAngle);
          },
          onUpdate: function onUpdate(target, ratio) {
            target.angle = startAngle + realAngle * ratio;
          }
        });
      });
      var rotateBy = exports('rotateBy', function rotateBy(time, a, easing) {
        return tween().by(time, {
          angle: a
        }, {
          easing: easing
        });
      });
      var v3f = exports('v3f', function v3f(f) {
        return v3(f, f, f);
      });
      var stopAllActions = exports('stopAllActions', function stopAllActions(target) {
        Tween.stopAllByTarget(target);
      });
      var moveTo = exports('moveTo', function moveTo(dur, x, y, z, easing) {
        if (typeof y == 'string') easing = y;

        if (x instanceof Vec3) {
          y = x.y;
          z = x.z;
          x = x.x;
        } else {
          y = y || 0;
          z = z || 0;
        }

        return tween().to(dur, {
          position: v3(x, y, z)
        }, {
          easing: easing
        });
      });
      var moveBy = exports('moveBy', function moveBy(dur, x, y, z, easing) {
        if (typeof y == 'string') easing = y;

        if (x instanceof Vec3) {
          y = x.y;
          z = x.z;
          x = x.x;
        } else {
          y = y || 0;
          z = z || 0;
        }

        return tween().by(dur, {
          position: v3(x, y, z)
        }, {
          easing: easing
        });
      });
      var setOpacity = exports('setOpacity', function setOpacity(node, value) {
        var render2D = node.getComponent(UIRenderer);
        var uiOpacity = node.getComponent(UIOpacity);

        if (render2D) {
          if (uiOpacity) {
            uiOpacity.opacity = 255;
          }

          setRenderColor(render2D, value);
        } else {
          if (uiOpacity === null) {
            uiOpacity = node.addComponent(UIOpacity);
          }

          uiOpacity.opacity = value;
        }
      });

      function setRenderColor(render, alpha) {
        var color = Color.clone(render.color);
        color.a = alpha;
        render.color = color;
      }

      var gaSetOpacityAll = exports('gaSetOpacityAll', function gaSetOpacityAll(node, opacity) {
        setOpacity(node, opacity);
        var children = node.getComponentsInChildren(UIRenderer).filter(function (child) {
          return !child.getComponent(Mask);
        });
        children.forEach(function (child) {
          var _child$color = child.color,
              r = _child$color.r,
              g = _child$color.g,
              b = _child$color.b;
          child.color = new Color(r, g, b, opacity);
        });
      });
      var gaFadeOutAll = exports('gaFadeOutAll', function gaFadeOutAll(time, easing) {
        return gaFadeToAll(time, 0, easing);
      });
      var gaFadeInAll = exports('gaFadeInAll', function gaFadeInAll(time, easing) {
        return gaFadeToAll(time, 255, easing);
      });
      var gaFadeToAll = exports('gaFadeToAll', function gaFadeToAll(time, opacity, easing) {
        opacity = math.clamp(opacity, 0, 255);
        var currentOpacity = 255;
        return tween().to(time, null, {
          easing: easing,
          onStart: function onStart(target) {
            var node = target;
            var uiProps = node.getComponent(UIOpacity);

            if (uiProps) {
              currentOpacity = uiProps.opacity;
            } else {
              var renderable2D = node.getComponent(UIRenderer);

              if (renderable2D) {
                currentOpacity = renderable2D.color.a;
              }
            }
          },
          onUpdate: function onUpdate(target, ratio) {
            var node = target;
            var newOpacity = math.lerp(currentOpacity, opacity, ratio);
            gaSetOpacityAll(node, newOpacity);
          }
        });
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaUserInfo.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaCommon.ts'], function (exports) {
  var _createClass, cclegacy, network;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      network = module.network;
    }],
    execute: function () {
      cclegacy._RF.push({}, "f2c4cgbi99NjYrVKondP6ml", "gaUserInfo", undefined);

      var PlayerInfoStateManager = network.PlayerInfoStateManager;
      var playerInfoStateManager = PlayerInfoStateManager.getInstance();
      var gaUserInfo = exports('default', /*#__PURE__*/function () {
        function gaUserInfo() {
          this._pending = 0;
          this.avatar = "";
        }

        var _proto = gaUserInfo.prototype;

        _proto.setPending = function setPending(amount) {
          amount = Math.max(0, amount);
          var changed = amount != this._pending;

          if (changed) {
            this._pending = Math.max(0, amount);
          }
        };

        _proto.clearPending = function clearPending() {
          this.setPending(0);
        };

        _createClass(gaUserInfo, [{
          key: "displayName",
          get: function get() {
            return playerInfoStateManager && playerInfoStateManager.getDisplayName();
          }
        }, {
          key: "availableAmount",
          get: function get() {
            return this.totalAmount - this._pending;
          }
        }, {
          key: "totalAmount",
          get: function get() {
            return playerInfoStateManager && playerInfoStateManager.getWallets().amount;
          }
        }, {
          key: "userId",
          get: function get() {
            return playerInfoStateManager && playerInfoStateManager.getUserId();
          }
        }]);

        return gaUserInfo;
      }());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaUserUI.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaAvatarProvider.ts', './gaDataStore.ts', './gaEventsCode.ts', './gaUtils.ts', './gaComponent.ts', './gaWallet.ts', './gaReferenceManager.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Sprite, gaAvatarProvider, gaDataStore, gaEventsCode, gaUtils, gaComponent, gaWallet, gaReferenceManager;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Sprite = module.Sprite;
    }, function (module) {
      gaAvatarProvider = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaUtils = module.default;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaWallet = module.default;
    }, function (module) {
      gaReferenceManager = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "0d890TzY1VADYeaoF60ev7j", "gaUserUI", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaUserUI = exports('default', (_dec = ccclass('gaUserUI'), _dec2 = property(Label), _dec3 = property(Sprite), _dec4 = property(gaWallet), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaUserUI, _gaComponent);

        function gaUserUI() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this; //#region ------------------------------------------------------------------ Declare variables

          _initializerDefineProperty(_this, "lblUserName", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "spriteAvatar", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "lblWallet", _descriptor3, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaUserUI.prototype; //#endregion
        //#region  ----------------------------------------------------------------- private functions

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          gaReferenceManager.instance.setReference("userUI", this.node);
        };

        _proto.start = function start() {
          this.updateUserData();
        };

        _proto.initEvents = function initEvents() {
          _gaComponent.prototype.initEvents.call(this);

          this.register(gaEventsCode.USER.UPDATE_DATA, this.updateUserData);
          this.register(gaEventsCode.USER.UPDATE_BALANCE, this.setWalletAmount);
        };

        _proto.updateUserData = function updateUserData() {
          if (gaDataStore.instance.userInfo) {
            this.setUserName(gaDataStore.instance.userInfo.displayName);
            this.setWalletAmount(gaDataStore.instance.userInfo.availableAmount);
            this.setUserAvatar(gaDataStore.instance.userInfo.avatar);
          } else {
            this.setUserName('');
            this.setWalletAmount(0);
            this.setUserAvatar('');
          }
        };

        _proto.setUserName = function setUserName(displayName) {
          if (this.lblUserName) {
            this.lblUserName.string = gaUtils.formatUserName(displayName);
          }
        };

        _proto.setWalletAmount = function setWalletAmount(amount) {
          if (amount == null) {
            amount = gaDataStore.instance.userInfo.availableAmount;
          }

          if (this.lblWallet) {
            this.lblWallet.updateWallet(amount);
          }
        };

        _proto.setUserAvatar = function setUserAvatar(avatar) {
          gaAvatarProvider.instance.loadAvatarFrame(this.spriteAvatar, avatar);
        } //#endregion
        ;

        return gaUserUI;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblUserName", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "spriteAvatar", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "lblWallet", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaUtils.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './utils.ts', './gaCurrencyCalculator.ts'], function (exports) {
  var _createClass, cclegacy, game, Game, UITransform, v3, sys, Tween, UIOpacity, isValid, formatMoney, formatWalletMoney, gaCurrencyCalculator;

  return {
    setters: [function (module) {
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      game = module.game;
      Game = module.Game;
      UITransform = module.UITransform;
      v3 = module.v3;
      sys = module.sys;
      Tween = module.Tween;
      UIOpacity = module.UIOpacity;
      isValid = module.isValid;
    }, function (module) {
      formatMoney = module.formatMoney;
      formatWalletMoney = module.formatWalletMoney;
    }, function (module) {
      gaCurrencyCalculator = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "8eafc2I6GhK/529akat/89Z", "gaUtils", undefined);

      var lodash = globalThis._;
      var gaUtils = exports('default', /*#__PURE__*/function () {
        function gaUtils() {}

        gaUtils.setTimeScale = function setTimeScale(timeScale) {
          gaUtils._TIME_SCALE = timeScale;

          game._calculateDT = function (now) {
            if (!now) now = performance.now();
            this._deltaTime = now > this._startTime ? (now - this._startTime) / 1000 : 0;

            if (this._deltaTime > Game.DEBUG_DT_THRESHOLD) {
              this._deltaTime = this.frameTime / 1000;
            }

            this._startTime = now;
            this._deltaTime *= timeScale;
            return this._deltaTime;
          };
        };

        gaUtils.hitTest = function hitTest(node, loccation) {
          return node['_hitTest'](loccation);
        };

        gaUtils.changeParent = function changeParent(node, newParent) {
          if (node.parent === newParent) return;

          var getWorldRotation = function getWorldRotation(node) {
            var currNode = node;
            var resultRot = currNode.angle || 0;

            do {
              currNode = currNode.parent;
              resultRot += currNode.angle || 0;
            } while (currNode.parent != null);

            resultRot = resultRot % 360;
            return resultRot;
          };

          var oldWorRot = getWorldRotation(node);
          var newParentWorRot = getWorldRotation(newParent);
          var newLocRot = oldWorRot - newParentWorRot;
          var oldWorPos = gaUtils.getWorldPos(node);
          var newLocPos = gaUtils.getLocalPos(newParent, oldWorPos);
          node.parent = newParent;
          node.position = newLocPos;
          node.angle = newLocRot;
        };

        gaUtils.getWorldPos = function getWorldPos(node) {
          var nodeTF = node.getComponent(UITransform) || node.addComponent(UITransform);
          return nodeTF.convertToWorldSpaceAR(v3(0, 0, 0));
        };

        gaUtils.getLocalPos = function getLocalPos(container, worldPos) {
          var containerTF = container.getComponent(UITransform) || container.addComponent(UITransform);
          return containerTF.convertToNodeSpaceAR(worldPos);
        };

        gaUtils.updateSpineTime = function updateSpineTime(spine, dt) {
          if (sys.isNative) {
            spine['_updateRealtime'](dt);
          } else {
            spine['update'](dt);
          }
        };

        gaUtils.getParam = function getParam(url, key) {
          if (url.indexOf("&" + key + "=") != -1) return url.split("&" + key + "=")[1].split("&")[0];
          if (url.indexOf("?" + key + "=") != -1) return url.split("?" + key + "=")[1].split("&")[0];
          return null;
        };

        gaUtils.stopTweens = function stopTweens(tweens) {
          if (tweens && Array.isArray(tweens)) {
            tweens.forEach(gaUtils.stopTween);
            tweens.length = 0;
          }
        };

        gaUtils.stopTween = function stopTween(tween) {
          if (tween) {
            tween.stop();
          }
        };

        gaUtils.stopAllByTarget = function stopAllByTarget(_target) {
          if (_target) {
            Tween.stopAllByTarget(_target);
          }
        };

        gaUtils.setOpacity = function setOpacity(node, value) {
          var opacity = node.getComponent(UIOpacity) || node.addComponent(UIOpacity);
          opacity.opacity = value;
        };

        gaUtils.getLast = function getLast(array) {
          if (!array || !array.length) return null;
          return array[array.length - 1];
        };

        gaUtils.getTimeString = function getTimeString(timestamp) {
          var padStart = function padStart(value) {
            return ('0' + value).slice(-2);
          };

          var date = new Date(Number(timestamp));
          var DD = padStart(date.getDate());
          var MM = padStart(date.getMonth() + 1);
          var hh = padStart(date.getHours());
          var mm = padStart(date.getMinutes());
          var ss = padStart(date.getSeconds());
          return DD + "/" + MM + " " + hh + ":" + mm + ":" + ss;
        };

        gaUtils.shortName = function shortName(name, max) {
          if (name.length > max) {
            return name.substring(0, max) + "...";
          }

          return name;
        };

        gaUtils.secondsToHHMMSS = function secondsToHHMMSS(seconds, stringSeperate) {
          if (stringSeperate === void 0) {
            stringSeperate = ':';
          }

          if (typeof seconds !== 'number' || isNaN(seconds) || seconds < 0) {
            throw new Error('seconds must be a valid, positive number');
          }

          if (typeof stringSeperate !== 'string') {
            throw new Error('stringSeperate must be a valid string');
          }

          var hours = Math.floor(seconds / 3600);
          var minutes = Math.floor(seconds / 60) % 60;
          var second = seconds % 60;
          return "" + hours + stringSeperate + ("0" + minutes).slice(-2) + stringSeperate + ("0" + second).slice(-2);
        };

        gaUtils.clamp = function clamp(x, min, max) {
          return lodash.clamp(x, min, max);
        };

        gaUtils.getSum = function getSum(array) {
          if (!array || !array.length) return 0;
          return lodash.sum(array);
        };

        gaUtils.flatten = function flatten(arrays) {
          return lodash.flatten(arrays);
        };

        gaUtils.randomNumber = function randomNumber(min, max) {
          return Math.random() * (max - min) + min;
        };

        gaUtils.randomInt = function randomInt(min, max) {
          return Math.floor(Math.random() * (max - min)) + min;
        };

        gaUtils.randomBoolean = function randomBoolean(trueRate) {
          if (trueRate === void 0) {
            trueRate = 0.5;
          }

          return Math.random() < trueRate;
        };

        gaUtils.randomFromArray = function randomFromArray(arr, excludedElement) {
          if (excludedElement === void 0) {
            excludedElement = null;
          }

          if (!arr || !arr.length) return null;

          if (excludedElement != null) {
            var eligibleElements = arr.filter(function (element) {
              return element !== excludedElement;
            });
            var randomIndex = Math.floor(Math.random() * eligibleElements.length);
            var randomElement = eligibleElements[randomIndex];
            return randomElement;
          }

          return arr[gaUtils.randomInt(0, arr.length)];
        };

        gaUtils.shuffleArray = function shuffleArray(array) {
          if (array.length === 0) {
            return array;
          }

          var shuffledArray = [].concat(array);

          for (var i = shuffledArray.length - 1; i > 0; i--) {
            var randomIndex = Math.floor(Math.random() * (i + 1));
            var _ref = [shuffledArray[randomIndex], shuffledArray[i]];
            shuffledArray[i] = _ref[0];
            shuffledArray[randomIndex] = _ref[1];
          }

          return shuffledArray;
        };

        gaUtils.getDistance = function getDistance(p1, p2) {
          return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));
        } // full number
        ;

        gaUtils.formatMoney = function formatMoney$1(amount) {
          if (gaCurrencyCalculator.instance) {
            return gaCurrencyCalculator.instance.formatCurrency(amount);
          }

          return formatMoney(amount);
        } // short number with symbol K, M, B, T
        ;

        gaUtils.formatWallet = function formatWallet(amount, decimalPlaces) {
          if (decimalPlaces === void 0) {
            decimalPlaces = 0;
          }

          return formatWalletMoney(amount, decimalPlaces);
        };

        gaUtils.formatUserName = function formatUserName(userName, maxLength, replaceText) {
          if (userName === void 0) {
            userName = '';
          }

          if (maxLength === void 0) {
            maxLength = 14;
          }

          if (replaceText === void 0) {
            replaceText = "...";
          }

          if (userName.length <= maxLength) return userName;
          return userName.slice(0, maxLength - replaceText.length + 1) + replaceText;
        };

        gaUtils.mergeTwoObject = function mergeTwoObject(obj1, obj2, out) {
          out = out || {};
          return lodash.merge(out, obj1, obj2);
        };

        gaUtils.cloneDeep = function cloneDeep(obj) {
          return lodash.cloneDeep(obj);
        };

        gaUtils.destroyAllChildren = function destroyAllChildren(node) {
          if (!isValid(node)) return;

          for (var index = node.children.length - 1; index >= 0; index--) {
            var element = node.children[index];

            if (isValid(element)) {
              element.removeFromParent();
              element.destroy();
            }
          }
        };

        gaUtils.replaceObjectKeys = function replaceObjectKeys(obj, config) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var element = obj[key];

              if (config[key]) {
                obj[config[key]] = element;
                delete obj[key];
                element = obj[config[key]];
              }

              if (element && typeof element === 'object') {
                gaUtils.replaceObjectKeys(element, config);
              }

              if (Array.isArray(element)) {
                element.forEach(function (item) {
                  if (typeof item === 'object') {
                    gaUtils.replaceObjectKeys(item, config);
                  }
                });
              }
            }
          }

          return obj;
        };

        gaUtils.formatString = function formatString(format) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          return format.replace(/{(\d+)}/g, function (match, number) {
            return typeof args[number] != 'undefined' ? args[number] : match;
          });
        };

        _createClass(gaUtils, null, [{
          key: "TIME_SCALE",
          get: function get() {
            return gaUtils._TIME_SCALE;
          }
        }]);

        return gaUtils;
      }());
      gaUtils._TIME_SCALE = 1;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaVersion.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBaseConfig.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Component, gaBaseConfig;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Component = module.Component;
    }, function (module) {
      gaBaseConfig = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "74e10gmgSJJp5Z8lEFIQip1", "gaVersion", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaVersion = exports('default', (_dec = ccclass('gaVersion'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(gaVersion, _Component);

        function gaVersion() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "versionText", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = gaVersion.prototype;

        _proto.onLoad = function onLoad() {
          this.versionText.string = gaBaseConfig.gameVersion;
        };

        return gaVersion;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "versionText", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaWallet.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaCurrencyCalculator.ts', './gaLogger.ts', './gaComponent.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, gaCurrencyCalculator, logger, gaComponent;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
    }, function (module) {
      gaCurrencyCalculator = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gaComponent = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "03ee8esHflMt5nMJtCdIgAL", "gaWallet", undefined);

      var INCREASING_TIME = 0.3;
      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gaWallet = exports('default', (_dec = ccclass('gaWallet'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaWallet, _gaComponent);

        function gaWallet() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this; //#region ------------------------------------------------------------------ Declare variables

          _initializerDefineProperty(_this, "displayLabel", _descriptor, _assertThisInitialized(_this));

          _this.isMe = false;
          _this._displayAmount = 0;
          _this._rewardAmount = 0;
          _this._targetAmount = 0;
          _this._totalAmount = 0;
          _this._incSpeed = void 0;
          return _this;
        }

        var _proto = gaWallet.prototype; //#endregion
        //#region  --------------------------------------------------------------- Component functions

        _proto.update = function update(dt) {
          if (this._displayAmount == this._targetAmount) return;
          this._displayAmount += this._incSpeed * dt;

          if (this._displayAmount > this._targetAmount) {
            this._displayAmount = this._targetAmount;
          }

          this.updateDisplay();
        } //#endregion
        //#region  ------------------------------------------------------------------ public functions
        ;

        _proto.forceUpdateWallet = function forceUpdateWallet(amount) {
          this._displayAmount = amount;
          this._targetAmount = amount;
          this._rewardAmount = 0;
          this._incSpeed = 0;
          this._totalAmount = amount;
          this.updateDisplay();
        };

        _proto.updateWallet = function updateWallet(amount) {
          this._targetAmount = gaCurrencyCalculator.instance.minusTwoNumber(amount, this._rewardAmount);

          if (this._displayAmount > this._targetAmount) {
            this._displayAmount = this._targetAmount;
          } else {
            this._incSpeed = (this._targetAmount - this._displayAmount) / INCREASING_TIME;
          }

          this._totalAmount = amount;
          this.updateDisplay();
        };

        _proto.addToDisplay = function addToDisplay(amount) {
          var remainAmount = gaCurrencyCalculator.instance.minusTwoNumber(this._rewardAmount, amount);

          if (remainAmount < 0) {
            logger.warn("Reward Wallet Amount is negative!", remainAmount);
          }

          this._rewardAmount = remainAmount;
          this._targetAmount = gaCurrencyCalculator.instance.plusTwoNumber(this._targetAmount, amount);

          if (this._targetAmount > this._totalAmount) {
            this._targetAmount = this._totalAmount;
          }

          this._incSpeed = (this._targetAmount - this._displayAmount) / INCREASING_TIME;
        };

        _proto.addGoldReward = function addGoldReward(reward) {
          this._rewardAmount = gaCurrencyCalculator.instance.plusTwoNumber(this._rewardAmount, reward);
        };

        _proto.updateDisplay = function updateDisplay() {
          this.displayLabel.string = gaCurrencyCalculator.instance.formatCurrency(this._displayAmount);
        };

        _proto.getDisplayWallet = function getDisplayWallet() {
          return this._targetAmount;
        };

        _proto.getRealWallet = function getRealWallet() {
          return this._totalAmount;
        };

        _proto.resetOnExit = function resetOnExit() {
          this.displayLabel.string = '';
        } //#endregion
        ;

        return gaWallet;
      }(gaComponent), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "displayLabel", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gaWifiStatus.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaComponent.ts', './gaEventsCode.ts', './gaSocketTypes.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, SpriteFrame, Sprite, Label, Color, isValid, gaComponent, gaEventsCode, SocketStatus;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      SpriteFrame = module.SpriteFrame;
      Sprite = module.Sprite;
      Label = module.Label;
      Color = module.Color;
      isValid = module.isValid;
    }, function (module) {
      gaComponent = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      SocketStatus = module.SocketStatus;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "bd127RzOglNDYshNBSiIgjq", "gaWifiStatus", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var STATUS = {
        STRONG: 0,
        MEDIUM: 1,
        WEAK: 2,
        DISCONNECT: 3
      };
      var WIFI_STATUS_AVERAGE = 5;
      var gaWifiStatus = exports('gaWifiStatus', (_dec = ccclass('gaWifiStatus'), _dec2 = property([SpriteFrame]), _dec3 = property(Sprite), _dec4 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_gaComponent) {
        _inheritsLoose(gaWifiStatus, _gaComponent);

        function gaWifiStatus() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaComponent.call.apply(_gaComponent, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "listSprite", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "icon", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "labelPing", _descriptor3, _assertThisInitialized(_this));

          _this._listTotalPing = [];
          _this._averagePing = 0;
          return _this;
        }

        var _proto = gaWifiStatus.prototype;

        _proto.onLoad = function onLoad() {
          _gaComponent.prototype.onLoad.call(this);

          if (this.labelPing) {
            this.labelPing.string = '';
          }

          this._listTotalPing = [];

          this._average();
        };

        _proto.initEvents = function initEvents() {
          this.register(gaEventsCode.COMMON.UPDATE_PING, this.onPingUpdate);
          this.register(gaEventsCode.COMMON.NETWORK_STATUS_INFO, this.onNetworkState);
        };

        _proto.onPingUpdate = function onPingUpdate(data) {
          var sprite = null;
          var color = null;
          var latency = data.latency;

          this._handlerListPing(latency);

          this._average();

          if (this._averagePing > 0 && this._averagePing <= 100) {
            sprite = this.listSprite[STATUS.STRONG];
            color = Color.GREEN;
          } else if (this._averagePing > 100 && this._averagePing <= 300) {
            sprite = this.listSprite[STATUS.MEDIUM];
            color = Color.YELLOW;
          } else {
            sprite = this.listSprite[STATUS.WEAK];
            color = Color.RED;
          }

          if (this.labelPing) {
            this.labelPing.color = color;
            this.labelPing.string = this._averagePing.toString();
          }

          this.icon.spriteFrame = sprite;
        };

        _proto.onNetworkState = function onNetworkState(data) {
          if (!isValid(this.node)) return;

          if (data === SocketStatus.Connected) {
            this._enableLbl(true);

            this.onPingUpdate({
              latency: 100
            });
          } else {
            this.icon.spriteFrame = this.listSprite[STATUS.DISCONNECT];

            this._enableLbl(false);
          }
        };

        _proto._enableLbl = function _enableLbl(status) {
          if (this.labelPing) {
            this.labelPing.node.active = status;
          }
        };

        _proto._average = function _average() {
          this._averagePing = Math.round(this._listTotalPing.reduce(function (p, c) {
            return p + c;
          }, 0) / this._listTotalPing.length);
        };

        _proto._handlerListPing = function _handlerListPing(ms) {
          this._listTotalPing.length >= WIFI_STATUS_AVERAGE && this._listTotalPing.pop();

          this._listTotalPing.push(ms);
        };

        return gaWifiStatus;
      }(gaComponent), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "listSprite", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "icon", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "labelPing", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcBettingState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaBettingState.ts', './gcEventsCode.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, gaBettingState, gcEventsCode;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaBettingState = module.default;
    }, function (module) {
      gcEventsCode = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "b53ea4r+I9NJoo9qmH+uf51", "gcBettingState", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gcBettingState = exports('default', (_dec = ccclass("gcBettingState"), _dec(_class = /*#__PURE__*/function (_gaBettingState) {
        _inheritsLoose(gcBettingState, _gaBettingState);

        function gcBettingState() {
          return _gaBettingState.apply(this, arguments) || this;
        }

        var _proto = gcBettingState.prototype; //#region ------------------------------------------------------------------ Declare variables
        //#endregion
        //#region  ------------------------------------------------------------------ public functions

        _proto.initialize = function initialize() {
          _gaBettingState.prototype.initialize.call(this);

          this.updateBet();
        };

        _proto.onEnter = function onEnter() {
          _gaBettingState.prototype.onEnter.call(this);

          this.register(gcEventsCode.DATA.START_GAME, this.onResultReceived);
          this.register(gcEventsCode.BET.PLACE_BET, this.updateBet);
          this.register(gcEventsCode.BET.CLEAR_BET, this.updateBet);
          this.updateBet();
        } //#endregion
        //#region  ----------------------------------------------------------------- private functions
        ;

        _proto.updateBet = function updateBet() {} //#endregion
        ;

        return gcBettingState;
      }(gaBettingState)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcCommandID.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaCommandID.ts'], function (exports) {
  var _inheritsLoose, _assertThisInitialized, cclegacy, gaCommandID;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaCommandID = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "c72e0M3mOxDOIV3FFRisfWa", "gcCommandID", undefined);

      var gcCommandID = exports('default', /*#__PURE__*/function (_gaCommandID) {
        _inheritsLoose(gcCommandID, _gaCommandID);

        function gcCommandID() {
          var _this;

          _this = _gaCommandID.call(this) || this;
          gaCommandID.instance = _assertThisInitialized(_this);
          _this.mapResponse[gcCommandID.R_CLIENT_STATE] = gcCommandID.ON_CLIENT_STATE;
          _this.mapAcronym['ep'] = gcCommandID.ERROR_PUSH;
          return _this;
        }

        var _proto = gcCommandID.prototype;

        _proto.destroy = function destroy() {
          _gaCommandID.prototype.destroy.call(this);

          gcCommandID.instance = null;
        };

        return gcCommandID;
      }(gaCommandID));
      gcCommandID.R_CLIENT_STATE = "glt";
      gcCommandID.R_START_GAME = "ng";
      gcCommandID.R_CASH_OUT = "eg";
      gcCommandID.ON_START_GAME = "n";
      gcCommandID.ON_CASH_OUT = "c";
      gcCommandID.ON_CRASH = "cd";
      gcCommandID.ON_CLIENT_STATE = "mst";
      gcCommandID.ON_PLAYER_INFO_UPDATE = "piu";
      gcCommandID.instance = null;

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcDataFactory.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataFactory.ts', './gaResultData.ts', './gaRoundData.ts', './gcJoinGameData.ts', './gcResultData.ts', './gcRoundData.ts'], function (exports) {
  var _inheritsLoose, _assertThisInitialized, cclegacy, gaDataFactory, gaResultData, gaRoundData, gcJoinGameData, gcResultData, gcRoundData;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaDataFactory = module.default;
    }, function (module) {
      gaResultData = module.default;
    }, function (module) {
      gaRoundData = module.default;
    }, function (module) {
      gcJoinGameData = module.default;
    }, function (module) {
      gcResultData = module.default;
    }, function (module) {
      gcRoundData = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "88505PCn+pC2LlB9ilf2Vje", "gcDataFactory", undefined);

      var gcDataFactory = exports('default', /*#__PURE__*/function (_gaDataFactory) {
        _inheritsLoose(gcDataFactory, _gaDataFactory);

        function gcDataFactory() {
          var _this;

          _this = _gaDataFactory.call(this) || this;
          gaDataFactory.instance = _assertThisInitialized(_this);
          return _this;
        }

        var _proto = gcDataFactory.prototype;

        _proto.create = function create(type, data) {
          switch (type) {
            case gaResultData:
            case gcResultData:
              return new gcResultData(data);

            case gaRoundData:
            case gcRoundData:
              return new gcRoundData(data);

            case gcJoinGameData:
              return new gcJoinGameData(data);
          }

          return new type(data);
        };

        _proto.destroy = function destroy() {
          gaDataFactory.instance = null;
        };

        return gcDataFactory;
      }(gaDataFactory));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcDataStore.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataStore.ts'], function (exports) {
  var _inheritsLoose, cclegacy, gaDataStore;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaDataStore = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "41c81jVE61PlZl1WVjGWt8A", "gcDataStore", undefined);

      var gcDataStore = exports('default', /*#__PURE__*/function (_gaDataStore) {
        _inheritsLoose(gcDataStore, _gaDataStore);

        function gcDataStore() {
          return _gaDataStore.apply(this, arguments) || this;
        }

        return gcDataStore;
      }(gaDataStore));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcEventsCode.ts", ['cc', './gaEventsCode.ts', './gaUtils.ts'], function (exports) {
  var cclegacy, gaEventsCode, gaUtils;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaUtils = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "74dd5hADK1MnLrw+hKvFQKb", "gcEventsCode", undefined);

      var gcEventsCode = {
        ACTION: {
          CLAIM: "CRASH_EVENT.ACTION.CLAIM"
        },
        DATA: {
          UPDATE_MULTIPLIER: "CRASH_EVENT.DATA.UPDATE_MULTIPLIER",
          START_GAME: "CRASH_EVENT.DATA.START_GAME",
          END_GAME: "CRASH_EVENT.DATA.END_GAME",
          CRASH: "CRASH_EVENT.DATA.CRASH",
          CASH_OUT: "CRASH_EVENT.DATA.CASH_OUT"
        }
      };
      var gcEventsCode$1 = exports('default', gaUtils.mergeTwoObject(gaEventsCode, gcEventsCode));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcGameNetwork.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaDataFactory.ts', './gaDataStore.ts', './gaEventEmitter.ts', './gaBaseConfig.ts', './gaEventsCode.ts', './gaResultData.ts', './gaGameNetwork.ts', './gaPromise.ts', './gcDataStore.ts', './gcJoinGameData.ts', './gcCommandID.ts'], function (exports) {
  var _inheritsLoose, cclegacy, gaDataFactory, gaDataStore, gaEventEmitter, gaBaseConfig, gaEventsCode, gaResultData, gaGameNetwork, gaPromise, gcDataStore, gcJoinGameData, gcCommandID;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaDataFactory = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      gaResultData = module.default;
    }, function (module) {
      gaGameNetwork = module.default;
    }, function (module) {
      gaPromise = module.gaPromise;
    }, function (module) {
      gcDataStore = module.default;
    }, function (module) {
      gcJoinGameData = module.default;
    }, function (module) {
      gcCommandID = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "c3da7qSjyBAqbG2kNIiMU5J", "gcGameNetwork", undefined);

      var gcGameNetwork = exports('default', /*#__PURE__*/function (_gaGameNetwork) {
        _inheritsLoose(gcGameNetwork, _gaGameNetwork);

        function gcGameNetwork() {
          return _gaGameNetwork.apply(this, arguments) || this;
        }

        var _proto = gcGameNetwork.prototype;

        _proto.bet = function bet(customData) {
          var bId = gcDataStore.instance.currDenomId;
          return _gaGameNetwork.prototype.bet.call(this, {
            event: gcCommandID.R_START_GAME,
            data: {
              bId: bId,
              cus: customData
            }
          });
        };

        _proto.cashOut = function cashOut() {
          var _this = this;

          if (this._state == gaGameNetwork.STATE_DIE) return gaPromise.reject('STATE DIE');
          return this._sendMessage({
            event: gcCommandID.R_CASH_OUT
          }).then(function (resp) {
            return _this.onResponseCashOut(resp);
          });
        };

        _proto.onResponseCashOut = function onResponseCashOut(resp) {
          var result = gaDataFactory.instance.create(gaResultData, resp);
          gaDataStore.instance.result = result;
          return result;
        };

        _proto.onResponseUserActive = function onResponseUserActive(resp) {
          gaDataStore.instance.userActive = resp.auser;
          return resp.auser;
        };

        _proto.onResponseJoinGame = function onResponseJoinGame(resp) {
          var userInfo = resp.userInfo;

          if (userInfo) {
            if (userInfo.mdu) gaDataStore.instance.userInfo.avatar = userInfo.mdu.av;
            if (userInfo.jpi) gaEventEmitter.instance.emit(gaEventsCode.JACKPOT.INIT_JACKPOT, userInfo.jpi);
          }

          var roundData = gaDataFactory.instance.create(gcJoinGameData, resp);
          gaDataStore.instance.setDataStore(roundData);
          this.gameChannel = roundData.gameChannel;
          if (this._state !== gaGameNetwork.STATE_DIE) this._gotoNormalMode();
          this.socketManager.subscribe(this.gameChannel);
          this.socketManager.subscribe(gaBaseConfig.NOTIFY_CHANNEL);
          return roundData;
        };

        _proto.onErrorPushed = function onErrorPushed(errorData) {
          var data = errorData.data;

          if (Array.isArray(data) && data[0]) {
            var code = data[0].code;
            var cmdId = data[0].commandId;

            if (code != null) {
              data[0].cd = code;
              delete data[0].code;
            }

            if (cmdId != null) {
              data[0].cId = cmdId;
              delete data[0].commandId;
            }
          }

          _gaGameNetwork.prototype.onErrorPushed.call(this, errorData);
        };

        return gcGameNetwork;
      }(gaGameNetwork));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcGeneralInitialization.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaGeneralInitialization.ts', './gcCommandID.ts', './gcDataFactory.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, gaGeneralInitialization, gcCommandID, gcDataFactory;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaGeneralInitialization = module.default;
    }, function (module) {
      gcCommandID = module.default;
    }, function (module) {
      gcDataFactory = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "ca578eCTINHKZNBKPj7D55m", "gcGeneralInitialization", undefined);

      var ccclass = _decorator.ccclass;
      var gcGeneralInitialization = exports('default', (_dec = ccclass('gcGeneralInitialization'), _dec(_class = /*#__PURE__*/function (_gaGeneralInitializat) {
        _inheritsLoose(gcGeneralInitialization, _gaGeneralInitializat);

        function gcGeneralInitialization() {
          return _gaGeneralInitializat.apply(this, arguments) || this;
        }

        var _proto = gcGeneralInitialization.prototype;

        _proto.baseInitInstances = function baseInitInstances() {
          if (gcCommandID.instance == null) {
            gcCommandID.instance = new gcCommandID();
          }

          if (gcDataFactory.instance == null) {
            gcDataFactory.instance = new gcDataFactory();
          }

          _gaGeneralInitializat.prototype.baseInitInstances.call(this);
        };

        return gcGeneralInitialization;
      }(gaGeneralInitialization)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcInitState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaInitState.ts', './gaDataStore.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, gaInitState, gaDataStore;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaInitState = module.default;
    }, function (module) {
      gaDataStore = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "94797vHNmpHJqgesqLluvpp", "gcInitState", undefined);

      var ccclass = _decorator.ccclass;
      var gcInitState = exports('default', (_dec = ccclass("gcInitState"), _dec(_class = /*#__PURE__*/function (_gaInitState) {
        _inheritsLoose(gcInitState, _gaInitState);

        function gcInitState() {
          return _gaInitState.apply(this, arguments) || this;
        }

        var _proto = gcInitState.prototype;

        _proto.refreshPayout = function refreshPayout() {
          gaDataStore.instance.userInfo.clearPending();
          this.pendingRequest = null;
          this.startBetting();
        };

        return gcInitState;
      }(gaInitState)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcJoinGameData.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gcDataStore.ts', './gcRoundData.ts'], function (exports) {
  var _inheritsLoose, cclegacy, gcDataStore, gcRoundData;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gcDataStore = module.default;
    }, function (module) {
      gcRoundData = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "69c29lp4v9MwZElhrZdYgw8", "gcJoinGameData", undefined);

      var gcJoinGameData = exports('default', /*#__PURE__*/function (_gcRoundData) {
        _inheritsLoose(gcJoinGameData, _gcRoundData);

        function gcJoinGameData(data) {
          var _this;

          _this = _gcRoundData.call(this, data) || this;
          _this.gameChannel = undefined;
          var userInfo = data.userInfo,
              gc = data.gc;
          _this.gameChannel = gc;

          if (userInfo) {
            var mb = userInfo.mb.split(',');
            mb.forEach(function (it) {
              var denom = it.split(';');
              gcDataStore.instance.denoms[denom[0]] = denom[1];

              if (!gcDataStore.instance.currDenomId) {
                gcDataStore.instance.currDenomId = denom[0];
              }
            });
          }

          return _this;
        }

        return gcJoinGameData;
      }(gcRoundData));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcMainController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaMainController.ts', './gaEventsCode.ts', './gaLogger.ts', './gcCommandID.ts', './gcEventsCode.ts', './gcDataFactory.ts', './gcPlayerInfoUpdated.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, gaMainController, gaEventsCode, logger, gcCommandID, gcEventsCode, gcDataFactory, gcPlayerInfoUpdated;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaMainController = module.default;
    }, function (module) {
      gaEventsCode = module.default;
    }, function (module) {
      logger = module.default;
    }, function (module) {
      gcCommandID = module.default;
    }, function (module) {
      gcEventsCode = module.default;
    }, function (module) {
      gcDataFactory = module.default;
    }, function (module) {
      gcPlayerInfoUpdated = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "11b5e8oD5xE5ZdJzsbDTWDd", "gcMainController", undefined);

      var ccclass = _decorator.ccclass;
      var gcMainController = exports('default', (_dec = ccclass("gcMainController"), _dec(_class = /*#__PURE__*/function (_gaMainController) {
        _inheritsLoose(gcMainController, _gaMainController);

        function gcMainController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _gaMainController.call.apply(_gaMainController, [this].concat(args)) || this;
          _this.gameNetwork = null;
          return _this;
        }

        var _proto = gcMainController.prototype;

        _proto.initEvents = function initEvents() {
          _gaMainController.prototype.initEvents.call(this);

          this.register(gcEventsCode.NETWORK.WEB_SOCKET_MESSAGE, this.onMessage);
          this.register(gcEventsCode.ACTION.CLAIM, this.requestCashOut);
        };

        _proto.requestBet = function requestBet(bets) {
          this.clearUserBetting();
          this.promiseBetting = this.gameNetwork.bet(bets);
          this.promiseBetting["catch"](function (err) {
            logger.error("Request play failed", err);
          });
        };

        _proto.requestCashOut = function requestCashOut() {
          var _this2 = this;

          this.gameNetwork.cashOut().then(function () {
            _this2.emit(gaEventsCode.JACKPOT.PAUSE_JACKPOT);
          })["catch"](function (err) {
            logger.error("Request cash out failed", err);
          });
        };

        _proto.onEndGame = function onEndGame() {
          this.gameNetwork.stopKeepActive();
          this.emit(gcEventsCode.DATA.END_GAME);
        };

        _proto.onStartGame = function onStartGame() {
          this.gameNetwork.keepActive();
          this.emit(gaEventsCode.JACKPOT.PAUSE_JACKPOT);
          this.emit(gcEventsCode.DATA.START_GAME);
        };

        _proto.onMessage = function onMessage(eventData) {
          var event = eventData.event,
              data = eventData.data;
          var playerInfo = null;

          if (data && data.player) {
            playerInfo = gcDataFactory.instance.create(gcPlayerInfoUpdated, data);
          }

          switch (event) {
            case gcCommandID.ON_START_GAME:
              this.onStartGame();
              this.emit(gcEventsCode.DATA.UPDATE_MULTIPLIER, playerInfo);
              break;

            case gcCommandID.ON_PLAYER_INFO_UPDATE:
              this.emit(gcEventsCode.DATA.UPDATE_MULTIPLIER, playerInfo);
              break;

            case gcCommandID.ON_CASH_OUT:
              this.emit(gcEventsCode.DATA.CASH_OUT, playerInfo);
              this.onEndGame();
              break;

            case gcCommandID.ON_CRASH:
              this.emit(gcEventsCode.DATA.CRASH, playerInfo);
              this.onEndGame();
              break;
          }
        };

        return gcMainController;
      }(gaMainController)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcPlayerInfoUpdated.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "2ebe3FjS0dKUb6YnRRUdpQr", "gcPlayerInfoUpdated", undefined);

      var gcPlayerInfoUpdated = exports('default', function gcPlayerInfoUpdated(data) {
        this.multiplier = undefined;
        this.sessionId = "";
        this.commandId = "";
        var player = data.player;
        this.multiplier = player.mul;
        this.sessionId = player.id;
        this.commandId = player.cId;
      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcPlayingState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaPlayingState.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, gaPlayingState;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaPlayingState = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "37bffggUT5C8qmjFDFJmT8Y", "gcPlayingState", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gcPlayingState = exports('default', (_dec = ccclass("gcPlayingState"), _dec(_class = /*#__PURE__*/function (_gaPlayingState) {
        _inheritsLoose(gcPlayingState, _gaPlayingState);

        function gcPlayingState() {
          return _gaPlayingState.apply(this, arguments) || this;
        }

        var _proto = gcPlayingState.prototype; //#region ------------------------------------------------------------------ Declare variables
        //#endregion
        //#region  ------------------------------------------------------------------ public functions
        //#endregion
        //#region  ----------------------------------------------------------------- private functions

        _proto.lock = function lock() {};

        _proto.unlock = function unlock() {} //#endregion
        ;

        return gcPlayingState;
      }(gaPlayingState)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcResultData.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaResultData.ts'], function (exports) {
  var _inheritsLoose, cclegacy, gaResultData;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaResultData = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "ac1c4wuK7FM3plfg+wkqvEQ", "gcResultData", undefined);

      var gcResultData = exports('default', /*#__PURE__*/function (_gaResultData) {
        _inheritsLoose(gcResultData, _gaResultData);

        function gcResultData() {
          return _gaResultData.apply(this, arguments) || this;
        }

        return gcResultData;
      }(gaResultData));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcResultState.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaResultState.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, gaResultState;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
    }, function (module) {
      gaResultState = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "e41cemkvNJAQp9IH62X85yE", "gcResultState", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var gcResultState = exports('default', (_dec = ccclass("gcResultState"), _dec(_class = /*#__PURE__*/function (_gaResultState) {
        _inheritsLoose(gcResultState, _gaResultState);

        function gcResultState() {
          return _gaResultState.apply(this, arguments) || this;
        }

        return gcResultState;
      }(gaResultState)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/gcRoundData.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaRoundData.ts'], function (exports) {
  var _inheritsLoose, cclegacy, gaRoundData;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
    }, function (module) {
      gaRoundData = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "ba4ef4nmMdEHr1P/R11Hsm+", "gcRoundData", undefined);

      var gcRoundData = exports('default', /*#__PURE__*/function (_gaRoundData) {
        _inheritsLoose(gcRoundData, _gaRoundData);

        function gcRoundData(data) {
          return _gaRoundData.call(this, data) || this;
        }

        return gcRoundData;
      }(gaRoundData));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/GeneralInitialization.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './gaCommandID.ts', './Data.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, director, Component, gaEventEmitter, gaCommandID, Data;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      director = module.director;
      Component = module.Component;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      gaCommandID = module.default;
    }, function (module) {
      Data = module.Data;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "8b214BZ2ZdJW7n8L9J3D8RT", "GeneralInitialization", undefined);

      var ccclass = _decorator.ccclass;
      var GeneralInitialization = exports('GeneralInitialization', (_dec = ccclass('GeneralInitialization'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(GeneralInitialization, _Component);

        function GeneralInitialization() {
          return _Component.apply(this, arguments) || this;
        }

        var _proto = GeneralInitialization.prototype;

        _proto.onLoad = function onLoad() {
          this.baseInitInstances();
          director.addPersistRootNode(this.node);
        };

        _proto.baseInitInstances = function baseInitInstances() {
          if (gaEventEmitter.instance == null) {
            gaEventEmitter.instance = new gaEventEmitter();
          }

          if (gaCommandID.instance == null) {
            gaCommandID.instance = new gaCommandID();
          }

          if (Data.instance == null) {
            Data.instance = new Data();
          }
        };

        return GeneralInitialization;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/globalConfig.ts", ['cc'], function () {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "f666fZHMPZPYLzkEcEVye4i", "globalConfig", undefined);

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/globalNetwork.ts", ['cc', './loadConfigAsync.ts', './game-network.mjs_cjs=&original=.js', './game-network.js'], function (exports) {
  var cclegacy, log, warn, sys, loadConfigAsync, _cjsExports;

  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      log = module.log;
      warn = module.warn;
      sys = module.sys;
    }, function (module) {
      loadConfigAsync = module.default;
    }, null, function (module) {
      _cjsExports = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "ec906OpgxlOkISCFs4dK7/M", "globalNetwork", undefined);

      var network = globalThis.GameNetwork || _cjsExports;
      var MessageManager = network.MessageManager,
          ServiceRest = network.ServiceRest;
      var logger = network.lib.logger;
      logger && logger.updateLogger(log, log, warn);
      var messageManager = MessageManager.getInstance();

      var GlobalNetwork = function GlobalNetwork() {
        var _this = this;

        this.gamesData = {};
        this.token = null;
        this.refreshToken = null;
        this.socket = null;
        this.expectedEvent = '';
        this.expectedCommandId = '';

        this.init = function (token, refreshToken, envId, gameIdSocket) {
          if (refreshToken === void 0) {
            refreshToken = '';
          }

          if (envId === void 0) {
            envId = 'portal';
          }

          if (gameIdSocket === void 0) {
            gameIdSocket = 'all';
          }

          log("Network using V3");
          _this.token = token;
          _this.refreshToken = refreshToken;

          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              SOCKET_URL = _loadConfigAsync$getC.SOCKET_URL,
              API_URL = _loadConfigAsync$getC.API_URL;

          var deviceInfo = {
            os: sys.os,
            osVersion: sys.osVersion,
            platform: sys.platform,
            browser: sys.browserType,
            browserVersion: sys.browserVersion,
            language: sys.language
          };
          messageManager.initSocket({
            socketUrl: SOCKET_URL,
            apiUrl: API_URL,
            urlVerifyToken: 'auth/token/login',
            env: envId,
            games: gameIdSocket,
            token: token,
            serviceRest: ServiceRest.getInstance('cc'),
            device: deviceInfo
          });
          loadConfigAsync.setUpSentry();
        };

        this.getToken = function () {
          return _this.token;
        };

        this.setToken = function (token) {
          _this.token = token;
        };

        this.registerGame = function (gameData) {
          var gameId = gameData.gameId,
              gameState = gameData.gameState;

          if (typeof Sentry !== 'undefined') {
            Sentry.configureScope(function (scope) {
              scope.setExtra("gameId", gameId);
            });
          }

          if (!gameState) return;
          return new gameState({
            gameData: gameData
          });
        };

        this.initGame = function (gameData) {
          if (gameData === void 0) {
            gameData = {};
          }

          gameData.token = _this.getToken();

          if (typeof Sentry !== 'undefined') {
            Sentry.configureScope(function (scope) {
              scope.setExtra("gameId", gameData.gameId);
            });
          }

          return gameData;
        };

        this.triggerUserLogout = function () {
          messageManager.closeAndCleanUp();
        };

        this.outGame = function () {};
      };

      var globalNetwork = exports('default', new GlobalNetwork());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/HotUpdate.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './UpdatePanel.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, _createClass, cclegacy, _decorator, log, sys, game, Component, UpdatePanel;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
      _createClass = module.createClass;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      log = module.log;
      sys = module.sys;
      game = module.game;
      Component = module.Component;
    }, function (module) {
      UpdatePanel = module.UpdatePanel;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

      cclegacy._RF.push({}, "8ee7ate7OVDEph2ruFCYLQZ", "HotUpdate", undefined);

      var jsb = window.jsb;
      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var HotUpdate = exports('HotUpdate', (_dec = ccclass('HotUpdate'), _dec2 = property(UpdatePanel), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(HotUpdate, _Component);

        function HotUpdate() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "panel", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "manifestFileName", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "storageDownloadPath", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "maximumRetry", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "autodownload", _descriptor5, _assertThisInitialized(_this));

          _this._updating = false;
          _this._canRetry = false;
          _this._storagePath = '';
          _this._am = null;
          _this._updateListener = null;
          _this._failCount = 0;

          _this.versionCompareHandle = function (versionA, versionB) {
            console.log("JS Custom Version Compare: version A is " + versionA + " version B is " + versionB);
            var vA = versionA.split('.');
            var vB = versionB.split('.');

            for (var i = 0; i < vA.length; ++i) {
              var a = parseInt(vA[i]);
              var b = parseInt(vB[i] || '0');

              if (a === b) {
                continue;
              } else {
                return a - b;
              }
            }

            if (vB.length > vA.length) {
              return -1;
            } else {
              return 0;
            }
          };

          return _this;
        }

        var _proto = HotUpdate.prototype;

        _proto.onLoad = function onLoad() {
          if (!jsb) {
            return;
          }

          var writablePath = jsb.fileUtils ? jsb.fileUtils.getWritablePath() : '/';
          this._storagePath = "" + writablePath + this.storageDownloadPath;
          console.log('Storage path for remote asset : ' + this._storagePath);
          this._am = new jsb.AssetsManager('', this._storagePath, this.versionCompareHandle); //TODO MD5 compare check

          this._am.setVerifyCallback(this._verifyFileHandle.bind(this));

          this.loadManifest();
          this.checkUpdate();
        };

        _proto._verifyFileHandle = function _verifyFileHandle(path, asset) {
          var compressed = asset.compressed;
          var relativePath = asset.path;
          var size = asset.size;

          if (compressed) {
            log("Verification passed: " + relativePath);
            return true;
          } else {
            //TODO implement md5 content, it's too lagging
            var fileSize = jsb.fileUtils.getFileSize(path);

            if (size == fileSize) {
              log("Verification passed: " + relativePath);
              return true;
            }

            log("Verification failed: " + relativePath + " " + size + "/" + fileSize);
            return false;
          }
        };

        _proto.loadManifest = function loadManifest() {
          if (sys.isNative) {
            if (jsb.fileUtils.isFileExist(this.manifestFileName)) {
              var path = jsb.fileUtils.fullPathForFilename(this.manifestFileName);
              log("find manifest at path " + path);

              this._am.loadLocalManifest(path);
            } else {
              log("cant find manifest");
            }
          }
        };

        _proto.loadManifestFromString = function loadManifestFromString(customManifestStr) {
          if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
            log('load custom manifest');
            var manifest = new jsb.Manifest(customManifestStr, this._storagePath);

            this._am.loadLocalManifest(manifest, this._storagePath);
          }
        };

        _proto.checkUpdate = function checkUpdate() {
          if (!this._am) return;

          if (this._updating) {
            this.panel.info.string = 'Checking version';
            return;
          }

          this._updating = true;

          if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
            log("Failed to checkUpdate, need to load manifest first");
          }

          if (!this._am.getLocalManifest() || !this._am.getLocalManifest().isLoaded()) {
            log("Failed to load local manifest ...");
            return;
          }

          this._am.setEventCallback(this.checkCb.bind(this));

          this._am.checkUpdate();
        };

        _proto.checkCb = function checkCb(event) {
          console.log('Code: ' + event.getEventCode());
          var hasNewVersion = false;

          switch (event.getEventCode()) {
            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
              log("No local manifest file found, hot update skipped.");
              break;

            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
              log("Fail to download manifest file, hot update skipped.");
              break;

            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
              log("Already up to date with the latest remote version.");
              break;

            case jsb.EventAssetsManager.NEW_VERSION_FOUND:
              log('New version found');
              hasNewVersion = true;
              this.panel.node.active = true;
              this.panel.byteProgress.progress = 0;
              break;

            default:
              return;
          }

          this._am.setEventCallback(null);

          this._checkListener = null;
          this._updating = false;

          if (hasNewVersion && this.autodownload) {
            this.hotUpdate();
          }
        };

        _proto.hotUpdate = function hotUpdate() {
          if (this._am && !this._updating) {
            this._updating = true;

            this._am.setEventCallback(this.updateCb.bind(this));

            if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
              log("Failed to load hotupdate, need load manifest first");
            }

            this._failCount = 0;

            this._am.update();
          }
        };

        _proto.updateCb = function updateCb(event) {
          var doFinishJob = false;
          var failed = false;

          switch (event.getEventCode()) {
            case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
              log("No local manifest file found, hot update skipped.");
              failed = true;
              break;

            case jsb.EventAssetsManager.UPDATE_PROGRESSION:
              var percent = event.getPercent();

              if (!isNaN(percent)) {
                this.panel.byteProgress.progress = percent;
                this.panel.info.string = "Updating..." + Math.floor(percent * 100) + "%";
              }

              var msg = event.getMessage();

              if (msg) {
                log("Updated file: " + msg);
              }

              break;

            case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
            case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
              log("Fail to download manifest file, hot update skipped.");
              failed = true;
              break;

            case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
              log("Already up to date with the latest remote version.");
              failed = true;
              break;

            case jsb.EventAssetsManager.UPDATE_FINISHED:
              log("Update finished. " + event.getMessage());
              doFinishJob = true;
              break;

            case jsb.EventAssetsManager.UPDATE_FAILED:
              log("Update failed. " + event.getMessage());
              this._updating = false;
              this._canRetry = true;
              break;

            case jsb.EventAssetsManager.ERROR_UPDATING:
              log("Asset update error: " + event.getAssetId() + ", " + event.getMessage());
              break;

            case jsb.EventAssetsManager.ERROR_DECOMPRESS:
              this.panel.info.string = event.getMessage();
              break;
          }

          if (failed) {
            this._am.setEventCallback(null);

            this._updateListener = null;
            this._updating = false;
          }

          if (this._canRetry) {
            if (this._failCount < this.maximumRetry) {
              this._failCount += 1;
              this.retry();
            } else {
              this.panel.info.string = "Failed to update new version, restart game to try again";
            }
          }

          if (doFinishJob) {
            this._am.setEventCallback(null);

            this._updateListener = null;
            var searchPaths = jsb.fileUtils.getSearchPaths();

            var newPaths = this._am.getLocalManifest().getSearchPaths();

            console.log(JSON.stringify(newPaths));
            Array.prototype.unshift.apply(searchPaths, newPaths);
            localStorage.setItem('HotUpdateSearchPaths', JSON.stringify(searchPaths));
            jsb.fileUtils.setSearchPaths(searchPaths);
            setTimeout(function () {
              game.restart();
            }, 1000);
          }
        };

        _proto.retry = function retry() {
          if (!this._updating && this._canRetry) {
            this._canRetry = false;
            this.panel.info.string = "Retry failed Assets...";

            this._am.downloadFailedAssets();
          }
        };

        _proto.onDestroy = function onDestroy() {
          if (this._updateListener) {
            this._am.setEventCallback(null);

            this._updateListener = null;
          }
        };

        _createClass(HotUpdate, [{
          key: "IsUpdating",
          get: function get() {
            return this._updating;
          }
        }]);

        return HotUpdate;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "panel", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "manifestFileName", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 'project.manifest';
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "storageDownloadPath", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 'enotion-hotupdate';
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "maximumRetry", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 3;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "autodownload", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return true;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/InitSocketComponent.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './globalNetwork.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Component, globalNetwork;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Component = module.Component;
    }, function (module) {
      globalNetwork = module.default;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "fe931LhyMNInZ7vvHP8UfBj", "InitSocketComponent", undefined);

      var ccclass = _decorator.ccclass;
      var InitSocketComponent = exports('InitSocketComponent', (_dec = ccclass('InitSocketComponent'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(InitSocketComponent, _Component);

        function InitSocketComponent() {
          return _Component.apply(this, arguments) || this;
        }

        var _proto = InitSocketComponent.prototype;

        _proto.init = function init(token) {
          globalNetwork.init(token);
        };

        return InitSocketComponent;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ItemLobby.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Sprite, Button, Node, v3, Event, Component, Color;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Sprite = module.Sprite;
      Button = module.Button;
      Node = module.Node;
      v3 = module.v3;
      Event = module.Event;
      Component = module.Component;
      Color = module.Color;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "5c457zj8jZGaJOoxcIw0SWf", "ItemLobby", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var ItemLobby = exports('ItemLobby', (_dec = ccclass('ItemLobby'), _dec2 = property({
        type: Sprite
      }), _dec3 = property({
        type: Button
      }), _dec4 = property({
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ItemLobby, _Component);

        function ItemLobby() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.gameId = null;

          _initializerDefineProperty(_this, "icon", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "button", _descriptor2, _assertThisInitialized(_this));

          _this.config = null;

          _initializerDefineProperty(_this, "jackpot", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "dimColor", _descriptor4, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = ItemLobby.prototype;

        _proto.onLoad = function onLoad() {
          this.node.on('ENABLE_SELECTED_GAME', this.enableGame.bind(this));
          this.node.on('DISABLE_SELECTED_GAME', this.disableGame.bind(this));
          this.node.on('JACKPOT_UPDATE', this.jackpotUpdate, this);
        };

        _proto.setJackpotY = function setJackpotY(posY) {
          this.jackpot.setPosition(v3(0, posY, 0));
        };

        _proto.jackpotUpdate = function jackpotUpdate(data) {
          var _this2 = this; // console.log(data);


          var listJP = Object.keys(data);
          var jpName = listJP.filter(function (it) {
            return it.indexOf(_this2.gameId) > 0;
          })[0];

          if (jpName) {
            var jpData = data[jpName];
            this.jackpot.emit('UPDATE_JACKPOT', {
              JP3: jpData[3],
              JP2: jpData[2],
              JP1: jpData[1]
            });
          }
        };

        _proto.setSprite = function setSprite(spriteFrame) {
          this.icon.spriteFrame = spriteFrame;
        };

        _proto.setGameConfig = function setGameConfig(id, config) {
          this.gameId = id;
          this.config = config;
        };

        _proto.disableGame = function disableGame() {
          this.icon.active = false; // this.icon.getComponent(Sprite).color = this.dimColor;
        };

        _proto.enableGame = function enableGame() {
          this.icon.active = true; // this.icon.getComponent(Sprite).color = Color.WHITE;
        };

        _proto.onClick = function onClick() {
          var ev = new Event('RQ_PLAY_GAME', true);
          ev['gameId'] = this.gameId;
          ev['config'] = this.config;
          this.node.dispatchEvent(ev);
        };

        return ItemLobby;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "icon", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "button", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "jackpot", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "dimColor", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Color();
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LayoutNodeInstance.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Component;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2;

      cclegacy._RF.push({}, "e17d55QpGxCiprWgGmQLSDT", "LayoutNodeInstance", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var LayoutNodeInstance = exports('LayoutNodeInstance', (_dec = ccclass('LayoutNodeInstance'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LayoutNodeInstance, _Component);

        function LayoutNodeInstance() {
          return _Component.apply(this, arguments) || this;
        }

        var _proto = LayoutNodeInstance.prototype;

        _proto.onLoad = function onLoad() {
          // console.log("LayoutNodeInstance onLoad");
          if (LayoutNodeInstance.onLoadCallback != null) {
            LayoutNodeInstance.onLoadCallback(this.node);
          }
        };

        return LayoutNodeInstance;
      }(Component), _class2.onLoadCallback = null, _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LetterSpacing.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, warn, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      warn = module.warn;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "06158ZI+yBOppfcR+STxzzA", "LetterSpacing", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var LetterSpacing = exports('LetterSpacing', (_dec = ccclass('LetterSpacing'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LetterSpacing, _Component);

        function LetterSpacing() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "spacingX", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = LetterSpacing.prototype;

        _proto.start = function start() {
          var label = this.node.getComponent(Label);

          if (label) {
            label.spacingX = this.spacingX;
          } else {
            warn("do not have label to custom letter spacing");
          }
        };

        return LetterSpacing;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "spacingX", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/loadConfigAsync.ts", ['cc', './appConfig.ts', './appConfig-debug.ts', './XOCypher.ts', './serviceRest.ts'], function (exports) {
  var cclegacy, sys, urlConstant, urlConstant$1, xorCipher, apiObject;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      sys = module.sys;
    }, function (module) {
      urlConstant = module.urlConstant;
    }, function (module) {
      urlConstant$1 = module.urlConstant;
    }, function (module) {
      xorCipher = module.default;
    }, function (module) {
      apiObject = module.default;
    }],
    execute: function () {
      cclegacy._RF.push({}, "65982XRfqlJUrHV60UubZQG", "loadConfigAsync", undefined);

      var lodash = _;

      var LoadConfigAsync = /*#__PURE__*/function () {
        function LoadConfigAsync() {
          var _this = this;

          this.dataUpdate = void 0;
          this.dataUpdateProd = void 0;

          this.setUpSentry = function () {
            var _this$dataUpdate = _this.dataUpdate,
                IS_PRODUCTION = _this$dataUpdate.IS_PRODUCTION,
                IS_SHOW_STATS = _this$dataUpdate.IS_SHOW_STATS;

            if (typeof Sentry !== 'undefined') {
              if (IS_PRODUCTION) {
                Sentry.init({
                  dsn: 'https://32ab507534bc4befbd5e1b20e223c93d@sentry.io/1780011'
                });
              } else {
                Sentry.init({
                  dsn: 'https://b034a1c4d32e42af90071e62d2bf3290@sentry.io/2655786'
                });
              }
            }
          };

          this.dataUpdate = lodash.cloneDeep(urlConstant);
          var isDebugMode = sys.isBrowser && window.location.hostname === 'localhost';

          if (this.dataUpdate.REMOTE_CONFIG_URL_FULL && !sys.isBrowser && !isDebugMode) {
            setTimeout(function () {
              apiObject.get({
                apiUrl: _this.dataUpdate.REMOTE_CONFIG_URL_FULL,
                url: '',
                callback: _this.handleDataSuccess.bind(_this),
                callbackErr: _this.handleDataError.bind(_this)
              });
            }, 100);
          } else if (this.dataUpdate.REMOTE_CONFIG_URL_FULL && sys.isBrowser) {
            setTimeout(function () {
              apiObject.getRawDataWeb({
                fullURL: _this.dataUpdate.REMOTE_CONFIG_URL_FULL,
                callback: _this.handleDataSuccess.bind(_this),
                callbackErr: _this.handleDataError.bind(_this)
              });
            }, 100);
          } else if (this.dataUpdate.REMOTE_CONFIG_URL && sys.isBrowser && !isDebugMode) {
            setTimeout(function () {
              var domainGame = typeof domainGlobal !== 'undefined' ? domainGlobal : window.location.origin;
              apiObject.get({
                apiUrl: domainGame + _this.dataUpdate.REMOTE_CONFIG_URL,
                params: {
                  t: new Date().getTime()
                },
                url: '',
                callback: _this.handleDataSuccess.bind(_this),
                callbackErr: _this.handleDataError.bind(_this)
              });
            }, 100);
          } else {
            if (sys.localStorage.getItem && sys.localStorage.getItem("enviroment") != null) {
              try {
                if (sys.localStorage.getItem("enviroment").indexOf("test") >= 0) {
                  // check appConfigDebug
                  if (urlConstant$1) {
                    this.dataUpdate = lodash.cloneDeep(urlConstant$1);
                    this.dataUpdate = this.decryptData(this.dataUpdate);
                  } else {
                    this.dataUpdate = lodash.cloneDeep(urlConstant);
                    this.dataUpdate = this.decryptData(this.dataUpdate);
                  }
                } else {
                  this.dataUpdate = lodash.cloneDeep(urlConstant);
                  this.dataUpdate = this.decryptData(this.dataUpdate);
                }
              } catch (e) {
                this.dataUpdate = lodash.cloneDeep(urlConstant);
                this.dataUpdate = this.decryptData(this.dataUpdate);
              }
            } else {
              this.dataUpdate = lodash.cloneDeep(urlConstant);
              this.dataUpdate = this.decryptData(this.dataUpdate);
            }

            this.dataUpdate.IS_FINISHED_REMOTE = true;
          }
        }

        var _proto = LoadConfigAsync.prototype;

        _proto.handleDataSuccess = function handleDataSuccess(data) {
          this.dataUpdate = lodash.cloneDeep(data);
          this.dataUpdate = this.decryptData(this.dataUpdate);
          this.dataUpdateProd = lodash.cloneDeep(this.dataUpdate);
          sys.localStorage.setItem('appConfigLocalStore', JSON.stringify(this.dataUpdateProd));
          this.dataUpdate.IS_FINISHED_REMOTE = true;
        };

        _proto.handleDataError = function handleDataError() {
          var appConfigLocal = sys.localStorage.getItem('appConfigLocalStore');

          if (appConfigLocal) {
            appConfigLocal = JSON.parse(appConfigLocal);
            this.dataUpdate = lodash.cloneDeep(appConfigLocal);
          } else {
            this.dataUpdate = lodash.cloneDeep(urlConstant);
          }

          this.dataUpdate = this.decryptData(this.dataUpdate);
          this.dataUpdateProd = lodash.cloneDeep(this.dataUpdate);
          this.dataUpdate.IS_FINISHED_REMOTE = true;
        };

        _proto.decryptData = function decryptData(data) {
          if (data.IS_DECODE) {
            Object.keys(data).forEach(function (key) {
              if (key === 'API_URL' || key === 'SOCKET_URL' || key.indexOf('IPMaster') > -1) {
                data[key] = xorCipher.decode('Không Biết Đặt Tên Gì', data[key]);
              }
            });
          }

          delete data.IS_DECODE;
          return data;
        };

        _proto.getConfig = function getConfig() {
          return this.dataUpdate;
        };

        _proto.replaceConfig = function replaceConfig(config) {
          var _this2 = this;

          Object.keys(config).forEach(function (it) {
            _this2.dataUpdate[it] = config[it];
          });
        };

        _proto.switchEnv = function switchEnv(isProd) {
          if (isProd) {
            if (this.dataUpdateProd) {
              this.dataUpdate = lodash.cloneDeep(this.dataUpdateProd);
            } else {
              this.dataUpdate = lodash.cloneDeep(urlConstant);
            }

            this.dataUpdate = this.decryptData(this.dataUpdate);
            this.dataUpdate.IS_FINISHED_REMOTE = true;
          } else {
            this.dataUpdate = lodash.cloneDeep(urlConstant$1);
            this.dataUpdate = this.decryptData(this.dataUpdate);
            this.dataUpdate.IS_FINISHED_REMOTE = true;
          }
        };

        return LoadConfigAsync;
      }();

      var loadConfigAsync = exports('default', new LoadConfigAsync());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LoadingScreen.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './loadConfigAsync.ts', './gameCommonUtils.ts', './utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, ProgressBar, sys, assetManager, error, director, Prefab, instantiate, Component, loadConfigAsync, gameCommonUtils, registerLoadHowl, setOpacity, unregisterLoadHowl;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      ProgressBar = module.ProgressBar;
      sys = module.sys;
      assetManager = module.assetManager;
      error = module.error;
      director = module.director;
      Prefab = module.Prefab;
      instantiate = module.instantiate;
      Component = module.Component;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      gameCommonUtils = module.default;
    }, function (module) {
      registerLoadHowl = module.registerLoadHowl;
      setOpacity = module.setOpacity;
      unregisterLoadHowl = module.unregisterLoadHowl;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10;

      cclegacy._RF.push({}, "01f22w8LoVFq5YVtgEK6Ozg", "LoadingScreen", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var LoadingScreen = exports('LoadingScreen', (_dec = ccclass('LoadingScreen'), _dec2 = property({
        visible: function visible() {
          return this.loadByBundle;
        }
      }), _dec3 = property({
        visible: function visible() {
          return this.loadByBundle;
        }
      }), _dec4 = property({
        type: Node,
        visible: function visible() {
          return this.loadByBundle;
        }
      }), _dec5 = property({
        visible: function visible() {
          return !this.loadByBundle;
        }
      }), _dec6 = property({
        visible: function visible() {
          return !this.loadByBundle;
        }
      }), _dec7 = property({
        visible: function visible() {
          return !this.loadByBundle;
        }
      }), _dec8 = property(ProgressBar), _dec9 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LoadingScreen, _Component);

        function LoadingScreen() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "loadByBundle", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "bundlePath", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "bundleMainScene", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "gameHolder", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sceneName", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sdSceneName", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sceneNameIframe", _descriptor7, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sceneNameHistory", _descriptor8, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "progressBar", _descriptor9, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "homeBtn", _descriptor10, _assertThisInitialized(_this));

          _this.preloadGameScene = false;
          _this.preloadGamePrefab = false;
          _this.switchGameScene = false;
          _this.isBackToLobby = false;
          _this.gameBundle = null;
          _this.gameNode = null;
          _this._loadedPrefab = [];
          _this.usingLoadHowl = false;
          _this.totalPercent = 0;
          _this.eventId = null;
          _this.updatedScene = '';
          return _this;
        }

        var _proto = LoadingScreen.prototype;

        _proto.onLoad = function onLoad() {
          var _this2 = this;

          if (this.sceneName === '') return;

          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;

          this.updatedScene = this.sceneName;
          var loadHistory = false;

          if (sys.isBrowser) {
            var queryString = window.location.search;
            var urlParams = new URLSearchParams(queryString);
            var history = urlParams.get('history');

            if (this.sceneNameHistory && history == 'true') {
              this.updatedScene = this.sceneNameHistory;
              loadHistory = true;
            } else if (this.sceneNameIframe) {
              this.updatedScene = this.sceneNameIframe;
            }

            if (LOGIN_IFRAME && globalThis.Howler) {
              registerLoadHowl();
              this.usingLoadHowl = true;
            }
          }

          if (sys.isMobile && this.sdSceneName) {
            this.updatedScene = this.sdSceneName;
          }

          if (this.homeBtn) {
            this.homeBtn.active = false;

            if (!LOGIN_IFRAME) {
              this.scheduleOnce(function () {
                _this2.homeBtn.active = true;

                _this2.homeBtn.off('click');

                _this2.homeBtn.on('click', function () {
                  if (_this2.isBackToLobby) return; //TODO: implement KtekEventHandler
                  // let eventHandler = this.node.getComponent("KtekEventHandler");
                  // if( eventHandler ){
                  //     eventHandler.getInstance().sendToUs("clear_cache", {
                  //         scene: sceneName
                  //     });
                  // }

                  gameCommonUtils.handleCloseGameIframe();
                  _this2.isBackToLobby = true;
                });
              }, 10);
            }
          }

          this.node.active = true;
          setOpacity(this.node, 255);

          if (this.loadByBundle && !loadHistory) {
            this.gameBundle = assetManager.getBundle(this.bundlePath);

            if (!this.gameBundle) {
              assetManager.loadBundle(this.bundlePath, function (err, bundle) {
                if (err) {
                  error("Error while loading bundle with path: BundleLobby");
                } else {
                  _this2.gameBundle = bundle;
                  _this2.preloadGamePrefab = true;

                  _this2.loadGamePrefab(bundle, _this2.bundleMainScene, _this2.eventId);
                }
              });
            } else {
              this.preloadGamePrefab = true;
              this.loadGamePrefab(this.gameBundle, this.bundleMainScene, this.eventId);
            }
          } else {
            this.preloadGameScene = true;
            director.preloadScene(this.updatedScene, function (completedCount, totalCount) {
              if (totalCount > 0) {
                _this2.totalPercent = completedCount / totalCount;
              }
            }, function (error, scene) {
              if (error) {
                gameCommonUtils.handleFlowOutGame();
              }
            });
          }
        };

        _proto.setProgressFull = function setProgressFull() {
          this.progressBar.progress = 1;
        };

        _proto.update = function update(dt) {
          if (this.preloadGameScene) {
            var percent = (this.totalPercent - this.progressBar.progress) / 20;

            if (percent > 0) {
              this.progressBar.progress += percent;
            }

            if (this.progressBar.progress > 0.99 && !this.switchGameScene) {
              this.switchGameScene = true;
              director.loadScene(this.updatedScene);
            }
          } else if (this.preloadGamePrefab) {
            var _percent = (this.totalPercent - this.progressBar.progress) / 20;

            if (_percent > 0) {
              this.progressBar.progress += _percent;
            }

            if (this.progressBar.progress > 0.99 && this.gameNode && !this.switchGameScene) {
              this.switchGameScene = true;
              this.loadGameNode();
            }
          }
        };

        _proto.loadGamePrefab = function loadGamePrefab(bundle, mainPrefabName, eventId) {
          var _this3 = this;

          if (eventId === void 0) {
            eventId = '';
          }

          this.eventId = eventId;
          bundle.loadDir('', Prefab, function (finish, total, item) {
            _this3.totalPercent = finish / total;
          }, function (error, assets) {
            if (error) {
              gameCommonUtils.handleFlowOutGame();
              return;
            }

            var mainPrefab = null;
            assets.forEach(function (prefab) {
              prefab.addRef();

              if (prefab.data.name == mainPrefabName) {
                mainPrefab = prefab;
              }
            });
            _this3._loadedPrefab = assets;

            if (mainPrefab) {
              _this3.gameNode = instantiate(mainPrefab);
            }
          });
        };

        _proto.loadGameNode = function loadGameNode() {
          if (this.gameNode && this.gameHolder) {
            var _director = this.gameNode.getComponent('Director');

            if (_director && _director.setEventId) _director.setEventId(this.eventId);
            this.gameNode.parent = this.gameHolder;
            if (this.homeBtn) this.homeBtn.active = false;
            this.node.active = false;
            this.unscheduleAllCallbacks();
          }
        };

        _proto.setEventId = function setEventId(id) {
          this.eventId = id;
        };

        _proto.onDestroy = function onDestroy() {
          this.unscheduleAllCallbacks();

          if (this.usingLoadHowl) {
            unregisterLoadHowl();
          }

          if (this.loadByBundle && this.gameBundle) {
            this._loadedPrefab.forEach(function (prefab) {
              prefab.decRef(true);
            });

            this._loadedPrefab = null;
            assetManager.removeBundle(this.gameBundle);

            if (sys.isNative) {
              sys.garbageCollect();
            }
          }
        };

        return LoadingScreen;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "loadByBundle", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "bundlePath", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "bundleMainScene", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "gameHolder", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "sceneName", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "sdSceneName", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "sceneNameIframe", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "sceneNameHistory", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return '';
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "progressBar", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "homeBtn", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LobbyDev.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './loadConfigAsync.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, Node, _decorator, director, Component, loadConfigAsync;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      Node = module.Node;
      _decorator = module._decorator;
      director = module.director;
      Component = module.Component;
    }, function (module) {
      loadConfigAsync = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "82220qRjXFBT5RKRiUWVVoZ", "LobbyDev", undefined);

      var _cc$_decorator = _decorator,
          ccclass = _cc$_decorator.ccclass,
          property = _cc$_decorator.property;
      var LobbyDev = exports('LobbyDev', (_dec = ccclass('LobbyDev'), _dec2 = property({
        displayName: "List Game",
        type: Node
      }), _dec3 = property({
        displayName: "Login",
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_cc$Component) {
        _inheritsLoose(LobbyDev, _cc$Component);

        function LobbyDev() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _cc$Component.call.apply(_cc$Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "listGame", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnLogin", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = LobbyDev.prototype;

        _proto.onLoad = function onLoad() {
          this._bindEvents();
        };

        _proto.start = function start() {// [3]
        } // update (deltaTime: number) {
        //     // [4]
        // }
        ;

        _proto._bindEvents = function _bindEvents() {
          var arrView = this.listGame.children;
          var length = arrView.length;

          var _loop = function _loop() {
            var view = arrView[i];
            view.off("click");
            view.on("click", function (event) {
              var sceneName = view.name;
              director.loadScene(sceneName);
            });
          };

          for (var i = 0; i < length; i++) {
            _loop();
          }

          if (this.btnLogin) {
            this.btnLogin.off('click');
            this.btnLogin.on('click', function () {
              var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
                  LOGIN_SCENE_NAME = _loadConfigAsync$getC.LOGIN_SCENE_NAME;

              if (LOGIN_SCENE_NAME) {
                director.loadScene(LOGIN_SCENE_NAME);
              }
            });
          }
        };

        return LobbyDev;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "listGame", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "btnLogin", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LobbyMenu.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "52196V367xKG4EbuCYnH8OC", "LobbyMenu", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var LobbyMenu = exports('LobbyMenu', (_dec = ccclass('LobbyMenu'), _dec2 = property({
        type: Node
      }), _dec3 = property({
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LobbyMenu, _Component);

        function LobbyMenu() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "gameNode", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "eventNode", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = LobbyMenu.prototype;

        _proto.onGameClick = function onGameClick() {
          this.eventNode.active = false;
          this.gameNode.active = true;
        };

        _proto.onEventClick = function onEventClick() {
          this.eventNode.active = true;
          this.gameNode.active = false;
        };

        return LobbyMenu;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "gameNode", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "eventNode", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LobbyScene.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './BubbleFloatGames.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Prefab, Toggle, Button, instantiate, game, NodePool, resources, JsonAsset, SpriteAtlas, director, Label, sys, setDisplayStats, Component, BubbleFloatGames;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Prefab = module.Prefab;
      Toggle = module.Toggle;
      Button = module.Button;
      instantiate = module.instantiate;
      game = module.game;
      NodePool = module.NodePool;
      resources = module.resources;
      JsonAsset = module.JsonAsset;
      SpriteAtlas = module.SpriteAtlas;
      director = module.director;
      Label = module.Label;
      sys = module.sys;
      setDisplayStats = module.setDisplayStats;
      Component = module.Component;
    }, function (module) {
      BubbleFloatGames = module.BubbleFloatGames;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;

      cclegacy._RF.push({}, "45d5dpkekdB2pRnLKF2Wj5o", "LobbyScene", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var LobbyScene = exports('LobbyScene', (_dec = ccclass('LobbyScene'), _dec2 = property({
        type: Node
      }), _dec3 = property({
        type: Prefab
      }), _dec4 = property({
        type: Node
      }), _dec5 = property({
        type: Toggle
      }), _dec6 = property({
        type: Button
      }), _dec7 = property({
        type: Prefab
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LobbyScene, _Component);

        function LobbyScene() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "iconHolder", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "iconPrefab", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "gameSelection", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "toggleDebug", _descriptor4, _assertThisInitialized(_this));

          _this.iconPool = null;
          _this.projectConfig = null;
          _this.iconList = null;
          _this.multiSlotConfig = {};

          _initializerDefineProperty(_this, "buttonEvent", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "bubbleGamesPrefab", _descriptor6, _assertThisInitialized(_this));

          _this._mapIconByGameId = {};
          return _this;
        }

        var _proto = LobbyScene.prototype;

        _proto.onLoad = function onLoad() {
          var _this2 = this;

          var bubbleGames = this.getBubbleFloatGames();

          if (!bubbleGames && this.bubbleGamesPrefab) {
            var bubbleGame = instantiate(this.bubbleGamesPrefab);
            bubbleGame.active = false;
            game.addPersistRootNode(bubbleGame);
          }

          this.node.on('RQ_PLAY_GAME', this.requestPlayGame.bind(this));
          this.iconPool = new NodePool();
          var loadCount = 0;

          var _completeLoad = function _completeLoad() {
            loadCount++;

            if (loadCount >= 2) {
              _this2.loadProjects();
            }

            _this2.buttonEvent.interactable = true;
          };

          this.buttonEvent.interactable = false;
          resources.load("jsons/LobbyConfig", JsonAsset, function (err, json) {
            _this2.projectConfig = json;

            _this2.projectConfig.addRef();

            _completeLoad();
          });
          resources.load("sprites/iconLobby", SpriteAtlas, function (err, atlas) {
            _this2.iconList = atlas;

            _this2.iconList.addRef();

            _completeLoad();
          });
        };

        _proto.getBubbleFloatGames = function getBubbleFloatGames() {
          var bubbleGames = director.getScene().getChildByName("CanvasBubbleFloatGame");
          return bubbleGames;
        };

        _proto.getIcon = function getIcon() {
          var icon = this.iconPool.get();

          if (!icon) {
            icon = instantiate(this.iconPrefab);
          }

          return icon;
        };

        _proto.getIconSpriteFrame = function getIconSpriteFrame(id) {
          if (this.iconList) {
            return this.iconList.getSpriteFrame(id);
          }

          return null;
        };

        _proto.removeAllIcons = function removeAllIcons() {
          this._mapIconByGameId = {};

          if (this.iconHolder.children) {
            while (this.iconHolder.children.length > 0) {
              this.iconPool.put(this.iconHolder.children[0]);
            }
          }
        };

        _proto.loadProjects = function loadProjects() {
          this.removeAllIcons();

          for (var id in this.projectConfig.json) {
            var config = this.projectConfig.json[id];

            if (config.displayLobby) {
              var item = this.getIcon();
              item.setParent(this.iconHolder);
              var icon = this.iconList.getSpriteFrame(config.iconName);
              var itemScript = item.getComponent('ItemLobby');

              if (icon) {
                itemScript.setSprite(icon);
              } else {
                item.getChildByName("label").getComponent(Label).string = id;
              }

              itemScript.setGameConfig(id, config);
              this._mapIconByGameId[id] = item;
            }

            if (config.prefabPath) {
              var bubbleGames = this.getBubbleFloatGames();

              if (bubbleGames) {
                var _bubbleGames$getCompo;

                bubbleGames.active = true;
                (_bubbleGames$getCompo = bubbleGames.getComponentInChildren(BubbleFloatGames)) == null ? void 0 : _bubbleGames$getCompo.addGame(id, config);
              }
            }
          }
        };

        _proto.requestPlayGame = function requestPlayGame(ev) {
          var config = ev.config;

          if (ev.config.isMultiSlot) {
            director.loadScene("MultiSlot", function () {
              var multiSlotComp = director.getScene().getChildByName('Canvas').getComponentInChildren('MultiSlot');
              multiSlotComp.requestPlayFromLobby(config);
            });
          } else {
            director.loadScene(ev.config.startScene);
          }
        };

        _proto.onEnable = function onEnable() {
          if (sys.isNative) {
            sys.garbageCollect();
          }
        };

        _proto.showDebug = function showDebug() {
          setDisplayStats(!this.toggleDebug.isChecked);
        };

        _proto.onDestroy = function onDestroy() {
          if (this.projectConfig) {
            this.projectConfig.decRef();
            this.projectConfig = null;
          }

          if (this.iconList) {
            this.iconList.decRef();
            this.iconList = null;
          }

          this.removeAllIcons();
          this.iconPool.clear();
        };

        return LobbyScene;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "iconHolder", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "iconPrefab", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "gameSelection", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "toggleDebug", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "buttonEvent", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "bubbleGamesPrefab", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LoginController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, ProgressBar, Node, director, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      ProgressBar = module.ProgressBar;
      Node = module.Node;
      director = module.director;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;

      cclegacy._RF.push({}, "0765bOvH+JIVJOWc03wnZC5", "LoginController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var LoginController = exports('LoginController', (_dec = ccclass('LoginController'), _dec2 = property(ProgressBar), _dec3 = property(Node), _dec4 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LoginController, _Component);

        function LoginController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "loadingBar", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "loadingController", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "mainScene", _descriptor3, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = LoginController.prototype;

        _proto.start = function start() {
          this.loadingBar.progress = 0;
          this.preloadMainScene();
        };

        _proto.preloadMainScene = function preloadMainScene() {
          var _this2 = this;

          this.loadingBar.node.active = true;
          this.loadMainScreen();
          director.preloadScene("MainScene", function (completedCount, totalCount) {
            var progress = completedCount / totalCount;
            _this2.loadingBar.progress = progress;
          }, function (error) {
            if (!error) ;else {
              console.error(error);
            }
          });
        };

        _proto.loadMainScreen = function loadMainScreen() {
          var _this3 = this;

          director.addPersistRootNode(this.node);
          director.loadScene("MainScene", function (err, scene) {
            director.removePersistRootNode(_this3.node);
            if (err) return;
            var canvas = scene.getChildByName('Canvas');
            var mainRoot = canvas.getChildByName('root');
            mainRoot.setParent(_this3.mainScene);
            _this3.loadingController.active = false;

            _this3.loadingController.destroy();

            canvas.destroy();
          });
        };

        return LoginController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "loadingBar", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "loadingController", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "mainScene", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LoginDev.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './loadConfigAsync.ts', './serviceRest.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, Node, _decorator, director, sys, Component, Label, loadConfigAsync, apiObject;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      Node = module.Node;
      _decorator = module._decorator;
      director = module.director;
      sys = module.sys;
      Component = module.Component;
      Label = module.Label;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      apiObject = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "92923CnVDdKsaOVS+yBf9Ay", "LoginDev", undefined);

      var _cc$_decorator = _decorator,
          ccclass = _cc$_decorator.ccclass,
          property = _cc$_decorator.property;
      var LoginDev = exports('LoginDev', (_dec = ccclass('LoginDev'), _dec2 = property({
        displayName: "List User",
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_cc$Component) {
        _inheritsLoose(LoginDev, _cc$Component);

        function LoginDev() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _cc$Component.call.apply(_cc$Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "listUser", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = LoginDev.prototype;

        _proto.onLoad = function onLoad() {
          this._bindEvents();
        };

        _proto.start = function start() {// [3]
        } // update (deltaTime: number) {
        //     // [4]
        // }
        ;

        _proto._bindEvents = function _bindEvents() {
          var _this2 = this;

          var startIdx = 100;
          var arrView = this.listUser.children;
          var length = arrView.length;

          var _loop = function _loop() {
            var view = arrView[i];
            var userId = arrView[i].getChildByName("Label").getComponent(Label);
            var currentIndex = i + 1;
            userId.string = "User " + currentIndex;
            view.off("click");
            view.on("click", function (event) {
              var indexUser = startIdx + currentIndex;
              var userName = 'user' + indexUser;
              var password = 'pwduser' + indexUser;

              _this2.loginSuccess({
                userText: userName,
                pwText: password
              });
            });
          };

          for (var i = 0; i < length; i++) {
            _loop();
          }
        };

        _proto.loginSuccess = function loginSuccess(_ref) {
          var _this3 = this;

          var userText = _ref.userText,
              pwText = _ref.pwText;

          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              IS_FINISHED_REMOTE = _loadConfigAsync$getC.IS_FINISHED_REMOTE,
              LOBBY_SCENE_NAME = _loadConfigAsync$getC.LOBBY_SCENE_NAME,
              API_URL = _loadConfigAsync$getC.API_URL,
              USER_TOKEN = _loadConfigAsync$getC.USER_TOKEN;

          if (!IS_FINISHED_REMOTE) {
            setTimeout(function () {
              _this3.loginSuccess({
                userText: userText,
                pwText: pwText
              });
            }, 100);
            return;
          }

          var dataPost = {
            userName: userText,
            password: pwText,
            fingerPrint: 'test'
          };
          apiObject.post({
            url: 'auth/login',
            data: dataPost,
            callback: function callback(res) {
              var _res$data = res.data,
                  data = _res$data.data,
                  error = _res$data.error;

              if (data) {
                director.loadScene(LOBBY_SCENE_NAME);
                sys.localStorage.setItem(USER_TOKEN, data.token);
              }
            },
            callbackErr: function callbackErr() {},
            apiUrl: API_URL
          });
        };

        return LoginDev;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "listUser", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LoginStaging.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './loadConfigAsync.ts', './serviceRest.ts', './globalNetwork.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, EditBox, Label, JsonAsset, Toggle, Node, Button, Prefab, sys, screen, instantiate, game, log, physics, director, Component, loadConfigAsync, apiObject, globalNetwork;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      EditBox = module.EditBox;
      Label = module.Label;
      JsonAsset = module.JsonAsset;
      Toggle = module.Toggle;
      Node = module.Node;
      Button = module.Button;
      Prefab = module.Prefab;
      sys = module.sys;
      screen = module.screen;
      instantiate = module.instantiate;
      game = module.game;
      log = module.log;
      physics = module.physics;
      director = module.director;
      Component = module.Component;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      apiObject = module.default;
    }, function (module) {
      globalNetwork = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15;

      cclegacy._RF.push({}, "7042cF+G9VB3aQidFVXOwrG", "LoginStaging", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var Login = exports('Login', (_dec = ccclass('Login'), _dec2 = property(EditBox), _dec3 = property(EditBox), _dec4 = property(EditBox), _dec5 = property({
        type: Label
      }), _dec6 = property({
        type: Label
      }), _dec7 = property({
        type: JsonAsset
      }), _dec8 = property({
        type: Toggle
      }), _dec9 = property({
        type: Toggle
      }), _dec10 = property({
        type: Toggle
      }), _dec11 = property({
        type: Node
      }), _dec12 = property({
        type: Node
      }), _dec13 = property({
        type: Button
      }), _dec14 = property({
        type: Prefab
      }), _dec15 = property({
        type: Prefab
      }), _dec16 = property({
        type: Label
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Login, _Component);

        function Login() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "tokenInput", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "userInput", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "passwordInput", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "errorMsg", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "version", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "versionFile", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "toggleStaging", _descriptor7, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "toggleExStaging", _descriptor8, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "toggleAccount", _descriptor9, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "passwordHolder", _descriptor10, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "tokenHolder", _descriptor11, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "btnGetToken", _descriptor12, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "stateMonitorPrefab", _descriptor13, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "stateMonitorPrefabPortrait", _descriptor14, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "physicType", _descriptor15, _assertThisInitialized(_this));

          _this.envInfo = {
            stg: {
              userId: '',
              token: '',
              api: 'https://api.staging.enostd.gay/manage-token-stg/getToken'
            },
            exstg: {
              userId: '',
              token: '',
              api: 'https://api.staging.gmstd.dev/manage-token-ex-stg/getToken'
            },
            account: {
              userId: '',
              password: '',
              api: 'https://api.staging.gmstd.dev/manage-token-ex-stg/getToken'
            },
            current: 'stg'
          };
          return _this;
        }

        var _proto = Login.prototype;

        _proto.onLoad = function onLoad() {
          // console.log('Loaded scene login v341');
          this.getConfigRemote();
          this.version.string = this.versionFile.json['v'];

          if (sys.isNative) {
            var versionFilePath = jsb.fileUtils.getWritablePath() + 'gemi-hotupdate/' + 'project.manifest';

            if (jsb.fileUtils.isFileExist(versionFilePath)) {
              var str = jsb.fileUtils.getStringFromFile(versionFilePath);

              if (str) {
                var obj = JSON.parse(str);
                this.version.string = obj.version;
              }
            }
          }

          if (this.stateMonitorPrefab) {
            var monitorPrefab = this.stateMonitorPrefab;
            var screenWidth = window ? window.innerWidth : screen.windowSize.width;
            var screenHeight = window ? window.innerHeight : screen.windowSize.height;

            if (screenWidth < screenHeight) {
              monitorPrefab = this.stateMonitorPrefabPortrait;
            }

            var monitor = instantiate(monitorPrefab);
            game.addPersistRootNode(monitor);
          } else {
            log("No StateMonitor");
          }

          if (physics.PhysicsSystem.PHYSICS_PHYSX) {
            this.physicType.string = "PhysicX";
          } else if (physics.PhysicsSystem.PHYSICS_BULLET) {
            this.physicType.string = "PhysicBullet";
          } else if (physics.PhysicsSystem.PHYSICS_CANNON) {
            this.physicType.string = "PhysicCannon";
          } else {
            this.physicType.string = "PhysicBultin";
          }
        };

        _proto.getConfigRemote = function getConfigRemote() {
          var _this2 = this;

          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              IS_FINISHED_REMOTE = _loadConfigAsync$getC.IS_FINISHED_REMOTE;

          if (!IS_FINISHED_REMOTE) {
            setTimeout(function () {
              _this2.getConfigRemote();
            }, 100);
            return;
          }

          var cachedInfo = sys.localStorage.getItem('envInfo');
          if (cachedInfo) this.envInfo = JSON.parse(cachedInfo);

          if (this.envInfo && this.envInfo.current == "stg") {
            this.toggleStaging.isChecked = true;
            this.switchStaging();
          } else if (this.envInfo && this.envInfo.current == "exstg") {
            this.toggleExStaging.isChecked = true;
            this.switchExStaging();
          } else {
            this.toggleAccount.isChecked = true;
            this.switchAccount();
          }
        };

        _proto.switchStaging = function switchStaging() {
          if (!this.toggleStaging.isChecked) return;
          this.envInfo.current = 'stg';
          var config = {
            API_URL: "https://api.staging.enostd.gay/",
            SOCKET_URL: "wss://sock.staging.enostd.gay",
            LOGIN_USE_TOKEN: true,
            URL_TOKEN: 'token',
            URL_CODE: 'code',
            USER_TOKEN: "user_token",
            IS_FINISHED_REMOTE: true,
            LOBBY_SCENE_NAME: "Lobby",
            LOGIN_SCENE_NAME: "Login",
            "IPMaster1": "wss://staging.fish.gmstd.dev/lobby-1999/",
            "IPMaster2": "wss://staging.fish.gmstd.dev/lobby-1998/",
            "IPMaster3": "wss://staging.fish.gmstd.dev/lobby-1997/",
            "IPMaster5": "wss://staging.fish.gmstd.dev/lobby-1995/",
            "IPMaster6": "wss://staging.fish.gmstd.dev/lobby-1992/",
            "IPMaster7": "wss://staging.fish.gmstd.dev/lobby-1990/",
            "IPMaster8": "wss://staging.fish.gmstd.dev/lobby-1988/",
            "IPMaster10": "wss://staging.fish.gmstd.dev/lobby-1996/",
            "IPMaster12": "wss://staging.fish.gmstd.dev/lobby-1985/",
            "IPMaster88": "wss://staging.fish.gmstd.dev/lobby-1993/"
          };
          this.btnGetToken.interactable = true;
          this.tokenHolder.active = true;
          this.passwordHolder.active = false;
          loadConfigAsync.replaceConfig(config);
          sys.localStorage.setItem('envInfo', JSON.stringify(this.envInfo));
          this.loadUserInfo();
        };

        _proto.switchExStaging = function switchExStaging() {
          if (!this.toggleExStaging.isChecked) return;
          this.envInfo.current = 'exstg';
          var config = {
            API_URL: "https://api.ex-staging.gmstd.dev/",
            SOCKET_URL: "wss://sock-bin.ex-staging.gmstd.dev",
            USER_TOKEN: "user_token",
            URL_TOKEN: "token",
            URL_CODE: "code",
            IS_FINISHED_REMOTE: true,
            LOBBY_SCENE_NAME: "Lobby",
            LOGIN_SCENE_NAME: "Login",
            "IPMaster1": "wss://prelive.fish.gmstd.dev/lobby-1999/",
            "IPMaster2": "wss://prelive.fish.gmstd.dev/xwin-lobby/",
            "IPMaster3": "wss://prelive.fish.gmstd.dev/lobby-1997/",
            "IPMaster5": "wss://prelive.fish.gmstd.dev/lobby-1995/",
            "IPMaster6": "wss://prelive.fish.gmstd.dev/lobby-1992/",
            "IPMaster7": "wss://prelive.fish.gmstd.dev/lobby-1990/",
            "IPMaster8": "wss://prelive.fish.gmstd.dev/lobby-1988/",
            "IPMaster10": "wss://prelive.fish.gmstd.dev/lobby-1996/",
            "IPMaster88": "wss://prelive.fish.gmstd.dev/lobby-1993/"
          };
          this.btnGetToken.interactable = true;
          this.tokenHolder.active = true;
          this.passwordHolder.active = false;
          loadConfigAsync.replaceConfig(config);
          sys.localStorage.setItem('envInfo', JSON.stringify(this.envInfo));
          this.loadUserInfo();
        };

        _proto.switchAccount = function switchAccount() {
          if (!this.toggleAccount.isChecked) return;
          this.envInfo.current = 'account';
          var config = {
            API_URL: "https://api2.ex-staging.gmstd.dev/",
            SOCKET_URL: "wss://sock2-bin.ex-staging.gmstd.dev",
            USER_TOKEN: "user_token",
            URL_TOKEN: "token",
            URL_CODE: "code",
            IS_FINISHED_REMOTE: true,
            LOBBY_SCENE_NAME: "Lobby",
            LOGIN_SCENE_NAME: "Login",
            FISH_CLIENT_TYPE: 2,
            "IPMaster1": "wss://prelive.fish.gmstd.dev/lobby-1999/",
            "IPMaster2": "wss://prelive.fish.gmstd.dev/lobby-1998/",
            "IPMaster3": "wss://prelive.fish.gmstd.dev/lobby-1997/",
            "IPMaster5": "wss://prelive.fish.gmstd.dev/lobby-1995/",
            "IPMaster6": "wss://prelive.fish.gmstd.dev/lobby-1992/",
            "IPMaster7": "wss://prelive.fish.gmstd.dev/lobby-1990/",
            "IPMaster8": "wss://prelive.fish.gmstd.dev/lobby-1988/",
            "IPMaster10": "wss://prelive.fish.gmstd.dev/lobby-1996/",
            "IPMaster88": "wss://prelive.fish.gmstd.dev/lobby-1993/"
          };
          this.btnGetToken.interactable = false;
          this.tokenHolder.active = false;
          this.passwordHolder.active = true;
          loadConfigAsync.replaceConfig(config);
          sys.localStorage.setItem('envInfo', JSON.stringify(this.envInfo));
          this.loadUserInfo();
        };

        _proto.loadUserInfo = function loadUserInfo() {
          var currentEnv = this.envInfo.current;
          var userInfo = this.envInfo[currentEnv] || {};
          if (!userInfo) return;
          if (userInfo.token) this.tokenInput.string = userInfo.token;else {
            this.tokenInput.string = '';
          }
          if (userInfo.password) this.passwordInput.string = userInfo.password;else {
            this.passwordInput.string = '';
          }
          this.userInput.string = userInfo.userId || '';
        };

        _proto.getToken = function getToken() {
          var _this3 = this;

          var currentEnv = this.envInfo.current;
          var userInfo = this.envInfo[currentEnv];
          var params = {
            userName: this.userInput.string.replace(/xxxxx_|tek_/g, ''),
            password: '123456'
          };
          apiObject.get({
            url: userInfo.api,
            params: params,
            callback: function callback(data) {
              if (data.code == 200 && data.data && _this3.tokenInput) {
                _this3.tokenInput.string = data.data;
              }
            }
          });
        };

        _proto.onLoginPress = function onLoginPress() {
          if (this.envInfo.current == 'account') {
            this.loginAccount();
          } else {
            this.loginToken();
          }
        };

        _proto.loginAccount = function loginAccount() {
          var _this4 = this;

          var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(),
              LOBBY_SCENE_NAME = _loadConfigAsync$getC2.LOBBY_SCENE_NAME,
              USER_TOKEN = _loadConfigAsync$getC2.USER_TOKEN,
              API_URL = _loadConfigAsync$getC2.API_URL;

          var dataPost = {
            username: this.userInput.string,
            password: this.passwordInput.string
          };
          apiObject.post({
            apiUrl: API_URL,
            url: 'client2-tool/login',
            data: dataPost,
            callback: function callback(res) {
              var _res$data = res.data,
                  data = _res$data.data,
                  code = _res$data.code;

              if (code === 200 && data) {
                var token = data.token,
                    refreshToken = data.refreshToken;
                if (!_this4.envInfo[_this4.envInfo.current]) _this4.envInfo[_this4.envInfo.current] = {};
                _this4.envInfo[_this4.envInfo.current].userId = _this4.userInput.string;
                _this4.envInfo[_this4.envInfo.current].password = _this4.passwordInput.string;
                sys.localStorage.setItem('envInfo', JSON.stringify(_this4.envInfo));
                globalNetwork.init(token, refreshToken);
                sys.localStorage.setItem(USER_TOKEN, token);
                director.loadScene(LOBBY_SCENE_NAME);
              } else {
                _this4.errorMsg.string = "Không thể đăng nhập";
              }
            },
            callbackErr: function callbackErr() {
              _this4.errorMsg.string = "Không thể đăng nhập";
            }
          });
        };

        _proto.loginToken = function loginToken() {
          var _this5 = this;

          var _loadConfigAsync$getC3 = loadConfigAsync.getConfig(),
              LOBBY_SCENE_NAME = _loadConfigAsync$getC3.LOBBY_SCENE_NAME,
              USER_TOKEN = _loadConfigAsync$getC3.USER_TOKEN,
              API_URL = _loadConfigAsync$getC3.API_URL;

          var userToken = this.tokenInput.string;
          if (!userToken) return;
          var dataPost = {
            token: userToken
          }; // console.log('Trying login user token ' + userToken);

          apiObject.post({
            url: API_URL + 'auth/token/login',
            data: dataPost,
            callback: function callback(res) {
              // console.log('login res ' + JSON.stringify(res));
              var _res$data2 = res.data,
                  data = _res$data2.data,
                  error = _res$data2.error;

              if (data) {
                var token = data.token,
                    userId = data.userId;

                if (token && token != "") {
                  _this5.envInfo[_this5.envInfo.current].token = token;
                  _this5.envInfo[_this5.envInfo.current].userId = userId.replace(/xxxxx_|tek_/g, ''), sys.localStorage.setItem('envInfo', JSON.stringify(_this5.envInfo));
                  sys.localStorage.setItem(USER_TOKEN, token);
                  director.loadScene(LOBBY_SCENE_NAME);
                  _this5.errorMsg.string = "";
                  globalNetwork.setToken(token);
                  globalNetwork.init(token, null, 'portal', 'all');
                } else {
                  _this5.errorMsg.string = "Không thể đăng nhập";
                }
              } else if (error || res.data.errors) {
                switch (res.data.errors[0]) {
                  case "ERROR_TOKEN_EXPRIED":
                    _this5.errorMsg.string = "Token đã expired";
                    break;

                  default:
                    _this5.errorMsg.string = "Không thể đăng nhập";
                    break;
                }
              }
            }
          });
        };

        return Login;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "tokenInput", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "userInput", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "passwordInput", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "errorMsg", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "version", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "versionFile", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "toggleStaging", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "toggleExStaging", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "toggleAccount", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "passwordHolder", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "tokenHolder", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "btnGetToken", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "stateMonitorPrefab", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "stateMonitorPrefabPortrait", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "physicType", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/LogoWithBrand.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, Component;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "21f06Vy2PJOLpMbDKIT8mBX", "LogoWithBrand", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var LogoWithBrand = exports('LogoWithBrand', (_dec = ccclass('LogoWithBrand'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(LogoWithBrand, _Component);

        function LogoWithBrand() {
          return _Component.apply(this, arguments) || this;
        }

        return LogoWithBrand;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/main", ['./debug-view-runtime-control.ts', './ChangeMoney.ts', './Data.ts', './EventCode.ts', './GeneralInitialization.ts', './AstronautController.ts', './BackSceneController.ts', './GameController.ts', './LoginController.ts', './MainController.ts', './PopupController.ts', './PreparingController.ts', './ShipController.ts', './SpawnAstronautController.ts', './SpawnStarController.ts', './StarController.ts', './UIController.ts', './userInfoController.ts', './Network.ts', './HotUpdate.ts', './UpdatePanel.ts', './LayoutNodeInstance.ts', './LogoWithBrand.ts', './GameLogo.ts', './BubbleFloatGames.ts', './EventList.ts', './GameEvent.ts', './GameQuest.ts', './ItemLobby.ts', './LobbyDev.ts', './LobbyMenu.ts', './LobbyScene.ts', './LoginDev.ts', './LoginStaging.ts', './connectNetwork.ts', './game-network.mjs_cjs=&original=.js', './globalNetwork.ts', './AlignFullScreenButton.ts', './AnimUtils.ts', './AntialiasConfig.ts', './ClickAndShow.ts', './LetterSpacing.ts', './LoadingScreen.ts', './animateNumberLabel.ts', './gameCommonUtils.ts', './utils.ts', './AnimationCacheConfig.ts', './AudioClipDatabase.ts', './CanvasScaleByOrientation.ts', './CustomCanvasSize.ts', './CustomPageViewIndicator.ts', './CustomTypeShare.ts', './EventListenerManager.ts', './InitSocketComponent.ts', './MonitorTarget.ts', './NativeSoundPlayer.ts', './ScreenOrientationControl.ts', './ScrollViewOptimise.ts', './Sound.ts', './SoundPlayerImpl.ts', './WebSoundPlayer.ts', './globalConfig.ts', './XOCypher.ts', './loadConfigAsync.ts', './serviceRest.ts', './gaBetBoardSetup.ts', './gaBetItem.ts', './gaBetPanel.ts', './gaAvatarProvider.ts', './gaButtonFullScreen.ts', './gaCurrencyCalculator.ts', './gaDataFactory.ts', './gaDataStore.ts', './gaEventEmitter.ts', './gaGameView.ts', './gaGeneralInitialization.ts', './gaLocalStorage.ts', './gaLocalize.ts', './gaMainController.ts', './gaReferenceManager.ts', './gaResizeWindow.ts', './gaSafeArea.ts', './gaVersion.ts', './gaCountPoint.ts', './gaRefreshWidget.ts', './gaFBFParticle.ts', './gaJackpotFrame.ts', './gaNotifyController.ts', './gaSideNotify.ts', './gaSideNotifyItem.ts', './gaArcadeBaseTableHistory.ts', './gaBetHistoryDetail.ts', './gaBetHistoryItem.ts', './gaHistoryItem.ts', './gaJackpotHistoryItem.ts', './gaBasePopup.ts', './gaDialog.ts', './gaMultipagePopup.ts', './gaPopupBetHistory.ts', './gaPopupController.ts', './gaPopupHelpInfo.ts', './gaPopupHistory.ts', './gaPopupJackpotHistory.ts', './gaPopupSetting.ts', './gaToast.ts', './gaRoundInfo.ts', './gaItemsCircularVerticalAutoScroller.ts', './gaItemsScroller.ts', './gaItemsVerticalAutoScroller.ts', './gaItemsVerticalScroller.ts', './gaScrollItem.ts', './gaSideMenu.ts', './gaToggleDoubleCheckmark.ts', './gaUserUI.ts', './gaWallet.ts', './gaWifiStatus.ts', './gaComponent.ts', './gaBaseConfig.ts', './gaMapKeyConfig.ts', './gaCommon.ts', './gaDemoPlayer.ts', './gaEventsCode.ts', './gaGameText.ts', './gaUserInfo.ts', './gaLoadingScene.ts', './gaJoinGameData.ts', './gaResultData.ts', './gaRoundData.ts', './gaCommandID.ts', './gaGameNetwork.ts', './gaGameService.ts', './gaNetworkError.ts', './gaSocketManager.ts', './gaSocketTypes.ts', './gaCustomDataType.ts', './gaSoundLoadHelper.ts', './gaSoundPlayer.ts', './gaBettingState.ts', './gaInitState.ts', './gaPlayingState.ts', './gaResultState.ts', './gaIStateMachine.ts', './gaMainStateMachine.ts', './gaStateMachine.ts', './gaStateView.ts', './gaLogger.ts', './gaPromise.ts', './gaRandom.ts', './gaScreenUtils.ts', './gaTweenUtils.ts', './gaUtils.ts', './gcDataStore.ts', './gcEventsCode.ts', './gcGeneralInitialization.ts', './gcMainController.ts', './gcDataFactory.ts', './gcJoinGameData.ts', './gcPlayerInfoUpdated.ts', './gcResultData.ts', './gcRoundData.ts', './gcBettingState.ts', './gcInitState.ts', './gcPlayingState.ts', './gcResultState.ts', './gcCommandID.ts', './gcGameNetwork.ts', './appConfig-debug.ts', './appConfig.ts', './mock.ts', './state-machine-history.min.mjs_cjs=&original=.js'], function () {
  return {
    setters: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
    execute: function () {}
  };
});

System.register("chunks:///_virtual/MainController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './EventCode.ts', './Network.ts', './Data.ts', './gaEventsCode.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Vec3, Component, gaEventEmitter, EventCode, Network, Data, gaEventsCode;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Vec3 = module.Vec3;
      Component = module.Component;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      EventCode = module.default;
    }, function (module) {
      Network = module.Network;
    }, function (module) {
      Data = module.Data;
    }, function (module) {
      gaEventsCode = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;

      cclegacy._RF.push({}, "530ddUAo49HB5hehtgsqGBD", "MainController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var network = new Network();
      var MainController = exports('MainController', (_dec = ccclass('MainController'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(MainController, _Component);

        function MainController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "ui", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "GameController", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "Fire", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "BackScene", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "Ship", _descriptor5, _assertThisInitialized(_this));

          _this.uiController = void 0;
          _this.isPlayerActive = void 0;
          _this.isStartGame = void 0;
          _this.timeActiveCurrent = void 0;
          _this.timeActive = void 0;
          _this.gameController = void 0;
          _this.backSceneController = void 0;
          _this.shipController = void 0;
          return _this;
        }

        var _proto = MainController.prototype;

        _proto.start = function start() {
          this.ui.active = true;
          this.timeActive = 0.2;
          this.timeActiveCurrent = this.timeActive;
          this.uiController = this.ui.getComponent('UIController');
          this.gameController = this.GameController.getComponent('GameController');
          this.backSceneController = this.BackScene.getComponent('BackSceneController');
          this.shipController = this.Ship.getComponent('ShipController');
          this.login();
          gaEventEmitter.instance.registerEvent(EventCode.SERVER.WEB_SOCKET_OPEN, this.joinGame.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.CLAIM_GAME, this.claimGame.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.FIRED_EVENT, this.firedEvent.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.JOIN_GAME_RESULT, this.checkStateGame.bind(this));
          gaEventEmitter.instance.registerEvent(gaEventsCode.NETWORK.CANNOT_AUTHEN, this.cantNotAuthen.bind(this));
          gaEventEmitter.instance.registerEvent(gaEventsCode.NETWORK.WEB_SOCKET_TEMP_DISCONNECT, this.disconnectToNetwork.bind(this)); // gaEventEmitter.instance.registerEvent(EventCode.REQUEST.UPDATE_WALLET, this.updateWallet.bind(this));
        };

        _proto.update = function update(dt) {
          if (this.timeActiveCurrent <= 0) {
            network.keepPlayerActive();
            this.timeActiveCurrent = this.timeActive;
          }

          if (this.isPlayerActive) {
            this.timeActiveCurrent -= dt;
          } else if (!this.isPlayerActive) {
            this.timeActiveCurrent = this.timeActive;
            return;
          }
        };

        _proto.login = function login() {
          var _this2 = this;

          network.authenticate().then(function () {})["catch"](function () {
            _this2.uiController.openPopup('Đăng nhập thất bại', 0);
          });
        };

        _proto.joinGame = function joinGame() {
          var _this3 = this;

          this.uiController.openPopup('Đăng nhập thành công', 1);
          network.joiGame().then(function () {
            // this.uiController.openPopup('Join game thành công', 1);
            _this3.updateWallet();
          })["catch"](function () {
            _this3.uiController.openPopup('Join game thất bại', 0);
          });
        };

        _proto.startGame = function startGame() {
          Data.instance.muL = 0.0;
          var betValue = Data.instance.betValue;
          var stopRatioValue = Data.instance.ratioValue;
          network.startGame('10', betValue, stopRatioValue);
          this.uiController.startGame();
          this.isPlayerActive = true;
        };

        _proto.cashOut = function cashOut() {
          network.cashOut(); // this.backSceneController.isFly = false;
        };

        _proto.firedEvent = function firedEvent() {
          // this.backSceneController.isFly = false;
          this.restartRound();
          this.uiController.firedEvent();
          this.gameController.isStartGame = false;
          this.isPlayerActive = false;
        };

        _proto.claimGame = function claimGame() {
          // this.backSceneController.isFly = false;
          this.gameController.isStartGame = false;
          this.restartRound();
          this.isPlayerActive = false;
          this.uiController.claimGame();
        };

        _proto.restartRound = function restartRound() {
          var _this4 = this;

          this.scheduleOnce(function () {
            network.joiGame().then(function () {
              _this4.updateWallet();
            });
            gaEventEmitter.instance.emit(EventCode.STATE.PREPARING); // this.Ship.position = new Vec3(0,-250,0);

            _this4.backSceneController.isFly = false;
            _this4.Ship.active = false;
          }, 3);
        };

        _proto.checkStateGame = function checkStateGame(data) {
          if (!data.player) {
            Data.instance.modeGame = 'ng';
            this.uiController.setModeButton('NORMAL');
          } else {
            if (data.player.fg >= 0) {
              Data.instance.modeGame = 'fg';
              this.uiController.setModeButton('FREE');
            } else {
              Data.instance.modeGame = 'ng';
              this.uiController.setModeButton('NORMAL');
            }
          }

          this.backSceneController.restartRound();
          this.Ship.active = true;
          this.Ship.position = new Vec3(0, -230, 0); // this.uiController.setMuL('0.0');

          this.uiController.preparing();
        };

        _proto.updateWallet = function updateWallet() {
          var wallet = network.updateWallet();
          gaEventEmitter.instance.emit(EventCode.REQUEST.UPDATE_WALLET, wallet.amount);
        };

        _proto.cantNotAuthen = function cantNotAuthen() {
          this.uiController.openPopup('Đăng nhập thất bại', 0);
        };

        _proto.disconnectToNetwork = function disconnectToNetwork() {
          this.uiController.openPopup('Mất kết nối...', 0);
        };

        return MainController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "ui", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "GameController", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "Fire", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "BackScene", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "Ship", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/mock.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "2c0c4scUH9Jea3wuRXHY40U", "mock", undefined);

      var mock = exports('mock', {
        //IS_MOCK_NETWORK: true,
        isTurnOnBGMusic: false,
        '9999': 'spinMiniGame',
        '9998': 'spinTotalWin',
        '9996': 'spinResultFreeSpin',
        '9993': 'spinWin',
        // '9996': 'spinMiniGame',
        // '9996': 'spinResultFreeSpin',
        // '9996': 'spinResultFreeSpinMutiple',
        // '9996': 'spinResultFreeSpin',
        '5999': 'spinWin4',
        '9989': 'spinWin',
        userText: 'user53',
        pwText: 'pwduser53',
        userId: 'aea847a9-9b40-4f27-8f04-b821152d9d95'
        /*userText: 'user1',
        pwText: 'pwduser1',
        userId: 'd24bb892-2186-4f99-80bf-d86711182e1e',*/

      });

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/MonitorTarget.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "d9c84VJAbJG55ntfWlMb+mx", "MonitorTarget", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var MonitorTarget = exports('MonitorTarget', (_dec = ccclass('MonitorTarget'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(MonitorTarget, _Component);

        function MonitorTarget() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "gameId", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = MonitorTarget.prototype;

        _proto.getGameId = function getGameId() {
          return this.gameId;
        };

        _proto.getGameMeta = function getGameMeta() {
          return "Please Input Any String";
        };

        return MonitorTarget;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "gameId", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "0000";
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/NativeSoundPlayer.ts", ['cc'], function (exports) {
  var cclegacy, _decorator, log, Node, AudioSource, sys, Vec3, warn, tween, error;

  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      log = module.log;
      Node = module.Node;
      AudioSource = module.AudioSource;
      sys = module.sys;
      Vec3 = module.Vec3;
      warn = module.warn;
      tween = module.tween;
      error = module.error;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "2d38eZL5P9DurGNhhptSL0Y", "NativeSoundPlayer", undefined);

      var ccclass = _decorator.ccclass;
      var NativeSoundPlayer = exports('NativeSoundPlayer', (_dec = ccclass('NativeSoundPlayer'), _dec(_class = /*#__PURE__*/function () {
        function NativeSoundPlayer() {
          this.musicMap = {};
          this.sfxMap = {};
          this.musicList = null;
          this.sfxList = null;
          this.musicAudioNode = null;
          this.currentMusicVolumn = 0;
          this.musicAudioSource = null;
          this.currentMusic = null;
          this._musicTween = null;
          this._soundTweens = {};
          this._gameNode = null;
          this._isMusicPlaying = false;
          this._playingSfxAudioSources = [];
          this._isAppHide = false;
          this._isThumbMode = false;
        }

        var _proto = NativeSoundPlayer.prototype;

        _proto.init = function init(musicList, sfxList, gameNode) {
          var _this = this;

          log('native sound init');
          this.musicList = musicList;
          this.sfxList = sfxList;
          this.musicList.forEach(function (soundObj) {
            _this.musicMap[soundObj.soundId] = soundObj;
          });
          this.sfxList.forEach(function (soundObj) {
            _this.sfxMap[soundObj.soundId] = soundObj;
          });
          this._gameNode = gameNode;
          this.createMusicAudioSource();
        };

        _proto.createMusicAudioSource = function createMusicAudioSource() {
          if (!this.musicAudioNode) {
            this.musicAudioNode = new Node("MusicAudio");
            this.musicAudioNode.parent = this._gameNode;
            this.musicAudioNode.active = false;
            this.musicAudioSource = this.musicAudioNode.addComponent(AudioSource);
            this.musicAudioSource.playOnAwake = false;
            this.musicAudioSource['isMusicSrc'] = true;
          }
        };

        _proto.setThumbMode = function setThumbMode(isThumbMode) {
          this._isThumbMode = isThumbMode;
        };

        _proto.loadDynamicSounds = function loadDynamicSounds(sfxList, callback) {
          var _this2 = this;

          if (sfxList && sfxList.length > 0) {
            sfxList.forEach(function (audioObj) {
              if (audioObj.isMusic) {
                if (!_this2.musicMap[audioObj.soundId]) {
                  _this2.musicMap[audioObj.soundId] = audioObj;
                }
              } else if (audioObj.isEffect) {
                if (!_this2.sfxMap[audioObj.soundId]) {
                  _this2.sfxMap[audioObj.soundId] = audioObj;
                }
              }
            });
            callback && callback();
          } else {
            this.resetAudioMaps();
          }
        };

        _proto.resetAudioMaps = function resetAudioMaps() {
          for (var key in this.musicMap) {
            var musicObj = this.musicMap[key];

            if (musicObj && musicObj.destroyedOnSwitchMode) {
              this.musicMap[key] = null;
              delete this.musicMap[key];
            }
          }

          if (this.currentMusic && this.currentMusic.destroyedOnSwitchMode) {
            this.currentMusic = null;
          }

          for (var _key in this.sfxMap) {
            var soundObj = this.sfxMap[_key];

            if (soundObj && soundObj.destroyedOnSwitchMode) {
              if (soundObj.audioSource && soundObj.audioSource.node) {
                soundObj.audioSource.node.destroy();
              }

              this.sfxMap[_key] = null;
              delete this.sfxMap[_key];
            }
          }
        };

        _proto.onEventShow = function onEventShow(isEnableMusic, isEnableSfx) {
          this._isAppHide = false;
          isEnableMusic = isEnableMusic && this._isMusicPlaying;

          if (sys.os == sys.OS.IOS) {
            this.resetSFX(isEnableSfx);
            this.resetMusic(isEnableMusic);
          }

          if (sys.os == sys.OS.WINDOWS) {
            this.resetMusic(isEnableMusic);
          }
        };

        _proto.onEventHide = function onEventHide() {
          this._isAppHide = true;

          if (sys.os == sys.OS.IOS) {
            this.currentMusicVolumn = this.musicAudioSource.volume;
            this.musicAudioSource.volume = 0;
          }

          if (sys.os == sys.OS.WINDOWS) {
            this.currentMusicVolumn = this.musicAudioSource.volume;
            this.musicAudioSource.volume = 0;
            this.pauseMusic();
          }
        };

        _proto.playMusic = function playMusic(id, loop, volume) {
          if (loop === void 0) {
            loop = true;
          }

          if (this.musicMap.hasOwnProperty(id) == false) {
            return null;
          }

          if (!this.musicAudioNode.active) {
            this.musicAudioNode.active = true;
          }

          if (this.currentMusic && this.currentMusic.soundId == id && !this.musicAudioSource.playing) {
            this.musicAudioSource.clip = this.currentMusic.audioFile;
            this.musicAudioSource.play();
            this.musicAudioSource.loop = loop;
            this.musicAudioSource.volume = volume;
          } else {
            if (this.currentMusic && this.currentMusic.soundId == id) return this.currentMusic;
            if (this.currentMusic) this.musicAudioSource.stop();
            this.currentMusic = this.musicMap[id];

            if (this.currentMusic) {
              this.musicAudioSource.clip = this.currentMusic.audioFile;
              this.musicAudioSource.play();
              this.musicAudioSource.loop = loop;
              this.musicAudioSource.volume = volume;
            }
          }

          this._isMusicPlaying = true;
          log("%cSOUND playMusic", "color:red", id);
        };

        _proto.getCurrentMusic = function getCurrentMusic() {
          return this.musicAudioSource;
        };

        _proto.pauseMusic = function pauseMusic() {
          this.currentMusic && this.musicAudioSource.pause();
        };

        _proto.resumeMusic = function resumeMusic() {
          this._isMusicPlaying && this.currentMusic && this.musicAudioSource.play();
        };

        _proto.stopMusic = function stopMusic() {
          this._isMusicPlaying = false;
          this.currentMusic && this.musicAudioSource && this.musicAudioSource.stop();
        };

        _proto.setMusicVolume = function setMusicVolume(volume) {
          this.musicAudioSource.volume = volume;
        };

        _proto.muteMusic = function muteMusic() {
          if (this.musicAudioSource) {
            this.musicAudioSource.volume = 0;
          }
        };

        _proto.unmuteMusic = function unmuteMusic(volume) {
          if (volume === void 0) {
            volume = 1;
          }

          if (this.musicAudioSource) {
            this.musicAudioSource.volume = volume;
          }
        };

        _proto.playSfx = function playSfx(id, loop, volume) {
          if (loop === void 0) {
            loop = false;
          }

          if (!this.sfxMap.hasOwnProperty(id) || this._isAppHide) {
            log("SOUND playSfx, do not have sfx: " + id);
            return null;
          }

          var soundObj = this.sfxMap[id];

          if (!soundObj.audioSource) {
            soundObj.audioSource = this._createSfxAudioSource(soundObj);
          }

          this._discardOnePlayingIfNeeded();

          if (soundObj.audioSource.node) {
            soundObj.audioSource.play();
            soundObj.audioSource.loop = loop;

            if (typeof volume === "number") {
              soundObj.audioSource.volume = volume;
            }
          }

          log("%cSOUND playSfx", "color: blue", id);
          return soundObj.audioSource;
        };

        _proto._createSfxAudioSource = function _createSfxAudioSource(soundObj) {
          var sfxNode = new Node("SFX_" + soundObj.soundId);
          var audioSource = sfxNode.addComponent(AudioSource);
          audioSource.playOnAwake = false;
          audioSource['soundId'] = soundObj.soundId;
          audioSource["ignoreCheckMaxChannel"] = soundObj.ignoreCheckMaxChannel;
          audioSource.clip = soundObj.audioFile;
          sfxNode.parent = this._gameNode;
          sfxNode.setPosition(new Vec3(0, 0, 0));
          sfxNode.on(AudioSource.EventType.STARTED, this._addPlayingAudioSource, this);
          sfxNode.on(AudioSource.EventType.ENDED, this._removePlayingAudioSource, this);
          return audioSource;
        };

        _proto._addPlayingAudioSource = function _addPlayingAudioSource(audioSource) {
          if (this._playingSfxAudioSources.includes(audioSource)) return;

          this._playingSfxAudioSources.push(audioSource);
        };

        _proto._removePlayingAudioSource = function _removePlayingAudioSource(audioSource) {
          var index = this._playingSfxAudioSources.indexOf(audioSource);

          if (index >= 0) this._playingSfxAudioSources.splice(index, 1);

          if (audioSource["isOneShot"]) {
            var soundId = audioSource['soundId'];
            var soundObj = this.sfxMap[soundId];
            soundObj && soundObj.audioSourcePool.push(audioSource);
          }
        };

        _proto._discardOnePlayingIfNeeded = function _discardOnePlayingIfNeeded() {
          if (this._playingSfxAudioSources.length < AudioSource.maxAudioChannel) return;

          for (var i = 0; i < this._playingSfxAudioSources.length; i++) {
            var audioSource = this._playingSfxAudioSources[i];

            if (!audioSource['ignoreCheckMaxChannel']) {
              var index = this._playingSfxAudioSources.indexOf(audioSource);

              log("Sound: discardOnePlaying ", audioSource);

              this._playingSfxAudioSources.splice(index, 1);

              audioSource.stop();
              return;
            }
          }
        };

        _proto.playSfxOneShot = function playSfxOneShot(id, volume, loop) {
          if (loop === void 0) {
            loop = false;
          }

          if (!this.sfxMap.hasOwnProperty(id)) {
            warn("SOUND, playSfxOneShot: do not have sfx: " + id);
            return null;
          }

          this._discardOnePlayingIfNeeded();

          var soundObj = this.sfxMap[id];

          var audioSource = this._getSfxOneShotAudioSource(soundObj);

          if (typeof volume === "number") audioSource.volume = volume;
          audioSource.play();
          audioSource.loop = loop;
          log("SOUND, playSfxOneShot: " + id);
          return audioSource;
        };

        _proto._getSfxOneShotAudioSource = function _getSfxOneShotAudioSource(soundObj) {
          var audioSource = soundObj.audioSourcePool.pop();

          if (!audioSource) {
            audioSource = this._createSfxAudioSource(soundObj);
            audioSource['isOneShot'] = true;
          }

          return audioSource;
        };

        _proto._testMaxAudioChanel = function _testMaxAudioChanel() {
          var _this3 = this;

          var tweenSound = tween(this._gameNode);

          var _loop = function _loop(id) {
            tweenSound.delay(0.05).call(function () {
              _this3.playSfx(id);
            });
          };

          for (var id in this.sfxMap) {
            _loop(id);
          }

          tweenSound.start();
        }
        /**
         * @stop_sfx by soundId, including playOneShot
         */
        ;

        _proto.stopSfx = function stopSfx(soundId) {
          var _this4 = this;

          var soundObj = this.sfxMap[soundId];
          if (!soundObj) return warn("SOUND stopSfx, do not have sfx: " + soundId);

          this._playingSfxAudioSources.forEach(function (audioSource) {
            if (audioSource['soundId'] === soundId) {
              audioSource.playing && audioSource.stop();

              _this4._removePlayingAudioSource(audioSource);
            }
          });
        };

        _proto.stopSfxOneShot = function stopSfxOneShot(audioSource) {
          audioSource.playing && audioSource.stop();

          this._removePlayingAudioSource(audioSource);
        }
        /**
        * @stop_all_sfx including playOneShot
        */
        ;

        _proto.stopAllEffects = function stopAllEffects() {
          this._playingSfxAudioSources.forEach(function (audioSource) {
            return audioSource.stop();
          });

          this._playingSfxAudioSources.length = 0;
        };

        _proto.pauseAllEffects = function pauseAllEffects() {
          this._playingSfxAudioSources.forEach(function (audioSource) {
            log("%cSOUND pauseAllEffects", "color: orange", audioSource['soundId']);
            audioSource.pause();
          });
        };

        _proto.setEffectVolume = function setEffectVolume(volume) {
          volume = volume < 0 ? 0 : volume;

          for (var key in this.sfxMap) {
            var soundObj = this.sfxMap[key];

            if (soundObj && soundObj.audioSource) {
              soundObj.audioSource.volume = volume;
              soundObj.audioSourcePool.forEach(function (audioSource) {
                return audioSource.volume = volume;
              });
            }
          }

          this._playingSfxAudioSources.forEach(function (audioSource) {
            return audioSource.volume = volume;
          });
        };

        _proto.resetMusic = function resetMusic(isEnableMusic) {
          var _this5 = this;

          var currentMusicTime = 0;
          tween(this._gameNode).call(function () {
            currentMusicTime = _this5.musicAudioSource.currentTime;

            _this5.musicAudioSource.stop();
          }).call(function () {
            _this5.musicAudioSource.play();
          }).call(function () {
            _this5.musicAudioSource.pause();
          }).call(function () {
            _this5.musicAudioSource.currentTime = currentMusicTime;
            _this5.musicAudioSource.volume = _this5.currentMusicVolumn;

            _this5.musicAudioSource.play();

            if (isEnableMusic && !_this5._isThumbMode) {
              _this5.unmuteMusic();
            } else {
              _this5.muteMusic();
            }
          }).start();
        };

        _proto.resetSFX = function resetSFX(isEnableSfx) {
          var audioSources = this._gameNode.getComponentsInChildren(AudioSource);

          audioSources = audioSources.filter(function (it) {
            return it.playing && !it['isMusicSrc'];
          });
          tween(this._gameNode).call(function () {
            audioSources.forEach(function (it) {
              if (it.playing) {
                it['_cacheCurrentTime'] = it.currentTime;
                it.stop();
              }
            });
          }).call(function () {
            audioSources.forEach(function (it) {
              if (it['_cacheCurrentTime']) {
                it.play();
              }
            });
          }).call(function () {
            audioSources.forEach(function (it) {
              if (it['_cacheCurrentTime']) {
                it.pause();
              }
            });
          }).call(function () {
            audioSources.forEach(function (it) {
              if (it['_cacheCurrentTime']) {
                it.currentTime = it['_cacheCurrentTime'];
                it['_cacheCurrentTime'] = null;
                if (isEnableSfx) it.play();
              }
            });
          }).start();
        };

        _proto.fadeMusicTo = function fadeMusicTo(duration, volume) {
          var _this6 = this;

          this._musicTween && this._musicTween.stop();
          this._musicTween = tween(this.musicAudioSource).to(duration, {
            volume: volume
          }).call(function () {
            _this6._musicTween = null;
          }).start();
        };

        _proto.fadeSoundTo = function fadeSoundTo(soundId, duration, volume) {
          var _this7 = this;

          var soundObj = this.sfxMap[soundId];
          if (!soundObj) return error("do not have sound", soundId, soundObj);
          if (!soundObj.audioSource) return error("do not have audio source", soundId, soundObj);

          if (soundObj["tweenSound"]) {
            soundObj["tweenSound"].stop();
            delete this._soundTweens[soundId];
          }

          soundObj["tweenSound"] = tween(soundObj.audioSource).to(duration, {
            volume: volume
          }).call(function () {
            delete soundObj["tweenSound"];
            delete _this7._soundTweens[soundId];
          }).start();
          this._soundTweens[soundId] = soundObj["tweenSound"];
        };

        _proto.stopAllAudio = function stopAllAudio() {
          this._musicTween && this._musicTween.stop();
          this._musicTween = null;
          this.stopMusic();

          for (var soundId in this._soundTweens) {
            var soundObj = this.sfxMap[soundId];

            if (soundObj['tweenSound']) {
              soundObj['tweenSound'].stop();
              delete soundObj['tweenSound'];
              delete this._soundTweens['soundId'];
            }
          }

          this.stopAllEffects();
        };

        _proto.onDestroy = function onDestroy() {};

        return NativeSoundPlayer;
      }()) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Network.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './globalNetwork.ts', './gaSocketManager.ts', './loadConfigAsync.ts', './gaBaseConfig.ts', './gaCommandID.ts', './gameCommonUtils.ts', './Data.ts', './gaCommon.ts'], function (exports) {
  var _inheritsLoose, cclegacy, _decorator, sys, Component, globalNetwork, gaSocketManager, loadConfigAsync, gaBaseConfig, gaCommandID, gameCommonUtils, Data, network;

  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      sys = module.sys;
      Component = module.Component;
    }, function (module) {
      globalNetwork = module.default;
    }, function (module) {
      gaSocketManager = module.gaSocketManager;
    }, function (module) {
      loadConfigAsync = module.default;
    }, function (module) {
      gaBaseConfig = module.default;
    }, function (module) {
      gaCommandID = module.default;
    }, function (module) {
      gameCommonUtils = module.default;
    }, function (module) {
      Data = module.Data;
    }, function (module) {
      network = module.network;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "c55f4x4EK5OgbVy2jUQZ9VI", "Network", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var PlayerInfoStateManager = network.PlayerInfoStateManager;
      var playerInfoStateManager = PlayerInfoStateManager.getInstance();
      var Network = exports('Network', (_dec = ccclass('Network'), _dec(_class = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Network, _Component);

        function Network() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;
          _this.socketManager = void 0;
          return _this;
        }

        var _proto = Network.prototype;

        _proto.authenticate = function authenticate() {
          var _this2 = this;

          return new Promise(function (resolve, reject) {
            var token = _this2.getToken();

            if (token != undefined) {
              globalNetwork.init(token, 'iframe', '2995');

              _this2.createSocket();

              resolve();
            } else {
              reject();
            }
          });
        };

        _proto.joiGame = function joiGame() {
          var _this3 = this;

          return new Promise(function (resolve, reject) {
            var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
                URL_CODE = _loadConfigAsync$getC.URL_CODE;

            var code = null;
            var env = 2;

            if (gaBaseConfig.isIFrame) {
              code = gameCommonUtils.getUrlParam(URL_CODE);
              env = parseInt(gameCommonUtils.getUrlParam('env')) || 2;
            } else {
              env = sys.isBrowser ? 1 : 3;
            }

            var payload = {
              event: gaCommandID.R_JOIN_GAME,
              data: {
                code: code,
                env: env
              }
            };

            _this3.sendMessage(payload).then(function () {
              _this3.updateWallet();

              resolve();
            });
          });
        };

        _proto.cashOut = function cashOut() {
          var payload = {
            event: 'eg',
            data: {}
          };
          return this.sendMessage(payload);
        };

        _proto.startGame = function startGame(bId, betValue, stopRatio) {
          //bet:autoStopRatio
          var cus = betValue + ":" + stopRatio;
          var payload = {
            event: Data.instance.modeGame,
            data: {
              bId: bId,
              cus: cus
            }
          };
          return this.sendMessage(payload);
        };

        _proto.keepPlayerActive = function keepPlayerActive() {
          var payload = {
            event: 'pa'
          };
          this.sendMessage(payload);
        };

        _proto.getToken = function getToken() {
          var TOKEN = loadConfigAsync.getConfig().TOKEN;
          var token = '';

          if (TOKEN) {
            token = TOKEN;
          } else {
            token = this.getUrlParam('token');
          }

          if (!token) {
            token = localStorage.getItem('USER_TOKEN');
          }

          return token;
        };

        _proto.getUrlParam = function getUrlParam(name) {
          if (sys.isNative) return null;
          var url = new URL(window.location);
          return url.searchParams.get(name);
        };

        _proto.createSocket = function createSocket() {
          this.socketManager = new gaSocketManager('2995', function () {}, function () {});
          this.socketManager.checkReady();
        };

        _proto.sendMessage = function sendMessage(payload) {
          var _this4 = this;

          return new Promise(function (resolve, reject) {
            _this4.socketManager.sendMessage(payload).then(resolve());
          });
        };

        _proto.updateWallet = function updateWallet() {
          return playerInfoStateManager.getWallets();
        };

        return Network;
      }(Component)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PopupController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "8a514bzNOlPHq9chU4zD2FK", "PopupController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var PopupController = exports('PopupController', (_dec = ccclass('PopupController'), _dec2 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(PopupController, _Component);

        function PopupController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "lblContext", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = PopupController.prototype;

        _proto.setContext = function setContext(context) {
          this.lblContext.string = context;
        };

        return PopupController;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "lblContext", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/PreparingController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Data.ts', './ChangeMoney.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Button, Node, Label, Component, Data, ChangeMoney;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Button = module.Button;
      Node = module.Node;
      Label = module.Label;
      Component = module.Component;
    }, function (module) {
      Data = module.Data;
    }, function (module) {
      ChangeMoney = module.ChangeMoney;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;

      cclegacy._RF.push({}, "35decbn2ftM1LxkMehHSJgc", "PreparingController", undefined);

      var money = new ChangeMoney();
      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var PreparingController = exports('PreparingController', (_dec = ccclass('PreparingController'), _dec2 = property(Button), _dec3 = property(Button), _dec4 = property(Node), _dec5 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(PreparingController, _Component);

        function PreparingController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "subButton", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "minusButton", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "panelChangeValue", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "valueLabel", _descriptor4, _assertThisInitialized(_this));

          _this.isBet = true;
          _this.betStepValue = void 0;
          _this.ratioStepValue = void 0;
          return _this;
        }

        var _proto = PreparingController.prototype;

        _proto.start = function start() {
          this.betStepValue = 100;
          this.ratioStepValue = 0.1;
          this.setDefault();
        };

        _proto.update = function update(deltaTime) {};

        _proto.setDefault = function setDefault() {
          this.activePanel(false, false);
        };

        _proto.activePanel = function activePanel(status, isBet) {
          this.panelChangeValue.active = status;
          this.isBet = isBet;

          if (isBet) {
            this.setValueLabel(Data.instance.betValue, true);
          } else {
            this.setValueLabel(Data.instance.ratioValue, false);
          }
        };

        _proto.subClick = function subClick() {
          if (this.isBet) {
            this.subBet();
            this.setValueLabel(Data.instance.betValue, true);
            return;
          }

          this.subRatio();
          this.setValueLabel(Data.instance.ratioValue, false);
        };

        _proto.minusClick = function minusClick() {
          if (this.isBet) {
            this.minusBet();
            this.setValueLabel(Data.instance.betValue, true);
            return;
          }

          this.minusRatio();
          this.setValueLabel(Data.instance.ratioValue, false);
        };

        _proto.setValueLabel = function setValueLabel(value, isBetValue) {
          if (value <= 0) {
            this.minusButton.interactable = false;
            this.subButton.interactable = true;
            return;
          }

          this.minusButton.interactable = true;
          this.subButton.interactable = true;

          if (isBetValue) {
            this.valueLabel.string = money.changeMoney(value);

            if (value > Data.instance.walletAmount) {
              this.minusButton.interactable = true;
              this.subButton.interactable = false;
            }

            return;
          }

          if (value >= 10) {
            this.minusButton.interactable = true;
            this.subButton.interactable = false;
          } else {
            this.minusButton.interactable = true;
            this.subButton.interactable = true;
          }

          this.valueLabel.string = value.toFixed(1);
        };

        _proto.subBet = function subBet() {
          Data.instance.betValue = Data.instance.betValue + this.betStepValue;
        };

        _proto.minusBet = function minusBet() {
          Data.instance.betValue = Data.instance.betValue - this.betStepValue;
        };

        _proto.subRatio = function subRatio() {
          Data.instance.ratioValue = Data.instance.ratioValue + this.ratioStepValue;
        };

        _proto.minusRatio = function minusRatio() {
          Data.instance.ratioValue = Data.instance.ratioValue - this.ratioStepValue;
        };

        return PreparingController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "subButton", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "minusButton", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "panelChangeValue", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "valueLabel", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ScreenOrientationControl.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './CanvasScaleByOrientation.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, game, sys, settings, Settings, view, ResolutionPolicy, Component, Size, CanvasScaleByOrientation;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      game = module.game;
      sys = module.sys;
      settings = module.settings;
      Settings = module.Settings;
      view = module.view;
      ResolutionPolicy = module.ResolutionPolicy;
      Component = module.Component;
      Size = module.Size;
    }, function (module) {
      CanvasScaleByOrientation = module.CanvasScaleByOrientation;
    }],
    execute: function () {
      var _dec, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "83e61WQNGlGjYAM2fCdDGW1", "ScreenOrientationControl", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var ScreenOrientationControl = exports('ScreenOrientationControl', (_dec = ccclass('ScreenOrientationControl'), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ScreenOrientationControl, _Component);

        function ScreenOrientationControl() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "portraitDesignResolution", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "landscapeDesignResolution", _descriptor2, _assertThisInitialized(_this));

          _this._canvasScaleComp = void 0;
          return _this;
        }

        var _proto = ScreenOrientationControl.prototype;

        _proto.start = function start() {
          this._canvasScaleComp = this.getComponent(CanvasScaleByOrientation);

          if (this._canvasScaleComp && game.config && sys.isMobile) {
            var _settings$querySettin;

            var orientation = (_settings$querySettin = settings.querySettings(Settings.Category.SCREEN, 'orientation')) != null ? _settings$querySettin : 'auto';

            if (orientation == "portrait") {
              this._canvasScaleComp.isPortrait = true;
              this.setPortraitDS();
            } else {
              this._canvasScaleComp.isPortrait = false;
              this.setLandscapeDS();
            }

            this._canvasScaleComp.scaleCanvasByOrientation();
          }
        };

        _proto.setPortraitDS = function setPortraitDS() {
          view.setDesignResolutionSize(this.portraitDesignResolution.width, this.portraitDesignResolution.height, ResolutionPolicy.FIXED_WIDTH);
        };

        _proto.setLandscapeDS = function setLandscapeDS() {
          view.setDesignResolutionSize(this.landscapeDesignResolution.width, this.landscapeDesignResolution.height, ResolutionPolicy.FIXED_HEIGHT);
        };

        return ScreenOrientationControl;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "portraitDesignResolution", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Size(720, 1280);
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "landscapeDesignResolution", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return new Size(1560, 720);
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ScrollViewOptimise.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './utils.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, UITransform, rect, Component, setOpacity;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      UITransform = module.UITransform;
      rect = module.rect;
      Component = module.Component;
    }, function (module) {
      setOpacity = module.setOpacity;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "6547cfR5o5FmrQN3VeIh2x3", "ScrollViewOptimise", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var ScrollViewOptimise = exports('ScrollViewOptimise', (_dec = ccclass('ScrollViewOptimise'), _dec2 = property(Node), _dec3 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ScrollViewOptimise, _Component);

        function ScrollViewOptimise() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "view", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "content", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = ScrollViewOptimise.prototype;

        _proto.update = function update(dt) {
          var viewUI = this.view.getComponent(UITransform);
          var contentPos = this.content.getPosition();
          var viewRect = rect(-contentPos.x - viewUI.width * viewUI.anchorX, -contentPos.y - viewUI.height * viewUI.anchorY, viewUI.width, viewUI.height);

          for (var i = 0; i < this.content.children.length; i++) {
            var node = this.content.children[i];

            if (viewRect.intersects(node.getComponent(UITransform).getBoundingBox())) {
              setOpacity(node, 255);
            } else {
              setOpacity(node, 0);
            }
          }
        };

        return ScrollViewOptimise;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "view", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "content", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/serviceRest.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "e18ccAUCBxLoaFRV2OtkUct", "serviceRest", undefined); // Rest API to connect to server


      var ServiceRest = /*#__PURE__*/function () {
        function ServiceRest() {
          this.request = void 0;
          this.request = new XMLHttpRequest();
        }

        var _proto = ServiceRest.prototype;

        _proto.encodeQueryData = function encodeQueryData(data) {
          return Object.keys(data).map(function (key) {
            return [key, data[key]].map(encodeURIComponent).join("=");
          }).join("&");
        };

        _proto.getRawDataWeb = function getRawDataWeb(_ref) {
          var _ref$fullURL = _ref.fullURL,
              fullURL = _ref$fullURL === void 0 ? '' : _ref$fullURL,
              _ref$callback = _ref.callback,
              callback = _ref$callback === void 0 ? function (data) {} : _ref$callback,
              _ref$callbackErr = _ref.callbackErr,
              callbackErr = _ref$callbackErr === void 0 ? function (e) {} : _ref$callbackErr;
          var request = new XMLHttpRequest();
          request.open("GET", fullURL, true);
          request.timeout = 15000;

          request.onreadystatechange = function () {
            if (request.readyState == 4) {
              //get status text
              if (callback) {
                if (request.responseText) {
                  callback(JSON.parse(request.responseText));
                } else {
                  callbackErr(null);
                }
              }
            } else if (request.readyState === 0) {
              callbackErr(null);
            }

            if (request.status !== 200) {
              callbackErr(null);
            }
          };

          request.ontimeout = function (e) {
            callbackErr(e);
          };

          request.onerror = function (e) {
            callbackErr(e);
          };

          request.send();
        };

        _proto.get = function get(_ref2) {
          var _ref2$url = _ref2.url,
              url = _ref2$url === void 0 ? '' : _ref2$url,
              _ref2$params = _ref2.params,
              params = _ref2$params === void 0 ? {} : _ref2$params,
              _ref2$callback = _ref2.callback,
              callback = _ref2$callback === void 0 ? function (data) {} : _ref2$callback,
              _ref2$apiUrl = _ref2.apiUrl,
              apiUrl = _ref2$apiUrl === void 0 ? '' : _ref2$apiUrl,
              _ref2$callbackErr = _ref2.callbackErr,
              callbackErr = _ref2$callbackErr === void 0 ? function () {} : _ref2$callbackErr;
          var querystring = '?' + this.encodeQueryData(params);
          var fullURL = apiUrl + url + querystring;
          var request = new XMLHttpRequest();
          request.open("GET", fullURL, true);
          request.timeout = 15000;
          request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");

          request.onreadystatechange = function () {
            if (request.readyState == 4) {
              //get status text
              if (callback) {
                if (request.responseText) {
                  callback(JSON.parse(request.responseText));
                } else {
                  callbackErr();
                }
              }
            } else if (request.readyState === 0) {
              callbackErr();
            }

            if (request.status !== 200) {
              callbackErr();
            }
          };

          request.ontimeout = function (e) {
            callbackErr();
          };

          request.onerror = function (e) {
            callbackErr();
          };

          request.send();
        };

        _proto.getWithHeader = function getWithHeader(_ref3) {
          var _ref3$url = _ref3.url,
              url = _ref3$url === void 0 ? '' : _ref3$url,
              _ref3$params = _ref3.params,
              params = _ref3$params === void 0 ? {} : _ref3$params,
              _ref3$headers = _ref3.headers,
              headers = _ref3$headers === void 0 ? {} : _ref3$headers,
              _ref3$callback = _ref3.callback,
              callback = _ref3$callback === void 0 ? function (data) {} : _ref3$callback,
              _ref3$apiUrl = _ref3.apiUrl,
              apiUrl = _ref3$apiUrl === void 0 ? '' : _ref3$apiUrl,
              _ref3$callbackErr = _ref3.callbackErr,
              callbackErr = _ref3$callbackErr === void 0 ? function () {} : _ref3$callbackErr;
          var querystring = '?' + this.encodeQueryData(params);
          var fullURL = apiUrl + url + querystring;
          var request = new XMLHttpRequest();
          request.open("GET", fullURL, true);
          request.timeout = 15000;
          request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
          Object.keys(headers).forEach(function (key) {
            request.setRequestHeader(key, headers[key]);
          });

          request.onreadystatechange = function () {
            if (request.readyState == 4) {
              //get status text
              if (callback) {
                if (request.responseText) {
                  callback(JSON.parse(request.responseText));
                } else {
                  callbackErr();
                }
              }
            } else if (request.readyState === 0) {
              callbackErr();
            }

            if (request.status !== 200) {
              callbackErr();
            }
          };

          request.ontimeout = function () {
            callbackErr();
          };

          request.onerror = function () {
            callbackErr();
          };

          request.send();
        };

        _proto.post = function post(_ref4) {
          var _ref4$url = _ref4.url,
              url = _ref4$url === void 0 ? '' : _ref4$url,
              _ref4$data = _ref4.data,
              data = _ref4$data === void 0 ? {} : _ref4$data,
              _ref4$callback = _ref4.callback,
              callback = _ref4$callback === void 0 ? function (data) {} : _ref4$callback,
              _ref4$apiUrl = _ref4.apiUrl,
              apiUrl = _ref4$apiUrl === void 0 ? '' : _ref4$apiUrl,
              _ref4$callbackErr = _ref4.callbackErr,
              callbackErr = _ref4$callbackErr === void 0 ? function () {} : _ref4$callbackErr;
          var dataPost = this.encodeQueryData(data);
          var fullURL = apiUrl + url;
          var request = new XMLHttpRequest();
          request.open('POST', fullURL, true);
          request.timeout = 15000;
          request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

          request.onreadystatechange = function () {
            if (request.readyState == 4) {
              if (request.responseText) {
                callback({
                  status: request.status,
                  data: JSON.parse(request.responseText)
                });
              } else {
                callbackErr();
              }
            } else if (request.readyState === 0) {
              callbackErr();
            }

            if (request.status !== 200) {
              callbackErr();
            }
          };

          request.ontimeout = function (e) {
            callbackErr();
          };

          request.onerror = function (e) {
            callbackErr();
          };

          request.send(dataPost);
        };

        _proto.postWithHeader = function postWithHeader(_ref5) {
          var _ref5$url = _ref5.url,
              url = _ref5$url === void 0 ? '' : _ref5$url,
              _ref5$params = _ref5.params,
              params = _ref5$params === void 0 ? {} : _ref5$params,
              _ref5$headers = _ref5.headers,
              headers = _ref5$headers === void 0 ? {} : _ref5$headers,
              _ref5$data = _ref5.data,
              data = _ref5$data === void 0 ? {} : _ref5$data,
              _ref5$callback = _ref5.callback,
              callback = _ref5$callback === void 0 ? function (data) {} : _ref5$callback,
              _ref5$apiUrl = _ref5.apiUrl,
              apiUrl = _ref5$apiUrl === void 0 ? '' : _ref5$apiUrl,
              _ref5$callbackErr = _ref5.callbackErr,
              callbackErr = _ref5$callbackErr === void 0 ? function () {} : _ref5$callbackErr;
          var dataPost = JSON.stringify(data);
          var querystring = '?' + this.encodeQueryData(params);
          var fullURL = apiUrl + url + querystring;
          var request = new XMLHttpRequest();
          request.open('POST', fullURL, true);
          request.timeout = 15000;
          request.setRequestHeader('Content-type', 'application/json');
          Object.keys(headers).forEach(function (key) {
            request.setRequestHeader(key, headers[key]);
          });

          request.onreadystatechange = function () {
            if (request.readyState == 4) {
              if (request.responseText) {
                callback({
                  status: request.status,
                  data: JSON.parse(request.responseText)
                });
              } else {
                callbackErr();
              }
            } else if (request.readyState === 0) {
              callbackErr();
            }

            if (request.status !== 200) {
              callbackErr();
            }
          };

          request.ontimeout = function (e) {
            callbackErr();
          };

          request.onerror = function (e) {
            callbackErr();
          };

          request.send(dataPost);
        };

        _proto.postRaw = function postRaw(_ref6) {
          var _ref6$url = _ref6.url,
              url = _ref6$url === void 0 ? '' : _ref6$url,
              _ref6$data = _ref6.data,
              data = _ref6$data === void 0 ? {} : _ref6$data,
              _ref6$callback = _ref6.callback,
              callback = _ref6$callback === void 0 ? function (data) {} : _ref6$callback,
              _ref6$apiUrl = _ref6.apiUrl,
              apiUrl = _ref6$apiUrl === void 0 ? '' : _ref6$apiUrl,
              _ref6$callbackErr = _ref6.callbackErr,
              callbackErr = _ref6$callbackErr === void 0 ? function () {} : _ref6$callbackErr;
          var dataPost = data;
          var fullURL = apiUrl + url;
          var request = new XMLHttpRequest();
          request.open('POST', fullURL, true);
          request.timeout = 15000;
          request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

          request.onreadystatechange = function () {
            if (request.status == 200) {
              callback({
                status: request.status,
                data: request.responseText
              });
            } else {
              callbackErr();
            }
          };

          request.ontimeout = function (e) {
            callbackErr();
          };

          request.onerror = function (e) {
            callbackErr();
          };

          request.send(dataPost);
        };

        _proto.put = function put(_ref7) {
          var _ref7$url = _ref7.url,
              url = _ref7$url === void 0 ? '' : _ref7$url,
              _ref7$data = _ref7.data,
              data = _ref7$data === void 0 ? {} : _ref7$data,
              _ref7$callback = _ref7.callback,
              callback = _ref7$callback === void 0 ? function (data) {} : _ref7$callback,
              _ref7$apiUrl = _ref7.apiUrl,
              apiUrl = _ref7$apiUrl === void 0 ? '' : _ref7$apiUrl,
              _ref7$callbackErr = _ref7.callbackErr,
              callbackErr = _ref7$callbackErr === void 0 ? function () {} : _ref7$callbackErr;
          var dataPost = this.encodeQueryData(data);
          var fullURL = apiUrl + url;
          var request = new XMLHttpRequest();
          request.open('PUT', fullURL, true);
          request.timeout = 15000;
          request.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

          request.onreadystatechange = function () {
            if (request.readyState == 4) {
              if (request.responseText) {
                callback({
                  status: request.status,
                  data: JSON.parse(request.responseText)
                });
              } else {
                callbackErr();
              }
            } else if (request.readyState === 0) {
              callbackErr();
            }

            if (request.status !== 200) {
              callbackErr();
            }
          };

          request.ontimeout = function (e) {
            callbackErr();
          };

          request.onerror = function (e) {
            callbackErr();
          };

          request.send(dataPost);
        };

        return ServiceRest;
      }();

      var apiObject = exports('default', new ServiceRest());

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/ShipController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './EventCode.ts', './Data.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Animation, Sprite, SpriteFrame, tween, Vec3, Component, gaEventEmitter, EventCode, Data;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Animation = module.Animation;
      Sprite = module.Sprite;
      SpriteFrame = module.SpriteFrame;
      tween = module.tween;
      Vec3 = module.Vec3;
      Component = module.Component;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      EventCode = module.default;
    }, function (module) {
      Data = module.Data;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;

      cclegacy._RF.push({}, "a79cdWUkYZPXJBMeA1sNgef", "ShipController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var ShipController = exports('ShipController', (_dec = ccclass('ShipController'), _dec2 = property(Node), _dec3 = property(Animation), _dec4 = property([Animation]), _dec5 = property(Sprite), _dec6 = property(Animation), _dec7 = property(SpriteFrame), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(ShipController, _Component);

        function ShipController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "fire", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "fireAnimation", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "smokeAnimation", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "shipSprite", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "shipAnimation", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "shipIdle", _descriptor6, _assertThisInitialized(_this));

          _this.shipSpeed = void 0;
          _this.isFly = void 0;
          _this.isFastFly = void 0;
          return _this;
        }

        var _proto = ShipController.prototype;

        _proto.start = function start() {
          this.smokeAnimation.forEach(function (element) {
            element.node.active = false;
          });
          this.isFastFly = false;
          var explosion = this.firedEvent.bind(this);
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.FIRED_EVENT, explosion);
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.CLAIM_GAME, this.winGame.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.NORMAL_GAME, this.startGame.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.FREE_GAME, this.startGame.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.STATE.PREPARING, this.idle.bind(this));
        };

        _proto.update = function update(dt) {
          if (this.isFly) {
            this.shipAnimation.getState('fly').speed = Data.instance.muL / 10;
          }

          if (!this.isFastFly && this.node.position.y >= 0) {
            this.fly();
            this.isFastFly = true;
          }
        };

        _proto.startGame = function startGame() {
          this.beginFly(); // tween(this.node)
          // .to(0.78, {position: new Vec3(0,0,0)})
          // .call(()=>{
          //     this.fly();
          // })
          // .start();
        };

        _proto.winGame = function winGame() {
          var _this2 = this;

          gaEventEmitter.instance.emit(EventCode.STATE.WIN);
          this.fly();
          tween(this.node).by(3, {
            position: new Vec3(0, 1000, 0)
          }).call(function () {
            _this2.node.position = new Vec3(0, -230, 0);
          }).start();
        };

        _proto.idle = function idle() {
          this.isFly = false;
          this.fire.active = false;
          this.shipAnimation.stop();
          this.shipSprite.node.active = true;
          this.shipSprite.spriteFrame = this.shipIdle;
        };

        _proto.fly = function fly() {
          this.isFly = true;
          this.shipAnimation.play('fly');
          this.fire.active = true;
          this.smokeAnimation.forEach(function (element) {
            element.node.active = false;
          });
        };

        _proto.beginFly = function beginFly() {
          var _this3 = this;

          this.isFastFly = false;
          this.shipAnimation.play('fly');
          this.smokeAnimation.forEach(function (element) {
            element.node.active = true;
            element.play();
          });
          this.fire.active = true;
          this.fireAnimation.play('small_fire');
          this.scheduleOnce(function () {
            _this3.smokeAnimation.forEach(function (element) {
              element.node.active = false;
            });

            _this3.fireAnimation.play('ship_fire');
          }, 0.78);
        };

        _proto.firedEvent = function firedEvent() {
          this.shipAnimation.play('explosion');
          this.fire.active = false;
        };

        return ShipController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "fire", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "fireAnimation", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "smokeAnimation", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "shipSprite", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "shipAnimation", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "shipIdle", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/Sound.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './CustomTypeShare.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, AudioSource, warn, UITransform, Size, log, sys, Component, CustomAudioClip;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      AudioSource = module.AudioSource;
      warn = module.warn;
      UITransform = module.UITransform;
      Size = module.Size;
      log = module.log;
      sys = module.sys;
      Component = module.Component;
    }, function (module) {
      CustomAudioClip = module.CustomAudioClip;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;

      cclegacy._RF.push({}, "9292cCzeGpJ2qYW3aEq3Ldq", "Sound", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var Sound = exports('Sound', (_dec = ccclass('Sound'), _dec2 = property(CustomAudioClip), _dec3 = property(CustomAudioClip), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(Sound, _Component);

        function Sound() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "musicList", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sfxList", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "musicVolume", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sfxVolume", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "isDebug", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "dynamicLoading", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "storageKeyBGM", _descriptor7, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "storageKeySFX", _descriptor8, _assertThisInitialized(_this));

          _this.currentMusic = void 0;
          _this.isEnableBGM = false;
          _this.isEnableSFX = false;
          _this.enableMusicFunc = void 0;
          _this.MUSIC_VOLUME = 1;
          _this.isMuteMusic = false;
          _this.isMuteEffect = false;
          _this.userGestureNode = void 0;
          _this.musicMap = {};
          _this.sfxMap = {};
          return _this;
        }

        var _proto = Sound.prototype;

        _proto.onLoad = function onLoad() {
          var _this2 = this;

          {
            globalThis['sound'] = this;
          }

          _Component.prototype.onLoad.call(this);

          this.loadCacheConfig();
          this.createUserGestureNode();
          this.userGestureNode.on(Node.EventType.TOUCH_START, this.startPlayWithUserGesture, this);
          this.musicList.forEach(function (soundObj) {
            _this2.musicMap[soundObj.soundId] = soundObj;

            var audioSource = _this2.node.addComponent(AudioSource);

            audioSource.playOnAwake = false;
            audioSource.clip = soundObj.audioFile;
            audioSource.stop();
            _this2.musicMap[soundObj.soundId].audioSource = audioSource;
          });
          this.sfxList.forEach(function (soundObj) {
            _this2.sfxMap[soundObj.soundId] = soundObj;

            var audioSource = _this2.node.addComponent(AudioSource);

            audioSource.playOnAwake = false;
            audioSource.clip = soundObj.audioFile;
            audioSource.stop();
            _this2.sfxMap[soundObj.soundId].audioSource = audioSource;
          });

          if (this.isDebug) {
            warn("musicList", this.musicList.map(function (soundObj) {
              return soundObj.soundId;
            }));
            warn("sfxList", this.sfxList.map(function (soundObj) {
              return soundObj.soundId;
            }));
          }

          if (this.dynamicLoading) {
            this.node.on('SET_UP_AUDIO_DATABASE', this.mappingAudioFiles.bind(this));
          }
        };

        _proto.mappingAudioFiles = function mappingAudioFiles(evt) {
          var _this3 = this;

          evt.propagationStopped = true;

          if (evt.details) {
            var audioList = evt.details.audioList;

            if (audioList && audioList.length > 0) {
              audioList.forEach(function (audioObj) {
                if (audioObj.isMusic) {
                  if (!_this3.musicMap[audioObj.soundId]) {
                    _this3.musicMap[audioObj.soundId] = audioObj;
                  }
                } else if (audioObj.isEffect) {
                  if (!_this3.sfxMap[audioObj.soundId]) {
                    _this3.sfxMap[audioObj.soundId] = audioObj;
                  }
                }
              });
            } else {
              this.resetAudioMaps();
            }
          }
        };

        _proto.resetAudioMaps = function resetAudioMaps() {
          for (var key in this.musicMap) {
            var musicObj = this.musicMap[key];

            if (musicObj && musicObj.destroyedOnSwitchMode) {
              this.musicMap[key] = null;
              delete this.musicMap[key];
            }
          }

          if (this.currentMusic && this.currentMusic.destroyedOnSwitchMode) {
            this.currentMusic = null;
          }

          for (var _key2 in this.sfxMap) {
            var soudObj = this.sfxMap[_key2];

            if (soudObj && soudObj.destroyedOnSwitchMode) {
              this.sfxMap[_key2] = null;
              delete this.sfxMap[_key2];
            }
          }
        };

        _proto.createUserGestureNode = function createUserGestureNode() {
          if (!this.userGestureNode) {
            this.userGestureNode = new Node("UserGesture");
            this.userGestureNode.parent = this.node.parent;
            this.userGestureNode.active = true;
            this.userGestureNode.setPosition(0, 0);
            this.userGestureNode.layer = this.node.layer;
            var transform = this.userGestureNode.addComponent(UITransform);
            transform.setContentSize(new Size(2024, 1200));
            this.userGestureNode.setSiblingIndex(this.userGestureNode.parent.children.length);
          }
        };

        _proto.startPlayWithUserGesture = function startPlayWithUserGesture() {
          this.playMainBGM();
          this.userGestureNode.off(Node.EventType.TOUCH_START, this.startPlayWithUserGesture, this);
        }
        /**
         * @music_API
         *  */
        ;

        _proto.playMusic = function playMusic(id, loop, volume) {
          if (loop === void 0) {
            loop = true;
          }

          if (!this.isEnableBGM) return;
          if (this.musicMap.hasOwnProperty(id) == false) return null;
          volume = this.isMuteMusic ? 0 : volume > 0 ? volume : this.musicVolume;

          if (this.currentMusic && this.currentMusic.soundId == id && !this.currentMusic.audioSource.playing) {
            this.currentMusic.audioSource.play();
            this.currentMusic.audioSource.loop = loop;
            this.currentMusic.audioSource.volume = volume;
          } else {
            if (this.currentMusic && this.currentMusic.soundId == id) return this.currentMusic;
            if (this.currentMusic) this.currentMusic.audioSource.stop();
            this.currentMusic = this.musicMap[id];

            if (this.currentMusic) {
              this.currentMusic.audioSource.play();
              this.currentMusic.audioSource.loop = loop;
              this.currentMusic.audioSource.volume = volume;
            }
          }

          this.isDebug && log("%cSOUND playMusic", "color:red", id);
          return this.currentMusic;
        };

        _proto.stopMusic = function stopMusic() {
          this.currentMusic && this.currentMusic.audioSource.playing && this.currentMusic.audioSource.stop();
        };

        _proto.pauseMusic = function pauseMusic() {
          this.currentMusic && this.currentMusic.audioSource.playing && this.currentMusic.audioSource.pause();
        };

        _proto.setMusicVolume = function setMusicVolume(volume) {
          volume = volume < 0.01 ? 0.01 : volume;
          this.musicVolume = volume;

          for (var key in this.musicMap) {
            var musicObj = this.musicMap[key];
            if (musicObj) musicObj.audioSource.volume = volume;
          }
        };

        _proto.muteMusic = function muteMusic() {
          this.isMuteMusic = true;

          for (var key in this.musicMap) {
            var musicObj = this.musicMap[key];
            if (musicObj) musicObj.audioSource.volume = 0;
          }
        };

        _proto.unmuteMusic = function unmuteMusic() {
          this.isMuteMusic = false;

          for (var key in this.musicMap) {
            var musicObj = this.musicMap[key];
            if (musicObj) musicObj.audioSource.volume = this.musicVolume;
          }
        }
        /**
         * @sfx_API 
         * */
        ;

        _proto.playSfx = function playSfx(id, loop, volume) {
          if (loop === void 0) {
            loop = false;
          }

          if (!this.isEnableSFX) return;
          volume = this.isMuteEffect ? 0 : volume > 0 ? volume : this.sfxVolume;

          if (this.sfxMap.hasOwnProperty(id)) {
            var soundObj = this.sfxMap[id];

            if (soundObj) {
              soundObj.audioSource.play();
              soundObj.audioSource.loop = loop;

              if (typeof volume !== "undefined") {
                soundObj.audioSource.volume = volume;
              }
            }

            this.isDebug && log("%cSOUND playSfx", "color: blue", id);
            return soundObj;
          } else {
            warn("SOUND playSfx, do not have sfx: " + id);
            return null;
          }
        };

        _proto.stopSfx = function stopSfx(id) {
          if (this.sfxMap.hasOwnProperty(id)) {
            var soundObj = this.sfxMap[id];
            soundObj && soundObj.audioSource.playing && soundObj.audioSource.stop();
          } else {
            warn("SOUND stopSfx, do not have sfx: " + id);
          }
        };

        _proto.stopAllEffects = function stopAllEffects() {
          for (var key in this.sfxMap) {
            var soundObj = this.sfxMap[key];
            if (soundObj) this.stopSfx(soundObj.soundId);
          }
        };

        _proto.pauseAllEffects = function pauseAllEffects() {
          for (var key in this.sfxMap) {
            var soundObj = this.sfxMap[key];

            if (soundObj && soundObj.audioSource.playing) {
              soundObj.audioSource.pause();
              this.isDebug && log("%cSOUND pauseAllEffects", "color: orange", soundObj.soundId);
            }
          }
        };

        _proto.muteAllEffects = function muteAllEffects() {
          this.isMuteEffect = true;
          this.setEffectVolume(0, true);
        };

        _proto.unmuteAllEffects = function unmuteAllEffects() {
          this.isMuteEffect = false;
          this.setEffectVolume(this.sfxVolume, true);
        };

        _proto.setEffectVolume = function setEffectVolume(volume, immediate) {
          volume = volume < 0 ? 0 : volume;

          for (var key in this.sfxMap) {
            var soundObj = this.sfxMap[key];
            if (soundObj) soundObj.audioSource.volume = volume;
          }
        }
        /**
         * @canNotStop 
         */
        ;

        _proto.playSfxOneShot = function playSfxOneShot(id, volume) {
          if (!this.isEnableSFX || this.isMuteEffect) return;

          if (this.sfxMap.hasOwnProperty(id)) {
            var soundObj = this.sfxMap[id];
            volume = volume || this.sfxVolume;
            soundObj && soundObj.audioSource.playOneShot(soundObj.audioFile, volume);
          } else {
            warn("SOUND, playSfxOneShot: do not have sfx: " + id);
          }
        };

        _proto.stopAllAudio = function stopAllAudio() {
          this.stopMusic();
          this.stopAllEffects();
        }
        /**@control_setting */
        ;

        _proto.loadCacheConfig = function loadCacheConfig() {
          var isEnableBGM = sys.localStorage.getItem(this.storageKeyBGM);
          var isEnableSFX = sys.localStorage.getItem(this.storageKeySFX);
          this.isEnableBGM = isEnableBGM != null ? JSON.parse(isEnableBGM) : true;
          this.isEnableSFX = isEnableSFX != null ? JSON.parse(isEnableSFX) : true;
        };

        _proto.bgmToggle = function bgmToggle() {
          this.setBgmEnable(!this.isEnableBGM);
        };

        _proto.setBgmEnable = function setBgmEnable(enable) {
          var _this4 = this;

          this.isEnableBGM = enable;
          sys.localStorage.setItem(this.storageKeyBGM, this.isEnableBGM);

          if (this.enableMusicFunc) {
            clearTimeout(this.enableMusicFunc);
          }

          this.enableMusicFunc = setTimeout(function () {
            if (_this4.isEnableBGM) {
              _this4.playMainBGM();
            } else {
              _this4.pauseMusic();
            }

            _this4.enableMusicFunc = null;
          }, 100);
        };

        _proto.sfxToggle = function sfxToggle() {
          this.setEffectEnable(!this.isEnableBGM);
        };

        _proto.setEffectEnable = function setEffectEnable(enable) {
          this.isEnableSFX = enable;
          sys.localStorage.setItem(this.storageKeySFX, this.isEnableSFX);

          if (this.isEnableSFX) {
            this.unmuteAllEffects();
          } else {
            this.muteAllEffects();
          }
        }
        /**@implements */
        ;

        _proto.playMainBGM = function playMainBGM() {
          this.playMusic('MUSIC_MAIN');
        };

        _proto.playSFXClick = function playSFXClick() {
          this.playSfxOneShot('CLICK');
        };

        _proto.getSfxMap = function getSfxMap() {
          return this.sfxMap;
        };

        _proto.setSfxMap = function setSfxMap(data) {
          var _this5 = this;

          if (data) {
            Object.keys(data).forEach(function (key) {
              if (!_this5.sfxMap[key]) {
                _this5.sfxMap[key] = {};
              }

              Object.assign(_this5.sfxMap[key], data[key]);
            });
          }
        };

        _proto.getMusicMap = function getMusicMap() {
          return this.musicMap;
        };

        _proto.setMusicMap = function setMusicMap(data) {
          var _this6 = this;

          if (data) {
            Object.keys(data).forEach(function (key) {
              if (!_this6.musicMap[key]) {
                _this6.musicMap[key] = {};
              }

              Object.assign(_this6.musicMap[key], data[key]);
            });
          }
        };

        _proto.onDisable = function onDisable() {
          this.stopAllAudio();
          this.userGestureNode.off(Node.EventType.TOUCH_START, this.startPlayWithUserGesture, this);
        };

        _proto.test = function test() {
          this.playMusic("MUSIC_MAIN", true);
        };

        return Sound;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "musicList", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "sfxList", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "musicVolume", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.8;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "sfxVolume", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.5;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "isDebug", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "dynamicLoading", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "storageKeyBGM", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "enableBackgroundMusic";
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "storageKeySFX", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "enableSound";
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SoundPlayerImpl.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './WebSoundPlayer.ts', './NativeSoundPlayer.ts', './CustomTypeShare.ts', './loadConfigAsync.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, warn, game, Game, sys, error, assetManager, UITransform, view, log, Component, WebSoundPlayer, NativeSoundPlayer, CustomAudioClip, loadConfigAsync;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      warn = module.warn;
      game = module.game;
      Game = module.Game;
      sys = module.sys;
      error = module.error;
      assetManager = module.assetManager;
      UITransform = module.UITransform;
      view = module.view;
      log = module.log;
      Component = module.Component;
    }, function (module) {
      WebSoundPlayer = module.WebSoundPlayer;
    }, function (module) {
      NativeSoundPlayer = module.NativeSoundPlayer;
    }, function (module) {
      CustomAudioClip = module.CustomAudioClip;
    }, function (module) {
      loadConfigAsync = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;

      cclegacy._RF.push({}, "27112mPy0pFfJ1GtTI+J91P", "SoundPlayerImpl", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var SoundPlayerImpl = exports('SoundPlayerImpl', (_dec = ccclass('SoundPlayerImpl'), _dec2 = property({
        type: CustomAudioClip
      }), _dec3 = property({
        type: CustomAudioClip
      }), _dec4 = property({
        type: Node
      }), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SoundPlayerImpl, _Component);

        function SoundPlayerImpl() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "musicList", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sfxList", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "userGestureNode", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "musicVolume", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "sfxVolume", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "isDebug", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "storageKeyBGM", _descriptor7, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "storageKeySFX", _descriptor8, _assertThisInitialized(_this));

          _this.currentMusic = void 0;
          _this.isEnableBGM = false;
          _this.isEnableSFX = false;
          _this.resumeSfxList = [];
          _this.enableMusicFunc = void 0;
          _this.MUSIC_VOLUME = 1;
          _this.isMuteMusic = false;
          _this.isMuteEffect = false;
          _this.musicAudioSource = null;
          _this.isWebSound = false;
          _this._soundPlayer = null;
          _this._hasAudioContext = true;
          return _this;
        }

        var _proto = SoundPlayerImpl.prototype;

        _proto.onLoad = function onLoad() {
          var _this2 = this; // globalThis.soundPlayer = this;


          this._checkDuplicateAudioFile();

          this.node.setSiblingIndex(this.node.parent.children.length + 1);
          this.loadCacheConfig();

          if (this.isDebug) {
            warn("musicList", this.musicList.map(function (soundObj) {
              return soundObj.soundId;
            }));
            warn("sfxList", this.sfxList.map(function (soundObj) {
              return soundObj.soundId;
            }));
          }

          this.node.on('SET_UP_AUDIO_DATABASE', this._loadDynamicSounds.bind(this));
          game.on(Game.EVENT_HIDE, this._onEventHide, this);
          game.on(Game.EVENT_SHOW, this._onEventShow, this);
          this.isWebSound = sys.isBrowser == true && globalThis.Howl;

          if (this.isWebSound) {
            this._soundPlayer = new WebSoundPlayer();
          } else {
            this._soundPlayer = new NativeSoundPlayer();
          }

          this._soundPlayer.init(this.musicList, this.sfxList, this.node);

          if (this.isWebSound) {
            this._soundPlayer.loadSfxList(this.sfxList, function () {});

            this._soundPlayer.loadMusicList(this.musicList, function () {
              _this2._hasAudioContext = globalThis.Howler.ctx && globalThis.Howler.ctx.state === 'running';

              if (!_this2._hasAudioContext) {
                _this2._waitForUserGesture();
              } else {
                _this2._soundPlayer.skipGesture();
              }

              _this2.playMainBGM();
            });
          }
        };

        _proto._checkDuplicateAudioFile = function _checkDuplicateAudioFile() {
          var musicFileNames = this.musicList.map(function (soundObj) {
            return soundObj.audioFile.name;
          });
          musicFileNames.forEach(function (music, index) {
            if (musicFileNames.indexOf(music) !== index) {
              error("duplicate music file", music, musicFileNames.indexOf(music), index);
            }
          });
          var sfxFileNames = this.sfxList.map(function (soundObj) {
            return soundObj.audioFile.name;
          });
          sfxFileNames.forEach(function (sfx, index) {
            if (sfxFileNames.indexOf(sfx) !== index) {
              error("duplicate sfx file", sfx, sfxFileNames.indexOf(sfx), index);
            }
          });
        };

        _proto._loadDynamicSounds = function _loadDynamicSounds(ev) {
          var _this3 = this;

          var sfxList = ev.details.audioList;

          if (sfxList) {
            this._soundPlayer.loadDynamicSounds(sfxList, function () {
              if (_this3.isWebSound) {
                sfxList.forEach(function (soundObj) {
                  assetManager.releaseAsset(soundObj.audioFile);
                });
              }
            });
          }

          ev.propagationStopped = true;
        };

        _proto.setThumbMode = function setThumbMode(isThumbMode) {
          this._soundPlayer.setThumbMode(isThumbMode);
        };

        _proto._waitForUserGesture = function _waitForUserGesture() {
          var uiTransform = this.node.getComponent(UITransform);

          if (!uiTransform) {
            uiTransform = this.node.addComponent(UITransform);
          }

          uiTransform.setContentSize(view.getDesignResolutionSize());
          this.node.on(Node.EventType.TOUCH_START, this._startPlayWithUserGesture, this);
        };

        _proto._startPlayWithUserGesture = function _startPlayWithUserGesture(ev) {
          var _this4 = this;

          log("[SoundPlayerImpl] start sound with user gesture");
          ev.preventSwallow = true;
          this.node.off(Node.EventType.TOUCH_START, this._startPlayWithUserGesture, this);
          globalThis.Howler.ctx.resume().then(function () {
            _this4._soundPlayer.resumeWithGesture();
          });
        };

        _proto._onEventHide = function _onEventHide() {
          this._soundPlayer && this._soundPlayer.onEventHide(this.isEnableBGM, this.isEnableSFX);
        };

        _proto._onEventShow = function _onEventShow() {
          this._soundPlayer && this._soundPlayer.onEventShow(this.isEnableBGM, this.isEnableSFX);
        };

        _proto.playMusic = function playMusic(id, loop, volume) {
          if (loop === void 0) {
            loop = true;
          }

          volume = this.isMuteMusic || !this.isEnableBGM ? 0 : volume > 0 ? volume : this.musicVolume;
          log("[SoundPlayerImpl] Play music " + id);
          return this._soundPlayer.playMusic(id, loop, volume);
        };

        _proto.stopMusic = function stopMusic() {
          this._soundPlayer.stopMusic();
        };

        _proto.pauseMusic = function pauseMusic() {
          this._soundPlayer.pauseMusic();
        };

        _proto.resumeMusic = function resumeMusic() {
          this._soundPlayer.resumeMusic();
        };

        _proto.setMusicVolume = function setMusicVolume(volume) {
          volume = volume < 0.01 ? 0.01 : volume;
          this.musicVolume = volume;

          this._soundPlayer.setMusicVolume(volume);
        };

        _proto.muteMusic = function muteMusic() {
          this.isMuteMusic = true;

          this._soundPlayer.muteMusic();
        };

        _proto.unmuteMusic = function unmuteMusic() {
          if (this.isEnableBGM) {
            this.isMuteMusic = false;

            this._soundPlayer.unmuteMusic(this.musicVolume);
          }
        };

        _proto.playSfx = function playSfx(sfx, loop, volume) {
          if (loop === void 0) {
            loop = false;
          }

          volume = !this.isEnableSFX || this.isMuteEffect ? 0 : volume || this.sfxVolume;
          log("[SoundPlayerImpl] Play sfx " + sfx);
          return this._soundPlayer.playSfx(sfx, loop, volume);
        };

        _proto.stopSfx = function stopSfx(sfx) {
          this._soundPlayer.stopSfx(sfx);
        };

        _proto.stopAllEffects = function stopAllEffects() {
          this._soundPlayer.stopAllEffects();
        };

        _proto.pauseAllEffects = function pauseAllEffects(isInterrupt) {
          if (isInterrupt === void 0) {
            isInterrupt = false;
          }

          this._soundPlayer.pauseAllEffects(isInterrupt);
        };

        _proto.muteAllEffects = function muteAllEffects() {
          this.isMuteEffect = true;
          this.setEffectVolume(0, true);
        };

        _proto.unmuteAllEffects = function unmuteAllEffects() {
          if (this.isEnableSFX) {
            this.isMuteEffect = false;
            this.setEffectVolume(this.sfxVolume, true);
          }
        };

        _proto.setEffectVolume = function setEffectVolume(volume, immediate) {
          volume = volume < 0 ? 0 : volume;

          this._soundPlayer.setEffectVolume(volume, immediate);
        };

        _proto.setSoundVolume = function setSoundVolume(soundId, volume) {
          if (typeof volume !== 'number') return error("invalid volume", volume);

          this._soundPlayer.setSoundVolume(soundId, volume);
        };

        _proto.fadeMusicTo = function fadeMusicTo(duration, volume) {
          this._soundPlayer.fadeMusicTo(duration, volume);
        };

        _proto.fadeSoundTo = function fadeSoundTo(soundId, duration, volume) {
          this._soundPlayer.fadeSoundTo(soundId, duration, volume);
        }
        /**
         * using to play one clip many times
         * save the return data to stopSfxOneShot 
         */
        ;

        _proto.playSfxOneShot = function playSfxOneShot(soundId, volume, loop) {
          if (loop === void 0) {
            loop = false;
          }

          volume = !this.isEnableSFX || this.isMuteEffect ? 0 : volume || this.sfxVolume;
          return this._soundPlayer.playSfxOneShot(soundId, volume, loop);
        };

        _proto.stopSfxOneShot = function stopSfxOneShot(data) {
          if (data === void 0) {
            data = null;
          }

          if (!data) return error("stopSfxOneShot invalid data", data);

          this._soundPlayer.stopSfxOneShot(data);
        };

        _proto.stopAllAudio = function stopAllAudio() {
          this._soundPlayer.stopAllAudio();
        };

        _proto.loadCacheConfig = function loadCacheConfig() {
          var _loadConfigAsync$getC = loadConfigAsync.getConfig(),
              ENABLE_BGM = _loadConfigAsync$getC.ENABLE_BGM,
              ENABLE_SFX = _loadConfigAsync$getC.ENABLE_SFX;

          this.storageKeyBGM = ENABLE_BGM ? ENABLE_BGM : this.storageKeyBGM;
          this.storageKeySFX = ENABLE_SFX ? ENABLE_SFX : this.storageKeySFX;
          var isEnableBGM = sys.localStorage.getItem(this.storageKeyBGM);
          var isEnableSFX = sys.localStorage.getItem(this.storageKeySFX);
          this.isEnableBGM = isEnableBGM != null ? JSON.parse(isEnableBGM) : true;
          this.isEnableSFX = isEnableSFX != null ? JSON.parse(isEnableSFX) : true;
        };

        _proto.bgmToggle = function bgmToggle() {
          this.setBgmEnable(!this.isEnableBGM);
        };

        _proto.setBgmEnable = function setBgmEnable(enable) {
          var _this5 = this;

          this.isEnableBGM = enable;
          sys.localStorage.setItem(this.storageKeyBGM, this.isEnableBGM.toString());

          if (this.enableMusicFunc) {
            clearTimeout(this.enableMusicFunc);
          }

          this.enableMusicFunc = setTimeout(function () {
            if (_this5.isEnableBGM) {
              _this5.unmuteMusic();
            } else {
              _this5.muteMusic();
            }

            _this5.enableMusicFunc = null;
          }, 100);
        };

        _proto.sfxToggle = function sfxToggle() {
          this.setEffectEnable(!this.isEnableSFX);
        };

        _proto.setEffectEnable = function setEffectEnable(enable) {
          this.isEnableSFX = enable;
          sys.localStorage.setItem(this.storageKeySFX, this.isEnableSFX.toString());

          if (this.isEnableSFX) {
            this.unmuteAllEffects();
          } else {
            this.muteAllEffects();
          }
        };

        _proto.playMainBGM = function playMainBGM() {
          this.playMusic('MUSIC_MAIN');
        };

        _proto.playSFXClick = function playSFXClick() {
          this.playSfx('CLICK');
        };

        _proto.onDisable = function onDisable() {
          this.stopAllAudio();
        };

        _proto.onDestroy = function onDestroy() {
          this._soundPlayer.onDestroy();
        };

        return SoundPlayerImpl;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "musicList", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "sfxList", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return [];
        }
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "userGestureNode", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "musicVolume", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.8;
        }
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "sfxVolume", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return 0.5;
        }
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "isDebug", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return false;
        }
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "storageKeyBGM", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "enableBackgroundMusic";
        }
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "storageKeySFX", [property], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return "enableSound";
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SpawnAstronautController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './gaEventEmitter.ts', './EventCode.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Prefab, Node, instantiate, Component, gaEventEmitter, EventCode;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Prefab = module.Prefab;
      Node = module.Node;
      instantiate = module.instantiate;
      Component = module.Component;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      EventCode = module.default;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "daad0D0k01D0aEP284PiHQT", "SpawnAstronautController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var SpawnAstronautController = exports('SpawnAstronautController', (_dec = ccclass('SpawnAstronautController'), _dec2 = property(Prefab), _dec3 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SpawnAstronautController, _Component);

        function SpawnAstronautController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "astronaut", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "ship", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = SpawnAstronautController.prototype;

        _proto.start = function start() {
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.CLAIM_GAME, this.spawn.bind(this));
        };

        _proto.spawn = function spawn() {
          this.node.position = this.ship.position;

          var _astronaut = instantiate(this.astronaut);

          _astronaut.parent = this.node;
        };

        return SpawnAstronautController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "astronaut", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "ship", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/SpawnStarController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Prefab, instantiate, Vec3, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Prefab = module.Prefab;
      instantiate = module.instantiate;
      Vec3 = module.Vec3;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "9a980k36/5AebmaEN9LAO0a", "SpawnStarController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var SpawnStarController = exports('SpawnStarController', (_dec = ccclass('SpawnStarController'), _dec2 = property(Prefab), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(SpawnStarController, _Component);

        function SpawnStarController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "StarPrefab", _descriptor, _assertThisInitialized(_this));

          _this.numSpawn = 100;
          return _this;
        }

        var _proto = SpawnStarController.prototype;

        _proto.start = function start() {};

        _proto.update = function update(deltaTime) {
          if (this.numSpawn <= 0) return;
          this.spawnStar();
          this.numSpawn--;
        };

        _proto.spawnStar = function spawnStar() {
          var star = instantiate(this.StarPrefab);
          star.parent = this.node;
          star.position = new Vec3(Math.floor(Math.random() * (500 + 500 + 1)) - 500, Math.floor(Math.random() * (10000 + 700 + 1)) - 700, 0);
        };

        return SpawnStarController;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "StarPrefab", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/StarController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, SpriteAtlas, Sprite, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      SpriteAtlas = module.SpriteAtlas;
      Sprite = module.Sprite;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _class, _class2, _descriptor;

      cclegacy._RF.push({}, "9c897phlrNNOJojxhassiTq", "StarController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var StarController = exports('StarController', (_dec = ccclass('StarController'), _dec2 = property(SpriteAtlas), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(StarController, _Component);

        function StarController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "StartAtlas", _descriptor, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = StarController.prototype;

        _proto.start = function start() {
          var nameStar = 'Starry background  - Layer 02 - Stars_' + Math.floor(Math.random() * 89 + 11);
          this.node.getComponent(Sprite).spriteFrame = this.StartAtlas.getSpriteFrame(nameStar);
        };

        _proto.update = function update(deltaTime) {};

        return StarController;
      }(Component), _descriptor = _applyDecoratedDescriptor(_class2.prototype, "StartAtlas", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/state-machine-history.min.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      exports('default', void 0);

      var _cjsExports;

      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);

      loader.define(__cjsMetaURL, function (exports$1, require, module, __filename, __dirname) {
        // #region ORIGINAL CODE
        !function (t, e) {
          "object" == typeof exports$1 && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define("StateMachineHistory", [], e) : "object" == typeof exports$1 ? exports$1.StateMachineHistory = e() : t.StateMachineHistory = e();
        }(this, function () {
          return function (t) {
            function e(r) {
              if (n[r]) return n[r].exports;
              var o = n[r] = {
                i: r,
                l: !1,
                exports: {}
              };
              return t[r].call(o.exports, o, o.exports, e), o.l = !0, o.exports;
            }

            var n = {};
            return e.m = t, e.c = n, e.i = function (t) {
              return t;
            }, e.d = function (t, n, r) {
              e.o(t, n) || Object.defineProperty(t, n, {
                configurable: !1,
                enumerable: !0,
                get: r
              });
            }, e.n = function (t) {
              var n = t && t.__esModule ? function () {
                return t["default"];
              } : function () {
                return t;
              };
              return e.d(n, "a", n), n;
            }, e.o = function (t, e) {
              return Object.prototype.hasOwnProperty.call(t, e);
            }, e.p = "", e(e.s = 1);
          }([function (t, e, n) {
            function r(t) {
              if (0 === t.length) return t;
              var e,
                  n,
                  r = t.split(/[_-]/);
              if (1 === r.length && r[0][0].toLowerCase() === r[0][0]) return t;

              for (n = r[0].toLowerCase(), e = 1; e < r.length; e++) n = n + r[e].charAt(0).toUpperCase() + r[e].substring(1).toLowerCase();

              return n;
            }

            r.prepended = function (t, e) {
              return e = r(e), t + e[0].toUpperCase() + e.substring(1);
            }, t.exports = r;
          }, function (t, e, n) {
            var r = n(0);

            t.exports = function (t) {
              t = t || {};
              var e = r(t.name || t.past || "history"),
                  n = r(t.future || "future"),
                  o = r.prepended("clear", e),
                  i = r.prepended(e, "back"),
                  s = r.prepended(e, "forward"),
                  u = r.prepended("can", i),
                  p = r.prepended("can", s),
                  c = t.max,
                  f = {
                configure: function configure(t) {
                  t.addTransitionLifecycleNames(i), t.addTransitionLifecycleNames(s);
                },
                init: function init(t) {
                  t[e] = [], t[n] = [];
                },
                lifecycle: function lifecycle(t, r) {
                  "onEnterState" === r.event && (t[e].push(r.to), c && t[e].length > c && t[e].shift(), r.transition !== i && r.transition !== s && (t[n].length = 0));
                },
                methods: {},
                properties: {}
              };
              return f.methods[o] = function () {
                this[e].length = 0, this[n].length = 0;
              }, f.properties[u] = {
                get: function get() {
                  return this[e].length > 1;
                }
              }, f.properties[p] = {
                get: function get() {
                  return this[n].length > 0;
                }
              }, f.methods[i] = function () {
                if (!this[u]) throw Error("no history");
                var t = this[e].pop(),
                    r = this[e].pop();
                this[n].push(t), this._fsm.transit(i, t, r, []);
              }, f.methods[s] = function () {
                if (!this[p]) throw Error("no history");
                var t = this.state,
                    e = this[n].pop();

                this._fsm.transit(s, t, e, []);
              }, f;
            };
          }]);
        }); // #endregion ORIGINAL CODE

        _cjsExports = exports('default', module.exports);
        module.exports.StateMachineHistory;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/UIController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Data.ts', './ChangeMoney.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Node, Sprite, Label, Button, ProgressBar, Color, Vec3, tween, Component, Data, ChangeMoney;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Node = module.Node;
      Sprite = module.Sprite;
      Label = module.Label;
      Button = module.Button;
      ProgressBar = module.ProgressBar;
      Color = module.Color;
      Vec3 = module.Vec3;
      tween = module.tween;
      Component = module.Component;
    }, function (module) {
      Data = module.Data;
    }, function (module) {
      ChangeMoney = module.ChangeMoney;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17;

      cclegacy._RF.push({}, "3fd8cp2i4JKvIv68+JyN3VU", "UIController", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var money = new ChangeMoney();
      var UIController = exports('UIController', (_dec = ccclass('UIController'), _dec2 = property(Node), _dec3 = property(Node), _dec4 = property(Node), _dec5 = property(Node), _dec6 = property(Node), _dec7 = property(Node), _dec8 = property(Sprite), _dec9 = property(Label), _dec10 = property(Label), _dec11 = property(Button), _dec12 = property(Button), _dec13 = property(Label), _dec14 = property(Label), _dec15 = property(Button), _dec16 = property(Label), _dec17 = property(ProgressBar), _dec18 = property(Node), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(UIController, _Component);

        function UIController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "popup", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "PreparingControllerNode", _descriptor2, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "PreparingArea", _descriptor3, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "PanelChangeValue", _descriptor4, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "moneyWin", _descriptor5, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "userInfoController", _descriptor6, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "moneyWinSprite", _descriptor7, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "moneyWinLabel", _descriptor8, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "muL", _descriptor9, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "betValueButton", _descriptor10, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "ratioValueButton", _descriptor11, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "betValueLabel", _descriptor12, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "ratioValueLabel", _descriptor13, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "buttonStart", _descriptor14, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "startLabel", _descriptor15, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "flyProgressBar", _descriptor16, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "iconFlyProgressBar", _descriptor17, _assertThisInitialized(_this));

          _this.betButtonStatus = false;
          _this.ratioButtonStatus = false;
          _this.popupController = void 0;
          _this.preparingController = void 0;
          _this._userInfoController = void 0;
          return _this;
        }

        var _proto = UIController.prototype;

        _proto.onLoad = function onLoad() {
          this.popupController = this.popup.getComponent('PopupController');
          this.setDefault();
        };

        _proto.start = function start() {
          this.preparingController = this.PreparingControllerNode.getComponent('PreparingController');
          this._userInfoController = this.userInfoController.getComponent('userInfoController');
        };

        _proto.setDefault = function setDefault() {
          this.flyProgressBar.node.active = false;
          this.moneyWin.active = false;
          this.moneyWinLabel.string = '0';
          this.buttonStart.node.active = false;
          this.popup.active = false;
          this.muL.node.active = false;
          this.PreparingArea.active = false;
          this.betValueLabel.string = money.changeMoney(Data.instance.betValue);
          this.ratioValueLabel.string = Data.instance.ratioValue.toFixed(1);
        };

        _proto.openPrepareArea = function openPrepareArea(status) {
          this.PreparingArea.active = status;
          this.PanelChangeValue.active = !status;
        };

        _proto.openPopup = function openPopup(context, timeOpen) {
          var _this2 = this;

          return new Promise(function (resolve) {
            _this2.openPrepareArea(false);

            _this2.buttonStart.node.active = false;
            _this2.popup.active = true;

            _this2.popupController.setContext(context);

            if (timeOpen <= 0) return;

            _this2.scheduleOnce(function () {
              _this2.popup.active = false;

              _this2.openPrepareArea(true);

              _this2.buttonStart.node.active = true;
              resolve();
            }, timeOpen);
          });
        };

        _proto.clickBetButton = function clickBetButton() {
          if (this.ratioButtonStatus) {
            this.clickRatioButton();
          }

          this.betButtonStatus = !this.betButtonStatus;

          if (this.betButtonStatus) {
            this.preparingController.activePanel(true, true);
            this.betValueLabel.string = 'X';
            this.betValueButton.node.getComponent(Sprite).color = Color.RED;
          } else {
            this.preparingController.activePanel(false, true);
            this.betValueLabel.string = money.changeMoney(Data.instance.betValue);
            this.betValueButton.node.getComponent(Sprite).color = Color.WHITE;
          }
        };

        _proto.clickRatioButton = function clickRatioButton() {
          if (this.betButtonStatus) {
            this.clickBetButton();
          }

          this.ratioButtonStatus = !this.ratioButtonStatus;

          if (this.ratioButtonStatus) {
            this.preparingController.activePanel(true, false);
            this.ratioValueLabel.string = 'X';
            this.ratioValueButton.node.getComponent(Sprite).color = Color.RED;
          } else {
            this.preparingController.activePanel(false, false);
            this.ratioValueLabel.string = Data.instance.ratioValue.toFixed(1);
            this.ratioValueButton.node.getComponent(Sprite).color = Color.WHITE;
          }
        };

        _proto.startGame = function startGame() {
          if (this.betButtonStatus) {
            this.clickBetButton();
          }

          if (this.ratioButtonStatus) {
            this.clickRatioButton();
          }

          this.flyProgressBar.node.active = true;
          this.setMuL('0.0'); // this.flyProgressBar.node.active = true;

          this.iconFlyProgressBar.position = new Vec3(-134, 0, 0);
          this.updateFylProgressBar(0.0);
          this.moneyWin.active = true;
          this.openPrepareArea(false);
          this.startLabel.string = 'CASH OUT';
          this.startLabel.color = Color.GREEN;
          this.muL.color = Color.WHITE;
          this.moneyWinSprite.color = Color.WHITE;

          this._userInfoController.changeWalletStart();

          console.warn('startGame');
        };

        _proto.firedEvent = function firedEvent() {
          this.buttonStart.node.active = false;
          this.muL.color = Color.RED;
          this.moneyWinSprite.color = Color.RED;
        };

        _proto.claimGame = function claimGame() {
          this.buttonStart.node.active = false;
          this.muL.color = Color.GREEN;
          this.moneyWinSprite.color = Color.GREEN;
        };

        _proto.setMuL = function setMuL(value) {
          this.muL.node.active = true;
          this.muL.string = Number(value).toFixed(1) + "x";
          var moneyWin = money.changeMoney(Number(value) * Data.instance.betValue);
          this.moneyWinLabel.string = moneyWin;
        };

        _proto.preparing = function preparing() {
          this.flyProgressBar.node.active = false;
          this.openPrepareArea(true);
          this.moneyWin.active = false;
          this.buttonStart.node.active = true;
          this.muL.color = Color.WHITE;
        };

        _proto.setModeButton = function setModeButton(mode) {
          this.startLabel.string = mode;
          this.startLabel.color = Color.BLACK;
        };

        _proto.uiAnimation = function uiAnimation(node, duration, start, end) {
          for (var _len2 = arguments.length, callback = new Array(_len2 > 4 ? _len2 - 4 : 0), _key2 = 4; _key2 < _len2; _key2++) {
            callback[_key2 - 4] = arguments[_key2];
          }

          tween(node).to(duration, {
            position: end
          }).call(function () {
            callback();
          }).start();
        };

        _proto.updateFylProgressBar = function updateFylProgressBar(progress) {
          this.flyProgressBar.progress = progress;
          this.iconFlyProgressBar.position = new Vec3(this.iconFlyProgressBar.position.x + 28 * progress, 0, 0);
        };

        return UIController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "popup", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "PreparingControllerNode", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "PreparingArea", [_dec4], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "PanelChangeValue", [_dec5], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "moneyWin", [_dec6], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "userInfoController", [_dec7], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "moneyWinSprite", [_dec8], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "moneyWinLabel", [_dec9], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "muL", [_dec10], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "betValueButton", [_dec11], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "ratioValueButton", [_dec12], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "betValueLabel", [_dec13], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "ratioValueLabel", [_dec14], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "buttonStart", [_dec15], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "startLabel", [_dec16], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "flyProgressBar", [_dec17], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "iconFlyProgressBar", [_dec18], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/UpdatePanel.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, ProgressBar, Component;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      ProgressBar = module.ProgressBar;
      Component = module.Component;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "d896fFhBk9A57gLMvEj3KZ7", "UpdatePanel", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var UpdatePanel = exports('UpdatePanel', (_dec = ccclass('UpdatePanel'), _dec2 = property(Label), _dec3 = property(ProgressBar), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(UpdatePanel, _Component);

        function UpdatePanel() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "info", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "byteProgress", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        return UpdatePanel;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "info", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "byteProgress", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: function initializer() {
          return null;
        }
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/userInfoController.ts", ['./rollupPluginModLoBabelHelpers.js', 'cc', './Network.ts', './ChangeMoney.ts', './gaEventEmitter.ts', './EventCode.ts', './Data.ts'], function (exports) {
  var _applyDecoratedDescriptor, _inheritsLoose, _initializerDefineProperty, _assertThisInitialized, cclegacy, _decorator, Label, Color, Vec3, tween, Component, Network, ChangeMoney, gaEventEmitter, EventCode, Data;

  return {
    setters: [function (module) {
      _applyDecoratedDescriptor = module.applyDecoratedDescriptor;
      _inheritsLoose = module.inheritsLoose;
      _initializerDefineProperty = module.initializerDefineProperty;
      _assertThisInitialized = module.assertThisInitialized;
    }, function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      Label = module.Label;
      Color = module.Color;
      Vec3 = module.Vec3;
      tween = module.tween;
      Component = module.Component;
    }, function (module) {
      Network = module.Network;
    }, function (module) {
      ChangeMoney = module.ChangeMoney;
    }, function (module) {
      gaEventEmitter = module.default;
    }, function (module) {
      EventCode = module.default;
    }, function (module) {
      Data = module.Data;
    }],
    execute: function () {
      var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;

      cclegacy._RF.push({}, "b74e8d+mwtLGrPD56OhQtUn", "userInfoController", undefined);

      var network = new Network();
      var money = new ChangeMoney();
      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var userInfoController = exports('userInfoController', (_dec = ccclass('userInfoController'), _dec2 = property(Label), _dec3 = property(Label), _dec(_class = (_class2 = /*#__PURE__*/function (_Component) {
        _inheritsLoose(userInfoController, _Component);

        function userInfoController() {
          var _this;

          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          _this = _Component.call.apply(_Component, [this].concat(args)) || this;

          _initializerDefineProperty(_this, "walletLabel", _descriptor, _assertThisInitialized(_this));

          _initializerDefineProperty(_this, "moneyBet", _descriptor2, _assertThisInitialized(_this));

          return _this;
        }

        var _proto = userInfoController.prototype;

        _proto.start = function start() {
          gaEventEmitter.instance.registerEvent(EventCode.REQUEST.UPDATE_WALLET, this.updateWallet.bind(this));
          gaEventEmitter.instance.registerEvent(EventCode.RESPONSE.CLAIM_GAME, this.changeWalletWin.bind(this));
          this.moneyBet.node.active = false;
          this.walletLabel.node.parent.active = false;
        };

        _proto.update = function update(deltaTime) {};

        _proto.updateWallet = function updateWallet(data) {
          this.walletLabel.node.parent.active = true;
          var walletAmount = (data - 2493) / 1000;
          Data.instance.walletAmount = walletAmount;
          this.walletLabel.string = money.changeMoney(walletAmount);
        };

        _proto.changeWalletStart = function changeWalletStart() {
          var _this2 = this;

          this.moneyBet.node.active = true;
          this.moneyBet.string = '-' + money.changeMoney(Data.instance.betValue);
          this.moneyBet.color = Color.RED;
          this.moneyBet.node.position = new Vec3(-10, -70, 0);
          Data.instance.walletAmount -= Data.instance.betValue;
          this.walletLabel.string = money.changeMoney(Data.instance.walletAmount);
          tween(this.moneyBet.node).to(0.5, {
            position: new Vec3(-10, -120, 0)
          }).call(function () {
            _this2.moneyBet.node.active = false;
          }).start();
        };

        _proto.changeWalletWin = function changeWalletWin(data) {
          var _this3 = this;

          var moneyWin = data.player.wa;
          Data.instance.walletAmount += moneyWin / 1000;
          this.moneyBet.node.active = true;
          this.moneyBet.string = '+' + money.changeMoney(moneyWin / 1000);
          this.moneyBet.color = Color.GREEN;
          this.moneyBet.node.position = new Vec3(-10, -120, 0);
          tween(this.moneyBet.node).to(1, {
            position: new Vec3(-10, -70, 0)
          }).call(function () {
            _this3.walletLabel.string = money.changeMoney(Data.instance.walletAmount);
            _this3.moneyBet.node.active = false;
          }).start();
        };

        return userInfoController;
      }(Component), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "walletLabel", [_dec2], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "moneyBet", [_dec3], {
        configurable: true,
        enumerable: true,
        writable: true,
        initializer: null
      })), _class2)) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/utils.ts", ['cc'], function (exports) {
  var cclegacy, Vec3, UITransform, error, UIRenderer, tween, UIOpacity, Color, bezier, director, v3, sys, log, assetManager, Texture2D, SpriteFrame, Sprite, isValid, Node, SpriteAtlas, warn;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      Vec3 = module.Vec3;
      UITransform = module.UITransform;
      error = module.error;
      UIRenderer = module.UIRenderer;
      tween = module.tween;
      UIOpacity = module.UIOpacity;
      Color = module.Color;
      bezier = module.bezier;
      director = module.director;
      v3 = module.v3;
      sys = module.sys;
      log = module.log;
      assetManager = module.assetManager;
      Texture2D = module.Texture2D;
      SpriteFrame = module.SpriteFrame;
      Sprite = module.Sprite;
      isValid = module.isValid;
      Node = module.Node;
      SpriteAtlas = module.SpriteAtlas;
      warn = module.warn;
    }],
    execute: function () {
      exports({
        MD5: MD5,
        addZero: addZero,
        changeParent: changeParent,
        convertAssetArrayToObject: convertAssetArrayToObject,
        convertPayLine: convertPayLine,
        convertPayLineAllways: convertPayLineAllways,
        customDateFormat: customDateFormat,
        fadeIn: fadeIn,
        fadeOut: fadeOut,
        fadeTo: fadeTo,
        findKeyByValue: findKeyByValue,
        formatMoney: formatMoney,
        formatUserName: formatUserName,
        formatWalletMoney: formatWalletMoney,
        getAngleTwoPoint: getAngleTwoPoint,
        getAnimationsName: getAnimationsName,
        getDistance: getDistance,
        getFBAvatar: getFBAvatar,
        getLeftTime: getLeftTime,
        getOpacity: getOpacity,
        getPostionInOtherNode: getPostionInOtherNode,
        getRandomElement: getRandomElement,
        getRandomInt: getRandomInt,
        getText: getText,
        getTime: getTime,
        loadAvatarFacebook: loadAvatarFacebook,
        mapObjectKey: mapObjectKey,
        pickOutRandomElement: pickOutRandomElement,
        randRange: randRange,
        registerLoadHowl: registerLoadHowl,
        removeDuplicates: removeDuplicates,
        removeElementByValue: removeElementByValue,
        replaceElement: replaceElement,
        roundDecimal: roundDecimal,
        secondsToHHMMSS: secondsToHHMMSS,
        setIndexZ: setIndexZ,
        setLayerAlls: setLayerAlls,
        setLayerForAllChildrens: setLayerForAllChildrens,
        setMixAllAnims: setMixAllAnims,
        setOpacity: setOpacity,
        setRenderColor: setRenderColor,
        shaking: shaking,
        shuffleArray: shuffleArray,
        startGameFromEvent: startGameFromEvent,
        toFixed: toFixed,
        toLocalClockTime: toLocalClockTime,
        toLocalTime: toLocalTime,
        toLocalTimeHHMM: toLocalTimeHHMM,
        tweenBezier2DTo: tweenBezier2DTo,
        tweenMoney: tweenMoney,
        tweenMoney2: tweenMoney2,
        tweenWalletMoney: tweenWalletMoney,
        unregisterLoadHowl: unregisterLoadHowl,
        updateUtilConfig: updateUtilConfig
      });

      cclegacy._RF.push({}, "61e2aeL1yJB6r+n4NcvBChY", "utils", undefined);

      var lodash = globalThis._;
      var UTIL_CONFIG = exports('UTIL_CONFIG', {
        FORMAT_MONEY_EVENT: false
      });

      function updateUtilConfig(key, value) {
        if (UTIL_CONFIG.hasOwnProperty(key)) {
          UTIL_CONFIG[key] = value;
        }
      }

      function findKeyByValue(object, value) {
        return Object.keys(object).find(function (key) {
          return object[key] == value;
        });
      }

      function customDateFormat(date, formatString) {
        var YYYY, YY, MMMM, MMM, MM, M, DDDD, DDD, DD, D, hhhh, hhh, hh, h, mm, m, ss, s, ampm, AMPM, dMod, th;
        YY = ((YYYY = date.getFullYear()) + "").slice(-2);
        MM = (M = date.getMonth() + 1) < 10 ? '0' + M : M;
        MMM = (MMMM = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"][M - 1]).substring(0, 3);
        DD = (D = date.getDate()) < 10 ? '0' + D : D;
        DDD = (DDDD = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"][date.getDay()]).substring(0, 3);
        th = D >= 10 && D <= 20 ? 'th' : (dMod = D % 10) == 1 ? 'st' : dMod == 2 ? 'nd' : dMod == 3 ? 'rd' : 'th';
        formatString = formatString.replace("#YYYY#", YYYY).replace("#YY#", YY).replace("#MMMM#", MMMM).replace("#MMM#", MMM).replace("#MM#", MM).replace("#M#", M).replace("#DDDD#", DDDD).replace("#DDD#", DDD).replace("#DD#", DD).replace("#D#", D).replace("#th#", th);
        h = hhh = date.getHours();
        if (h == 0) h = 24;
        if (h > 12) h -= 12;
        hh = h < 10 ? '0' + h : h;
        hhhh = hhh < 10 ? '0' + hhh : hhh;
        AMPM = (ampm = hhh < 12 ? 'am' : 'pm').toUpperCase();
        mm = (m = date.getMinutes()) < 10 ? '0' + m : m;
        ss = (s = date.getSeconds()) < 10 ? '0' + s : s;
        return formatString.replace("#hhhh#", hhhh).replace("#hhh#", hhh).replace("#hh#", hh).replace("#h#", h).replace("#mm#", mm).replace("#m#", m).replace("#ss#", ss).replace("#s#", s).replace("#ampm#", ampm).replace("#AMPM#", AMPM);
      }

      function toLocalTimeHHMM(ts) {
        var timestamp = new Date(parseInt(ts));
        var hour = timestamp.getHours();
        var minutes = timestamp.getMinutes();
        var localTime = (hour < 10 ? "0" : "") + hour + "h" + (minutes < 10 ? "0" : "") + minutes;
        return localTime;
      }

      function toLocalClockTime(ts) {
        var timestamp = new Date(parseInt(ts));
        var hour = timestamp.getHours();
        var minutes = timestamp.getMinutes();
        var localTime = hour + "h" + (minutes < 10 ? "0" : "") + minutes;
        return localTime;
      }

      function formatUserName(userName) {
        return userName.trim();
      }

      function secondsToHHMMSS(secs) {
        if (secs == 0) return "00:00";
        var sec_num = parseInt(secs, 10);
        var hours = Math.floor(sec_num / 3600);
        var minutes = Math.floor(sec_num / 60) % 60;
        var seconds = sec_num % 60;
        return [hours, minutes, seconds].map(function (v) {
          return v < 10 ? "0" + v : v;
        }).filter(function (v, i) {
          return v !== "00" || i > 0;
        }).join(":");
      }

      function toLocalTime(ts, format) {
        return customDateFormat(new Date(ts * 1000), format);
      }

      function randRange(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
      }

      function toFixed(num, fixed) {
        var re = new RegExp('^-?\\d+(?:\.\\d{0,' + (fixed || -1) + '})?'); // eslint-disable-line

        var result = num.toString().match(re)[0];
        return result;
      }

      function getPostionInOtherNode(spaceNode, targetNode) {
        if (targetNode.parent == null) {
          return null;
        }

        var pos = new Vec3(0, 0, 0);
        var targetNodeComponent = targetNode.parent.getComponent(UITransform);
        var spaceNodeComponent = spaceNode.getComponent(UITransform);

        if (!targetNodeComponent) {
          targetNode.parent.addComponent(UITransform);
        }

        if (!spaceNodeComponent) {
          spaceNode.addComponent(UITransform);
        }

        pos = targetNodeComponent.convertToWorldSpaceAR(targetNode.getPosition());
        return spaceNodeComponent ? spaceNodeComponent.convertToNodeSpaceAR(pos) : pos;
      }

      function getSpriteNameFromAtlas(uuid) {
        var mainUUID = uuid.split('@')[0];
        var mainAsset = assetManager.assets['_map'][mainUUID];

        if (mainAsset) {
          var keys = Object.keys(mainAsset.spriteFrames);

          for (var i = 0; i < keys.length; i++) {
            if (mainAsset.spriteFrames[keys[i]]._uuid == uuid) {
              return keys[i];
            }
          }
        }

        return '';
      }

      function isSpriteFrameFromAtlas(uuid) {
        var mainUUID = uuid.split('@')[0];
        var mainAsset = assetManager.assets['_map'][mainUUID];

        if (mainAsset && mainAsset instanceof SpriteAtlas) {
          return true;
        }

        return false;
      }

      function convertAssetArrayToObject(arr) {
        var obj = {};

        for (var i = 0; i < arr.length; i++) {
          if (arr[i]._name == "" && arr[i].data) {
            arr[i]._name = arr[i].data._name;
          }

          if (arr[i]) {
            var uuid = arr[i]._uuid ? arr[i]._uuid : arr[i].uuid;
            var name = uuid && isSpriteFrameFromAtlas(uuid) ? getSpriteNameFromAtlas(uuid) : arr[i]._name;
            obj[name] = arr[i];
          }
        }

        return obj;
      }

      function getAnimationsName(spine) {
        return Object.keys(spine.skeletonData._skeletonJson.animations);
      }
      /**
       * ! just using for the spine have a few animations
       */


      function setMixAllAnims(spine, mixTime) {
        if (mixTime === void 0) {
          mixTime = 0.15;
        }

        var animNames = getAnimationsName(spine);

        if (animNames.length < 2) {
          error("spine have to have many animations");
          return;
        }

        for (var i = 0; i < animNames.length; i++) {
          for (var j = 0; j < animNames.length; j++) {
            spine.setMix(animNames[i], animNames[j], mixTime);
          }
        }
      }

      function convertPayLineAllways(payLines, multiplier, betDenom) {
        if (payLines === void 0) {
          payLines = [];
        }

        if (multiplier === void 0) {
          multiplier = 1;
        }

        var listNewPL = [];

        for (var i = 0; i < payLines.length; i++) {
          if (payLines[i].includes(';')) {
            var dataSplit = payLines[i].split(';');

            if (dataSplit.length !== 0) {
              listNewPL.push({
                symbolId: dataSplit[0],
                totalWinAmount: dataSplit[1],
                symbolCount: dataSplit[2],
                combination: dataSplit[3],
                payableSymbol: dataSplit[4],
                betDenom: betDenom,
                multiplier: multiplier
              });
            } else {
              error("payLines is not right AKTV formatted");
            }
          }
        }

        return listNewPL;
      }

      function convertPayLine(payLines) {
        var listNewPL = [];

        for (var i = 0; i < payLines.length; i++) {
          var dataSplit = payLines[i].split(';');

          if (dataSplit.length >= 3) {
            listNewPL.push({
              payLineID: dataSplit[0],
              payLineWinNumbers: parseInt(dataSplit[1]),
              payLineWinAmount: dataSplit[2],
              payLineSymbol: dataSplit[3]
            });
          }
        }

        return listNewPL;
      }

      function formatWalletMoney(num, digits) {
        if (digits === void 0) {
          digits = 2;
        }

        if (isNaN(parseFloat(num))) return "0";
        var si = [{
          value: 1,
          symbol: ""
        }, {
          value: 1E3,
          symbol: "K"
        }, {
          value: 1E6,
          symbol: "M"
        }, {
          value: 1E9,
          symbol: "B"
        }, {
          value: 1E12,
          symbol: "T"
        }, {
          value: 1E15,
          symbol: "P"
        }, {
          value: 1E18,
          symbol: "E"
        }];
        var rx = /\.0+$|(\.[0-9]*[1-9])0+$/;
        var i;

        for (i = si.length - 1; i > 0; i--) {
          if (num >= si[i].value) {
            break;
          }
        }

        var result = toFixed(num / si[i].value, digits);

        if (UTIL_CONFIG.FORMAT_MONEY_EVENT) {
          result = result.replace('.', ',');
        }

        return result.replace(rx, "$1") + si[i].symbol;
      }

      function formatMoney(amount, decimalCount, decimal, thousands) {
        if (decimalCount === void 0) {
          decimalCount = 0;
        }

        if (decimal === void 0) {
          decimal = ".";
        }

        if (thousands === void 0) {
          thousands = ",";
        }

        if (UTIL_CONFIG.FORMAT_MONEY_EVENT) {
          decimal = ",";
          thousands = ".";
        }

        try {
          decimalCount = Math.abs(decimalCount);
          decimalCount = isNaN(decimalCount) ? 2 : decimalCount;
          var negativeSign = amount < 0 ? "-" : "";
          var i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
          var j = i.length > 3 ? i.length % 3 : 0;
          return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
        } catch (e) {
          error(e);
        }

        return "0";
      }

      function changeParent(node, newParent) {
        if (node.parent === newParent) return;

        var getWorldRotation = function getWorldRotation(node) {
          var currNode = node;
          var resultRot = currNode.angle || 0;

          do {
            currNode = currNode.parent;
            resultRot += currNode.angle || 0;
          } while (currNode.parent != null);

          resultRot = resultRot % 360;
          return resultRot;
        };

        var oldWorRot = getWorldRotation(node);
        var newParentWorRot = getWorldRotation(newParent);
        var newLocRot = oldWorRot - newParentWorRot;

        if (!node.getComponent(UITransform)) {
          node.addComponent(UITransform);
        }

        if (!newParent.getComponent(UITransform)) {
          newParent.addComponent(UITransform);
        }

        var oldWorPos = node.getComponent(UITransform).convertToWorldSpaceAR(new Vec3(0, 0, 0));
        var newLocPos = newParent.getComponent(UITransform).convertToNodeSpaceAR(oldWorPos);
        node.parent = newParent;
        node.position = newLocPos;
        node.angle = newLocRot;
      }

      function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min + 1)) + min;
      }

      function roundDecimal(num, numDecimal) {
        var rate = 1;

        for (var i = 0; i < numDecimal; i++) {
          rate *= 10;
        }

        return Math.round((num + Number.EPSILON) * rate) / rate;
      }

      function shuffleArray(array) {
        for (var i = array.length - 1; i > 0; i--) {
          var j = Math.floor(Math.random() * (i + 1));
          var temp = array[i];
          array[i] = array[j];
          array[j] = temp;
        }

        return array;
      }

      function getRandomElement(array) {
        if (!array || array.length <= 0) throw new Error("invalid array");
        return array[Math.floor(Math.random() * array.length)];
      }

      function pickOutRandomElement(array) {
        if (!array || array.length <= 0) throw new Error("invalid array");
        var randomIndex = Math.floor(Math.random() * array.length);
        return array.splice(randomIndex, 1)[0];
      }

      function removeElementByValue(array, value) {
        array.splice(array.indexOf(value), 1);
        return array;
      }

      function replaceElement(array, oldElement, newElement) {
        var index = array.indexOf(oldElement);
        if (index > -1) array[index] = newElement;
        return array;
      }

      function getText(text, length) {
        if (text === void 0) {
          text = '';
        }

        if (length === void 0) {
          length = 0;
        }

        var result = text;
        var n = length - text.length;

        if (n) {
          for (var i = 0; i < n; i++) {
            result += ' ';
          }
        }

        return result;
      }

      function getLeftTime(endTime, serverTime, millisecond) {
        if (millisecond === void 0) {
          millisecond = 1000;
        }

        serverTime = serverTime ? new Date(serverTime).getTime() : new Date().getTime();
        var time = Math.floor((new Date(endTime).getTime() - serverTime) / millisecond);
        if (time < 0) time = 0;
        return time;
      }

      function addZero(i) {
        if (i < 10) {
          i = '0' + i;
        }

        return i;
      }

      function getTime() {
        var d = new Date();
        var h = addZero(d.getHours());
        var m = addZero(d.getMinutes());
        var s = addZero(d.getSeconds());
        var t = h + ':' + m + ':' + s;
        return t;
      }

      function mapObjectKey(obj, keysMap) {
        return lodash.transform(obj, function (result, value, key) {
          var currentKey = key;

          if (keysMap[key]) {
            currentKey = keysMap[key].name;
            if (keysMap[key].type == Boolean) value = value == 'T';
          }

          if (lodash.isObject(value)) {
            result[currentKey] = mapObjectKey(value, keysMap);
          } else {
            result[currentKey] = value;
          }
        });
      }

      function fadeTo(target, duration, opacity, options) {
        var render2D = target.getComponent(UIRenderer);
        options = options || {};

        if (target['tweenFade']) {
          target['tweenFade'].stop();
          target['tweenFade'] = null;
        }

        var tweenFade = null;

        if (render2D) {
          var obj = {
            alpha: render2D.color.a
          };

          options.onUpdate = function () {
            if (render2D && render2D.color) {
              setRenderColor(render2D, obj.alpha);
            }
          };

          tweenFade = tween(obj).to(duration, {
            alpha: opacity
          }, options).call(function () {
            if (target) {
              target['tweenFade'] = null;
            }
          }).start();
          target['tweenFade'] = tweenFade;
        } else {
          var uiOpacity = target.getComponent(UIOpacity);

          if (uiOpacity === null) {
            uiOpacity = target.addComponent(UIOpacity);
          }

          tweenFade = tween(uiOpacity);
          target['tweenFade'] = tweenFade;
          tweenFade.to(duration, {
            opacity: opacity
          }, options).call(function () {
            target['tweenFade'] = null;
          }).start();
        }

        return tweenFade;
      }

      function fadeIn(target, duration, options) {
        return fadeTo(target, duration, 255, options);
      }

      function fadeOut(target, duration, options) {
        return fadeTo(target, duration, 0, options);
      }

      function getOpacity(node) {
        var uiOpacity = node.getComponent(UIOpacity);
        if (uiOpacity === null) uiOpacity = node.addComponent(UIOpacity);
        return uiOpacity.opacity;
      }

      function setOpacity(node, opacity) {
        var render2D = node.getComponent(UIRenderer);
        var uiOpacity = node.getComponent(UIOpacity);

        if (render2D) {
          if (uiOpacity) {
            uiOpacity.opacity = 255;
          }

          setRenderColor(render2D, opacity);
        } else {
          if (uiOpacity === null) {
            uiOpacity = node.addComponent(UIOpacity);
          }

          uiOpacity.opacity = opacity;
        }
      }

      function setRenderColor(render, alpha) {
        var color = Color.clone(render.color);
        color.a = alpha;
        render.color = color;
      }

      function tweenMoney(label, duration, endValue, options) {
        if (label["_tweenMoney"]) label["_tweenMoney"].stop(); // stop if on tween;

        var currentVal = parseInt(label.string.replace(/[,.]/g, "")) || 0;
        var _target = {
          value: currentVal
        };
        options = options || {};

        options.onUpdate = function () {
          label.string = formatMoney(Math.round(_target.value));
        };

        var tweenMoney = tween(_target).to(duration, {
          value: endValue
        }, options).call(function () {
          label.string = formatMoney(endValue);
          label["_tweenMoney"] = null;
        }).start();
        label["_tweenMoney"] = tweenMoney;
        return tweenMoney;
      } //for slot event only


      function tweenMoney2(label, duration, endValue, options) {
        if (label["_tweenMoney"]) label["_tweenMoney"].stop(); // stop if on tween;

        var currentVal = parseInt(label.string.replace(/[,.]/g, "")) || 0;
        var _target = {
          value: currentVal
        };
        options = options || {};

        options.onUpdate = function () {
          label.string = formatMoney(Math.round(_target.value), 0, ',', '.');
        };

        var tweenMoney = tween(_target).to(duration, {
          value: endValue
        }, options).call(function () {
          label.string = formatMoney(endValue, 0, ',', '.');
          label["_tweenMoney"] = null;
        }).start();
        label["_tweenMoney"] = tweenMoney;
        return tweenMoney;
      }

      function tweenWalletMoney(label, duration, startValue, endValue, options) {
        if (label["tweenWalletMoney"]) label["tweenWalletMoney"].stop(); // stop if on tween;

        var currentVal = startValue || 0;
        var _target = {
          value: currentVal
        };
        options = options || {};

        options.onUpdate = function () {
          label.string = formatWalletMoney(Math.round(_target.value));
        };

        var tweenWalletMoney = tween(_target).to(duration, {
          value: endValue
        }, options).call(function () {
          label.string = formatWalletMoney(endValue);
          label["tweenWalletMoney"] = null;
        }).start();
        label["tweenWalletMoney"] = tweenWalletMoney;
        return tweenWalletMoney;
      }

      function tweenBezier2DTo(target, duration, c1, c2, to, opts) {
        if (target['bezierX']) target['bezierX'].stop();
        if (target['bezierY']) target['bezierY'].stop();
        var c0x = c1.x,
            c0y = c1.y,
            c1x = c2.x,
            c1y = c2.y;
        var _targetX = {
          value: target.getPosition().x
        };
        var _targetY = {
          value: target.getPosition().y
        };
        var aOpts = opts || Object.create(null);

        aOpts.progress = function (startX, endX, currentX, t) {
          currentX = bezier(startX, c0x, c1x, endX, t);
          return currentX;
        };

        aOpts.onUpdate = function () {
          if (target && target.position) {
            target.setPosition(new Vec3(_targetX.value, target.position.y, target.position.z));
          }
        };

        var bOpts = opts || Object.create(null);

        bOpts.progress = function (startY, endY, currentY, t) {
          currentY = bezier(startY, c0y, c1y, endY, t);
          return currentY;
        };

        bOpts.onUpdate = function () {
          if (target && target.position) {
            target.setPosition(new Vec3(target.position.x, _targetY.value, target.position.z));
          }
        };

        target['bezierX'] = tween(_targetX).to(duration, {
          value: to.x
        }, aOpts).call(function () {
          target['bezierX'] = null;
        }).start();
        target['bezierY'] = tween(_targetY).to(duration, {
          value: to.y
        }, bOpts).call(function () {
          target['bezierY'] = null;
        }).start();
      }

      function startGameFromEvent(gameId) {
        director.loadScene("MultiSlot", function () {
          var multiSlotComp = director.getScene().getChildByName('Canvas').getChildByName('MultiSlot');

          if (multiSlotComp) {
            var config = {
              gameId: gameId,
              startScene: "g" + gameId
            };
            multiSlotComp.emit('RQ_PLAY_FROM_EVENT', {
              config: config
            });
          }
        });
      }

      function removeDuplicates(array) {
        return array.filter(function (item, index) {
          return array.indexOf(item) === index;
        });
      }
      /**
       * @returns degree angle
      */


      function getAngleTwoPoint(p1, p2) {
        return Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;
      }

      function getDistance(p1, p2) {
        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));
      }

      function shaking(node, _ref) {
        var _ref$duration = _ref.duration,
            duration = _ref$duration === void 0 ? 0.16 : _ref$duration,
            _ref$distance = _ref.distance,
            distance = _ref$distance === void 0 ? 10 : _ref$distance,
            _ref$repeat = _ref.repeat,
            repeat = _ref$repeat === void 0 ? 1 : _ref$repeat;
        var dur = duration / 8;
        var shake = tween().by(dur, {
          position: v3(0, distance)
        }).by(dur, {
          position: v3(0, -distance)
        }).by(dur, {
          position: v3(0, -distance)
        }).by(dur, {
          position: v3(0, distance)
        }).by(dur, {
          position: v3(distance, 0)
        }).by(dur, {
          position: v3(-distance, 0)
        }).by(dur, {
          position: v3(-distance, 0)
        }).by(dur, {
          position: v3(distance, 0)
        });
        var tweenShake = tween(node).repeat(repeat, shake).start();
        return tweenShake;
      }

      function MD5(e) {
        function h(a, b) {
          var c, d, e, f, g;
          e = a & 2147483648;
          f = b & 2147483648;
          c = a & 1073741824;
          d = b & 1073741824;
          g = (a & 1073741823) + (b & 1073741823);
          return c & d ? g ^ 2147483648 ^ e ^ f : c | d ? g & 1073741824 ? g ^ 3221225472 ^ e ^ f : g ^ 1073741824 ^ e ^ f : g ^ e ^ f;
        }

        function k(a, b, c, d, e, f, g) {
          a = h(a, h(h(b & c | ~b & d, e), g));
          return h(a << f | a >>> 32 - f, b);
        }

        function l(a, b, c, d, e, f, g) {
          a = h(a, h(h(b & d | c & ~d, e), g));
          return h(a << f | a >>> 32 - f, b);
        }

        function m(a, b, d, c, e, f, g) {
          a = h(a, h(h(b ^ d ^ c, e), g));
          return h(a << f | a >>> 32 - f, b);
        }

        function n(a, b, d, c, e, f, g) {
          a = h(a, h(h(d ^ (b | ~c), e), g));
          return h(a << f | a >>> 32 - f, b);
        }

        function p(a) {
          var b = "",
              d = "",
              c;

          for (c = 0; 3 >= c; c++) d = (a >>> 8 * c & 255).toString(), d = "0" + parseInt(d).toString(16), b += d.substr(d.length - 2, 2);

          return b;
        }

        var f = [],
            q,
            r,
            s,
            t,
            a,
            b,
            c,
            d;

        e = function (a) {
          a = a.replace(/\r\n/g, "\n");

          for (var b = "", d = 0; d < a.length; d++) {
            var c = a.charCodeAt(d);
            128 > c ? b += String.fromCharCode(c) : (127 < c && 2048 > c ? b += String.fromCharCode(c >> 6 | 192) : (b += String.fromCharCode(c >> 12 | 224), b += String.fromCharCode(c >> 6 & 63 | 128)), b += String.fromCharCode(c & 63 | 128));
          }

          return b;
        }(e);

        f = function (b) {
          var a,
              c = b.length;
          a = c + 8;

          for (var d = 16 * ((a - a % 64) / 64 + 1), e = Array(d - 1), f = 0, g = 0; g < c;) a = (g - g % 4) / 4, f = g % 4 * 8, e[a] |= b.charCodeAt(g) << f, g++;

          a = (g - g % 4) / 4;
          e[a] |= 128 << g % 4 * 8;
          e[d - 2] = c << 3;
          e[d - 1] = c >>> 29;
          return e;
        }(e);

        a = 1732584193;
        b = 4023233417;
        c = 2562383102;
        d = 271733878;

        for (e = 0; e < f.length; e += 16) q = a, r = b, s = c, t = d, a = k(a, b, c, d, f[e + 0], 7, 3614090360), d = k(d, a, b, c, f[e + 1], 12, 3905402710), c = k(c, d, a, b, f[e + 2], 17, 606105819), b = k(b, c, d, a, f[e + 3], 22, 3250441966), a = k(a, b, c, d, f[e + 4], 7, 4118548399), d = k(d, a, b, c, f[e + 5], 12, 1200080426), c = k(c, d, a, b, f[e + 6], 17, 2821735955), b = k(b, c, d, a, f[e + 7], 22, 4249261313), a = k(a, b, c, d, f[e + 8], 7, 1770035416), d = k(d, a, b, c, f[e + 9], 12, 2336552879), c = k(c, d, a, b, f[e + 10], 17, 4294925233), b = k(b, c, d, a, f[e + 11], 22, 2304563134), a = k(a, b, c, d, f[e + 12], 7, 1804603682), d = k(d, a, b, c, f[e + 13], 12, 4254626195), c = k(c, d, a, b, f[e + 14], 17, 2792965006), b = k(b, c, d, a, f[e + 15], 22, 1236535329), a = l(a, b, c, d, f[e + 1], 5, 4129170786), d = l(d, a, b, c, f[e + 6], 9, 3225465664), c = l(c, d, a, b, f[e + 11], 14, 643717713), b = l(b, c, d, a, f[e + 0], 20, 3921069994), a = l(a, b, c, d, f[e + 5], 5, 3593408605), d = l(d, a, b, c, f[e + 10], 9, 38016083), c = l(c, d, a, b, f[e + 15], 14, 3634488961), b = l(b, c, d, a, f[e + 4], 20, 3889429448), a = l(a, b, c, d, f[e + 9], 5, 568446438), d = l(d, a, b, c, f[e + 14], 9, 3275163606), c = l(c, d, a, b, f[e + 3], 14, 4107603335), b = l(b, c, d, a, f[e + 8], 20, 1163531501), a = l(a, b, c, d, f[e + 13], 5, 2850285829), d = l(d, a, b, c, f[e + 2], 9, 4243563512), c = l(c, d, a, b, f[e + 7], 14, 1735328473), b = l(b, c, d, a, f[e + 12], 20, 2368359562), a = m(a, b, c, d, f[e + 5], 4, 4294588738), d = m(d, a, b, c, f[e + 8], 11, 2272392833), c = m(c, d, a, b, f[e + 11], 16, 1839030562), b = m(b, c, d, a, f[e + 14], 23, 4259657740), a = m(a, b, c, d, f[e + 1], 4, 2763975236), d = m(d, a, b, c, f[e + 4], 11, 1272893353), c = m(c, d, a, b, f[e + 7], 16, 4139469664), b = m(b, c, d, a, f[e + 10], 23, 3200236656), a = m(a, b, c, d, f[e + 13], 4, 681279174), d = m(d, a, b, c, f[e + 0], 11, 3936430074), c = m(c, d, a, b, f[e + 3], 16, 3572445317), b = m(b, c, d, a, f[e + 6], 23, 76029189), a = m(a, b, c, d, f[e + 9], 4, 3654602809), d = m(d, a, b, c, f[e + 12], 11, 3873151461), c = m(c, d, a, b, f[e + 15], 16, 530742520), b = m(b, c, d, a, f[e + 2], 23, 3299628645), a = n(a, b, c, d, f[e + 0], 6, 4096336452), d = n(d, a, b, c, f[e + 7], 10, 1126891415), c = n(c, d, a, b, f[e + 14], 15, 2878612391), b = n(b, c, d, a, f[e + 5], 21, 4237533241), a = n(a, b, c, d, f[e + 12], 6, 1700485571), d = n(d, a, b, c, f[e + 3], 10, 2399980690), c = n(c, d, a, b, f[e + 10], 15, 4293915773), b = n(b, c, d, a, f[e + 1], 21, 2240044497), a = n(a, b, c, d, f[e + 8], 6, 1873313359), d = n(d, a, b, c, f[e + 15], 10, 4264355552), c = n(c, d, a, b, f[e + 6], 15, 2734768916), b = n(b, c, d, a, f[e + 13], 21, 1309151649), a = n(a, b, c, d, f[e + 4], 6, 4149444226), d = n(d, a, b, c, f[e + 11], 10, 3174756917), c = n(c, d, a, b, f[e + 2], 15, 718787259), b = n(b, c, d, a, f[e + 9], 21, 3951481745), a = h(a, q), b = h(b, r), c = h(c, s), d = h(d, t);

        return (p(a) + p(b) + p(c) + p(d)).toLowerCase();
      }

      function getFBAvatar(url, spriteA, defaultAvatar, AvatarAtlas) {
        var dirpath = jsb.fileUtils.getWritablePath() + 'avaImg/';
        var filepath = dirpath + MD5(url) + '.png';

        function loadEnd() {
          assetManager.loadAny({
            url: filepath
          }, function (err, tex) {
            if (err) {
              warn(err);
              spriteA.spriteFrame = defaultAvatar;
            } else {
              var spriteFrame = new SpriteFrame();
              spriteFrame.texture = tex;

              if (spriteFrame) {
                spriteA.spriteFrame = spriteFrame;
              }
            }
          });
        }

        if (sys.os === sys.OS_ANDROID && sys.isNative) {
          if (jsb.fileUtils.isFileExist(filepath)) {
            //remove old file
            jsb.fileUtils.removeFile(filepath);
          }
        }

        var saveFile = function saveFile(data) {
          if (typeof data !== 'undefined') {
            if (!jsb.fileUtils.isDirectoryExist(dirpath)) {
              jsb.fileUtils.createDirectory(dirpath);
            }

            if (jsb.fileUtils.writeValueMapToFile(new Uint8Array(data), filepath)) {
              warn('Remote write file succeed.');
              loadEnd();
            } else {
              spriteA.spriteFrame = defaultAvatar;
              warn('Remote write file failed.');
            }
          } else {
            spriteA.spriteFrame = defaultAvatar;
            warn('Remote download file failed.');
          }
        };

        if (sys.os === sys.OS_IOS && sys.isNative) {
          if (url.indexOf("facebook") !== -1) {
            if (jsb.fileUtils.isFileExist(filepath)) {
              loadEnd();
            }

            var xhr = new XMLHttpRequest();
            xhr.responseType = 'arraybuffer';

            xhr.onreadystatechange = function () {
              log("xhr.readyState  " + xhr.readyState);
              log("xhr.status  " + xhr.status);

              if (xhr.readyState === 4) {
                if (xhr.status === 200) {
                  saveFile(xhr.response);
                }
              }
            }.bind(this);

            xhr.open("GET", url, true);
            xhr.send();
          } else {
            var spFrame = defaultAvatar;

            if (url) {
              var filename = url.substring(url.lastIndexOf('/') + 1);

              if (filename.match(/avatar_[0-9][0-9].png/)) {
                var num = filename.substring(7, 8);
                var spInt = parseInt(num);

                if (spInt >= 0 && spInt <= 32) {
                  spFrame = filename.split('.')[0];
                } else {
                  spFrame = defaultAvatar;
                }
              } else {
                spFrame = defaultAvatar;
              }
            }

            spriteA.spriteFrame = AvatarAtlas.getSpriteFrame(spFrame);
          }
        } else {
          var _xhr = new XMLHttpRequest();

          _xhr.responseType = 'arraybuffer';

          _xhr.onreadystatechange = function () {
            log("xhr.readyState  " + _xhr.readyState);
            log("xhr.status  " + _xhr.status);

            if (_xhr.readyState === 4) {
              if (_xhr.status === 200) {
                saveFile(_xhr.response);
              } else {
                saveFile(null);
              }
            }
          }.bind(this);

          _xhr.open("GET", url, true);

          _xhr.send();
        }
      }

      function loadAvatarFacebook(avatarSprite, ava, atlas, prefix, leadingZeroLength, avatarDefault) {
        if (prefix === void 0) {
          prefix = 'avatar_';
        }

        if (leadingZeroLength === void 0) {
          leadingZeroLength = 0;
        }

        if (avatarDefault === void 0) {
          avatarDefault = 'avatar_01';
        }

        if (!avatarSprite || !avatarSprite.node) return;
        var defaultAvatar = atlas.getSpriteFrame(avatarDefault);
        if (!defaultAvatar) return;

        var _sframe = decodeURIComponent(ava);

        if ((ava + '').indexOf('avatar_') > -1) {
          _sframe = ava || avatarDefault;
        } else {
          if (!isNaN(ava)) {
            ava = Number.parseInt(ava);
          }

          if (lodash.isNumber(ava)) {
            // avatar start from 1
            ava += 1;

            if (leadingZeroLength > 0) {
              var zeroPad = function zeroPad(num, places) {
                return String(num).padStart(places, '0');
              };

              ava = zeroPad(ava, leadingZeroLength);
            }

            _sframe = prefix + ava;
          }
        }

        if (_sframe.indexOf('avatar_') > -1 && _sframe.indexOf("facebook") === -1 && _sframe.indexOf("http") > -1) {
          var avaId = _sframe.split('avatar_');

          var frame = defaultAvatar;

          if (avaId[1]) {
            frame = atlas.getSpriteFrame('avatar_' + avaId[1].replace('.png', ''));
          }

          frame = frame ? frame : defaultAvatar;
          avatarSprite.spriteFrame = frame;
          return false;
        } else if (_sframe.indexOf("http") === -1) {
          var _frame = atlas.getSpriteFrame(_sframe);

          _frame = _frame ? _frame : defaultAvatar;
          avatarSprite.spriteFrame = _frame;
          return false;
        } // else if(cc.sys.isNative){
        //     getFBAvatar(_sframe, avatarSprite, defaultAvatar, atlas);
        // } 
        else {
            if (_sframe.indexOf("facebook") !== -1) {
              _sframe = _sframe.replace("http://", "https://");
            }

            assetManager.loadRemote(decodeURIComponent(ava), {
              ext: 'png'
            }, function (err, imageRes) {
              if (!avatarSprite || !avatarSprite.node) return;

              if (err) {
                avatarSprite.spriteFrame = defaultAvatar;
              } else if (imageRes instanceof Texture2D) {
                var spriteFrame = new SpriteFrame();
                spriteFrame.texture = imageRes;

                if (avatarSprite && avatarSprite.node && avatarSprite.node.getComponent) {
                  var com = avatarSprite.node.getComponent(Sprite);

                  if (!com || isValid(com, true) == false) {
                    com = avatarSprite.node.addComponent(Sprite);
                  }

                  com.spriteFrame = new SpriteFrame();
                  com.spriteFrame.texture = spriteFrame.texture;
                }
              } else {
                avatarSprite.spriteFrame = defaultAvatar;
              }
            });
            return true;
          }
      }

      function setLayerForAllChildrens(target, layer) {
        target.walk(function (it) {
          it.layer = layer;
          it.off(Node.EventType.CHILD_ADDED);
          it.on(Node.EventType.CHILD_ADDED, function (child) {
            setLayerForAllChildrens(child, child.parent.layer);
          });
        }, function () {});
      }

      function setLayerAlls(target, layer) {
        target.walk(function (it) {
          it.layer = layer;
        }, function () {});
      }

      function setIndexZ(node, zIndex) {
        if (!node || !node.parent) return;
        var copySiblings = node.parent.children.slice();
        node['customIndexZ'] = zIndex;
        copySiblings.sort(function (a, b) {
          return (a['customIndexZ'] || 0) - (b['customIndexZ'] || 0);
        });

        for (var index = copySiblings.length - 1; index >= 0; index--) {
          var child = copySiblings[index];

          if (child.getSiblingIndex() !== index) {
            child.setSiblingIndex(index);
          }
        }
      }

      function registerLoadHowl() {
        if (globalThis.Howler) {
          assetManager.downloader['_downloaders']['.mp3cache'] = assetManager.downloader['_downloaders']['.mp3'];

          assetManager.downloader['_downloaders']['.mp3'] = function (url, options, onComplete) {
            var howl = new globalThis.Howl({
              src: [url],
              preload: true
            });
            howl.once('load', function () {
              onComplete(null, howl);
            });
            howl.once('loaderror', function () {
              onComplete(new Error("Fail to load sound " + url), howl);
            });
          };
        }
      }

      function unregisterLoadHowl() {
        var cacheLoader = assetManager.downloader['_downloaders']['.mp3cache'];

        if (cacheLoader) {
          assetManager.downloader['_downloaders']['.mp3'] = cacheLoader;
        }
      }

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/WebSoundPlayer.ts", ['cc'], function (exports) {
  var cclegacy, _decorator, AudioClip, warn, log, game, tween;

  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
      _decorator = module._decorator;
      AudioClip = module.AudioClip;
      warn = module.warn;
      log = module.log;
      game = module.game;
      tween = module.tween;
    }],
    execute: function () {
      var _dec, _class;

      cclegacy._RF.push({}, "665a6jOt8tNUoF71xXbg++z", "WebSoundPlayer", undefined);

      var ccclass = _decorator.ccclass,
          property = _decorator.property;
      var WebSoundPlayer = exports('WebSoundPlayer', (_dec = ccclass('WebSoundPlayer'), _dec(_class = /*#__PURE__*/function () {
        function WebSoundPlayer() {
          this.musicMap = {};
          this.sfxMap = {};
          this.currentMusic = null;
          this._musicTween = null;
          this._sfxList = [];
          this.loadedSoundMap = {};
          this.musicInstance = null;
          this.sfxCachedOnHide = [];
          this.sfxCacheGesture = [];
          this.howlMap = {};
          this.totalSound = 0;
          this.onWebSoundLoaded = null;
          this._hasAudioContext = false;
          this._isMusicPlaying = false;
          this._gamePaused = false;
          this._soundLoaded = [];
          this._isThumbMode = false;
          this._playedInitMusic = false;
        }

        var _proto = WebSoundPlayer.prototype;

        _proto.init = function init() {} //merge more sound from dynamic loading
        ;

        _proto.loadDynamicSounds = function loadDynamicSounds(sfxList, callback) {
          this.loadSfxList(sfxList, callback);
        };

        _proto.loadMusicList = function loadMusicList(list, callback) {
          var _this = this;

          list.forEach(function (soundObj) {
            _this.musicMap[soundObj.soundId] = soundObj;
          });
          this.loadSoundList(list, callback);
        };

        _proto.loadSfxList = function loadSfxList(list, callback) {
          var _this2 = this;

          this._sfxList = this._sfxList.concat(list);
          list.forEach(function (soundObj) {
            _this2.sfxMap[soundObj.soundId] = soundObj;
          });
          this.loadSoundList(list, callback);
        };

        _proto.setThumbMode = function setThumbMode(isThumbMode) {
          this._isThumbMode = isThumbMode;
        };

        _proto.loadSoundList = function loadSoundList(soundList, callback) {
          var _this3 = this;

          var soundInfos = [];
          var loadTasks = [];
          this.loadedSoundMap = {};
          soundList.forEach(function (soundObj) {
            var clip = soundObj.audioFile;

            if (clip._nativeAsset instanceof globalThis.Howl) {
              _this3.howlMap[clip._uuid] = clip._nativeAsset;

              _this3._soundLoaded.push(clip._uuid);
            } else if (clip instanceof AudioClip) {
              soundInfos.push({
                uuid: clip._uuid,
                name: clip.name,
                src: clip['_meta'].url
              });
              _this3.loadedSoundMap[clip.name] = false;
            }
          });
          soundInfos.forEach(function (info) {
            if (_this3._soundLoaded.indexOf(info.uuid) < 0) {
              var task = new Promise(function (resolve, reject) {
                var howl = new globalThis.Howl({
                  src: [info.src],
                  preload: true
                });
                howl.once('load', function () {
                  _this3.howlMap[info.uuid] = howl;
                  resolve(true);
                });
                howl.once('loaderror', function () {
                  reject();
                });
              });
              loadTasks.push(task);

              _this3._soundLoaded.push(info.uuid);
            } else {
              warn('theres duplicated sound in list');
            }
          });
          Promise.all(loadTasks).then(function () {
            callback && callback();
          });
        };

        _proto.skipGesture = function skipGesture() {
          this._hasAudioContext = true;
        };

        _proto.resumeWithGesture = function resumeWithGesture() {
          this._hasAudioContext = true;

          if (this.musicInstance) {
            this.musicInstance.stop();

            if (this._isMusicPlaying) {
              this.musicInstance.play();
            }
          }

          this.sfxCacheGesture.forEach(function (sound) {
            var position = (Date.now() - sound.startTime) / 1000;
            var clip = sound.clip;

            if (sound.loop === true) {
              position = position % clip.duration();
            }

            if (position < clip.duration()) {
              clip.volume(sound.volume);
              clip.loop(sound.loop);
              var id = clip.play();
              clip.seek(position, id);
              log("[WebSoundPlayer] play resume sound " + sound.name);
            }
          });
          this.sfxCacheGesture = [];
        };

        _proto.onEventHide = function onEventHide() {
          this._gamePaused = true;
          if (!this._hasAudioContext) return;
          this.pauseMusic();
          this.pauseEffects();
        };

        _proto.onEventShow = function onEventShow() {
          var _this4 = this;

          if (!this._hasAudioContext || !this._gamePaused) return;
          var hasMusicPlay = this._playedInitMusic;
          this.resumeContext().then(function () {
            if (hasMusicPlay) {
              _this4.resumeMusic();
            }

            _this4.resumeEffects();
          });
          this._gamePaused = false;
        };

        _proto.playMusic = function playMusic(id, loop, volume) {
          if (loop === void 0) {
            loop = true;
          }

          var oldMusic = this.musicInstance;
          this._isMusicPlaying = true;
          this.currentMusic = this.musicMap[id];
          this.musicInstance = this.currentMusic ? this.howlMap[this.currentMusic.audioFile._uuid] : null;
          if (!this.musicInstance) return warn("[WebSoundPlayer] invalid Music:", id);
          if (this.musicInstance === oldMusic && this.musicInstance.playing()) return log("[WebSoundPlayer] duplicate play music " + id);

          if (oldMusic && oldMusic.playing()) {
            oldMusic.stop();
          }

          this.musicInstance.loop(loop);
          this.musicInstance.volume(volume);

          if (this._hasAudioContext && !game.isPaused()) {
            this.musicInstance.play();
          }

          this._playedInitMusic = true;
          log("[WebSoundPlayer] play music " + id);
        };

        _proto.getCurrentMusic = function getCurrentMusic() {
          return this.musicInstance;
        };

        _proto.pauseMusic = function pauseMusic() {
          if (this.musicInstance && this.musicInstance.playing()) {
            this.musicInstance.pause();
          }
        };

        _proto.resumeMusic = function resumeMusic() {
          if (this.musicInstance && this._isMusicPlaying) {
            this.musicInstance.play();
          }
        };

        _proto.stopMusic = function stopMusic() {
          log("[WebSoundPlayer] stop music");
          this._isMusicPlaying = false;

          if (this.musicInstance && this.musicInstance.playing()) {
            this.musicInstance.stop();
          }
        };

        _proto.muteMusic = function muteMusic() {
          if (this.musicInstance) {
            this.musicInstance.volume(0);
          }
        };

        _proto.unmuteMusic = function unmuteMusic(volume) {
          if (volume === void 0) {
            volume = 1;
          }

          if (this.musicInstance) {
            this.musicInstance.volume(volume);
          }
        };

        _proto.setMusicVolume = function setMusicVolume(volume) {
          if (this.musicInstance) {
            this.musicInstance.volume(volume);
          }
        };

        _proto.playSfx = function playSfx(sfx, loop, volume) {
          if (loop === void 0) {
            loop = false;
          }

          var soundObj = this.sfxMap[sfx];

          if (!soundObj) {
            warn("playSfx: invalid sfx", sfx);
            return null;
          }

          var clip = this.howlMap[soundObj.audioFile._uuid];

          if (clip) {
            if (this._hasAudioContext) {
              if (clip.playing()) {
                clip.stop();
              }

              clip.loop(loop);
              clip.volume(volume);
              clip.play();

              if (this._gamePaused) {
                clip.pause();
              }
            } else {
              this.sfxCacheGesture.push({
                name: sfx,
                clip: clip,
                startTime: Date.now(),
                volume: volume,
                loop: loop
              });
            }

            return {
              clip: clip
            };
          }
        };

        _proto.resumeContext = function resumeContext() {
          var Howler = globalThis.Howler;
          return Howler.ctx.suspend().then(function () {
            return Howler.ctx.resume();
          });
        };

        _proto.playSfxOneShot = function playSfxOneShot(sfx, volume, loop) {
          if (loop === void 0) {
            loop = false;
          }

          if (!this.sfxMap.hasOwnProperty(sfx)) return warn("playSfxOneShot: invalid sfx", sfx);
          var soundObj = this.sfxMap[sfx];
          var clip = this.howlMap[soundObj.audioFile._uuid];
          if (!clip) return warn("playSfxOneShot: invalid howl", soundObj);
          var id;

          if (this._hasAudioContext) {
            clip.volume(volume);
            id = clip.play();
            clip.loop(loop, id);
            this._gamePaused && clip.pause(id);
          } else {
            this.sfxCacheGesture.push({
              name: sfx,
              clip: clip,
              startTime: Date.now(),
              volume: volume,
              loop: loop
            });
          }

          return {
            clip: clip,
            id: id
          };
        };

        _proto.stopSfxOneShot = function stopSfxOneShot(sfxData) {
          if (!sfxData) return warn("stopSfxOneShot invalid data", sfxData);
          var clip = sfxData.clip,
              id = sfxData.id;
          clip && clip.stop(id);

          this._removeClipFromGestureList(clip);
        };

        _proto.stopSfx = function stopSfx(sfx) {
          var soundObj = this.sfxMap[sfx];

          if (soundObj) {
            var clip = this.howlMap[soundObj.audioFile._uuid];

            if (clip) {
              if (clip.playing()) {
                clip.stop();
              } else {
                log(sfx + " is not playing");
              }

              this._removeClipFromGestureList(clip);
            }
          }
        };

        _proto.stopAllEffects = function stopAllEffects() {
          var _this5 = this;

          this._sfxList.forEach(function (sfx) {
            _this5.stopSfx(sfx.soundId);
          });
        };

        _proto.pauseEffects = function pauseEffects() {
          var _this6 = this;

          this._sfxList.forEach(function (it) {
            var clip = _this6.howlMap[it.audioFile._uuid];

            if (clip && clip.playing()) {
              clip.pause();

              _this6.sfxCachedOnHide.push(clip);
            }
          });
        };

        _proto.resumeEffects = function resumeEffects() {
          this.sfxCachedOnHide.forEach(function (it) {
            it.play();
          });
          this.sfxCachedOnHide = [];
        };

        _proto.resumeEffect = function resumeEffect(sfx) {
          var soundObj = this.sfxMap[sfx];
          var clip = this.howlMap[soundObj.audioFile._uuid];

          if (clip && clip.playing()) {
            clip.play();
          }
        };

        _proto.setEffectVolume = function setEffectVolume(volume, immediate) {
          var _this7 = this;

          this._sfxList.forEach(function (sfx) {
            _this7._setSfxVolume(sfx.soundId, volume);
          });
        };

        _proto.fadeMusicTo = function fadeMusicTo(duration, volume) {
          if (this.musicInstance) {
            var currentVolume = this.musicInstance.volume();
            duration *= 1000;

            if (this.musicInstance.playing()) {
              this.musicInstance.fade(currentVolume, volume, duration);
            } else {
              this.musicInstance.volume(volume);
            }
          }
        };

        _proto.fadeSoundTo = function fadeSoundTo(sfx, duration, volume) {
          if (this.sfxMap.hasOwnProperty(sfx)) {
            var soundObj = this.sfxMap[sfx];
            var clip = this.howlMap[soundObj.audioFile._uuid];
            var currentVolume = clip.volume();
            duration *= 1000;

            if (clip.playing()) {
              clip.fade(currentVolume, volume, duration);
            } else {
              clip.volume(volume);
            }
          }
        };

        _proto.stopAllAudio = function stopAllAudio() {
          this.stopAllEffects();
          this.stopMusic();
        };

        _proto.playHowl = function playHowl(howl, options, id) {
          if (id === void 0) {
            id = -1;
          }

          if (options.loop) howl.loop(options.loop);
          if (options.volume) howl.volume(options.volume);
          if (options.offset) howl.seek(options.offset);
          return id >= 0 ? howl.play(id) : howl.play();
        };

        _proto._setSfxVolume = function _setSfxVolume(sfx, volume) {
          var soundObj = this.sfxMap[sfx];

          if (soundObj) {
            var clip = this.howlMap[soundObj.audioFile._uuid];

            if (clip) {
              clip.volume(volume);
            }
          }
        };

        _proto._removeClipFromGestureList = function _removeClipFromGestureList(clip) {
          if (this.sfxCacheGesture && this.sfxCacheGesture.length > 0 && clip) {
            var index = this.sfxCacheGesture.findIndex(function (i) {
              return i.clip == clip;
            });
            index >= 0 && this.sfxCacheGesture.splice(index, 1);
          }
        };

        _proto.onDestroy = function onDestroy() {
          for (var i in this.howlMap) {
            this.howlMap[i].unload();
          }

          if (this._musicTween) {
            this._musicTween.stop();
          }

          this._soundLoaded = [];
        };

        _proto._testPlayMusic = function _testPlayMusic() {
          var _this8 = this;

          var musicId = "BGM_MAIN";
          tween(this).call(function () {
            _this8.stopMusic();
          }).delay(0.5).call(function () {
            _this8.playMusic(musicId, true);

            log(_this8.musicInstance.seek());
          }).delay(1).call(function () {
            _this8.playMusic(musicId, true);
          }).call(function () {
            if (Math.round(_this8.musicInstance.seek()) !== 1) {
              log("FAIL!");
            } else {
              log("passed");
            }
          }).start();
        };

        return WebSoundPlayer;
      }()) || _class));

      cclegacy._RF.pop();
    }
  };
});

System.register("chunks:///_virtual/XOCypher.ts", ['cc'], function (exports) {
  var cclegacy;
  return {
    setters: [function (module) {
      cclegacy = module.cclegacy;
    }],
    execute: function () {
      cclegacy._RF.push({}, "effd4CcclVCIblXmo9eBV5+", "XOCypher", undefined);

      var b64_table = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

      var XORCipher = /*#__PURE__*/function () {
        function XORCipher() {}

        var _proto = XORCipher.prototype;

        _proto.encode = function encode(key, data) {
          data = xor_encrypt(key, data);
          return b64_encode(data);
        };

        _proto.decode = function decode(key, data) {
          data = b64_decode(data);
          return xor_decrypt(key, data);
        };

        _proto.encode_new = function encode_new(key, data) {
          data = xor_encrypt_new(key, data);
          return b64_encode(data);
        };

        _proto.decode_new = function decode_new(key, data) {
          data = b64_decode(data);
          return xor_decrypt_new(key, data);
        };

        return XORCipher;
      }();

      function stringToUtf8ByteArray(str) {
        var out = [],
            p = 0;

        for (var i = 0; i < str.length; i++) {
          var c = str.charCodeAt(i);

          if (c < 128) {
            out[p++] = c;
          } else if (c < 2048) {
            out[p++] = c >> 6 | 192;
            out[p++] = c & 63 | 128;
          } else if ((c & 0xFC00) == 0xD800 && i + 1 < str.length && (str.charCodeAt(i + 1) & 0xFC00) == 0xDC00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF);
            out[p++] = c >> 18 | 240;
            out[p++] = c >> 12 & 63 | 128;
            out[p++] = c >> 6 & 63 | 128;
            out[p++] = c & 63 | 128;
          } else {
            out[p++] = c >> 12 | 224;
            out[p++] = c >> 6 & 63 | 128;
            out[p++] = c & 63 | 128;
          }
        }

        return out;
      }

      function utf8ByteArrayToString(bytes) {
        var out = [],
            pos = 0,
            c = 0;

        while (pos < bytes.length) {
          var c1 = bytes[pos++];

          if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
          } else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
          } else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var _c = bytes[pos++]; // eslint-disable-line

            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = ((c1 & 7) << 18 | (_c & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 0x10000;
            out[c++] = String.fromCharCode(0xD800 + (u >> 10));
            out[c++] = String.fromCharCode(0xDC00 + (u & 1023));
          } else {
            var _c2 = bytes[pos++]; // eslint-disable-line

            var _c3 = bytes[pos++]; // eslint-disable-line

            out[c++] = String.fromCharCode((c1 & 15) << 12 | (_c2 & 63) << 6 | _c3 & 63);
          }
        }

        return out.join('');
      }

      function b64_encode(data) {
        var o1,
            o2,
            o3,
            h1,
            h2,
            h3,
            h4,
            bits,
            r,
            i = 0,
            enc = "";

        if (!data) {
          return data;
        }

        do {
          o1 = data[i++];
          o2 = data[i++];
          o3 = data[i++];
          bits = o1 << 16 | o2 << 8 | o3;
          h1 = bits >> 18 & 0x3f;
          h2 = bits >> 12 & 0x3f;
          h3 = bits >> 6 & 0x3f;
          h4 = bits & 0x3f;
          enc += b64_table.charAt(h1) + b64_table.charAt(h2) + b64_table.charAt(h3) + b64_table.charAt(h4);
        } while (i < data.length);

        r = data.length % 3;
        return (r ? enc.slice(0, r - 3) : enc) + "===".slice(r || 3);
      }

      function b64_decode(data) {
        var o1,
            o2,
            o3,
            h1,
            h2,
            h3,
            h4,
            bits,
            i = 0,
            result = [];

        if (!data) {
          return data;
        }

        data += "";

        do {
          h1 = b64_table.indexOf(data.charAt(i++));
          h2 = b64_table.indexOf(data.charAt(i++));
          h3 = b64_table.indexOf(data.charAt(i++));
          h4 = b64_table.indexOf(data.charAt(i++));
          bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;
          o1 = bits >> 16 & 0xff;
          o2 = bits >> 8 & 0xff;
          o3 = bits & 0xff;
          result.push(o1);

          if (h3 !== 64) {
            result.push(o2);

            if (h4 !== 64) {
              result.push(o3);
            }
          }
        } while (i < data.length);

        return result;
      }

      function xor_encrypt(key, data) {
        key = stringToUtf8ByteArray(key);
        return stringToUtf8ByteArray(data).map(function (c, i) {
          return c ^ Math.floor(i % key.length);
        });
      }

      function xor_decrypt(key, data) {
        key = stringToUtf8ByteArray(key);
        return utf8ByteArrayToString(data.map(function (c, i) {
          return c ^ Math.floor(i % key.length);
        }));
      }

      function xor_encrypt_new(key, data) {
        key = stringToUtf8ByteArray(key);
        return stringToUtf8ByteArray(data).map(function (c, i) {
          return c ^ key[Math.floor(i % key.length)];
        });
      }

      function xor_decrypt_new(key, data) {
        key = stringToUtf8ByteArray(key);
        return utf8ByteArrayToString(data.map(function (c, i) {
          return c ^ key[Math.floor(i % key.length)];
        }));
      }

      var xorCipher = exports('default', new XORCipher());

      cclegacy._RF.pop();
    }
  };
});

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});